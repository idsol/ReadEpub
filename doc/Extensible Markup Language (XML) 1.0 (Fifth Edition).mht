From: <Saved by UnMHT>
Subject: =?iso-2022-jp?B?RXh0ZW5zaWJsZSBNYXJrdXAgTGFuZ3VhZ2UgKFhNTCkgMS4wIChGaWZ0aCBFZGl0aW9uKQ==?=
Date: Mon, Oct 10 2011 23:29:08 GMT+0800
MIME-Version: 1.0
Content-Type: multipart/related;
	boundary="----=_NextPart_000_0000_9D684512.DD4AC728";
	type="text/html"

------=_NextPart_000_0000_9D684512.DD4AC728
Content-Type: text/html; charset="UTF-8"
Content-Transfer-Encoding: quoted-printable
Content-Location: http://www.w3.org/TR/REC-xml/

=EF=BB=BF<!DOCTYPE HTML PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "ht=
tp://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html lang=3D"EN" xmlns=3D"http://www.w3.org/1999/xhtml"><head>

<meta content=3D"text/html; charset=3Dutf-8" http-equiv=3D"Content-Type"><t=
itle>Extensible Markup Language (XML) 1.0 (Fifth Edition)</title><style typ=
e=3D"text/css">
code           { font-family: monospace; }

div.constraint,
div.issue,
div.note,
div.notice     { margin-left: 2em; }

ol.enumar      { list-style-type: decimal; }
ol.enumla      { list-style-type: lower-alpha; }
ol.enumlr      { list-style-type: lower-roman; }
ol.enumua      { list-style-type: upper-alpha; }
ol.enumur      { list-style-type: upper-roman; }


div.exampleInner pre { margin-left: 1em;
                       margin-top: 0em; margin-bottom: 0em}
div.exampleOuter {border: 4px double gray;
                  margin: 0em; padding: 0em}
div.exampleInner { background-color: #d5dee3;
                   border-top-width: 4px;
                   border-top-style: double;
                   border-top-color: #d3d3d3;
                   border-bottom-width: 4px;
                   border-bottom-style: double;
                   border-bottom-color: #d3d3d3;
                   padding: 4px; margin: 0em }
div.exampleWrapper { margin: 4px }
div.exampleHeader { font-weight: bold;
                    margin: 4px}

em.rfc2119 { text-transform: lowercase;
             font-variant: small-caps;
             font-style: normal; }
</style><link href=3D"http://www.w3.org/StyleSheets/TR/W3C-REC.css" type=3D=
"text/css" rel=3D"stylesheet"></link><base href=3D"http://www.w3.org/TR/REC=
-xml/"></base></head><body><div class=3D"head"><p><a href=3D"http://www.w3.=
org/"><img width=3D"72" height=3D"48" alt=3D"W3C" src=3D"http://www.w3.org/=
Icons/w3c_home"></a></p>
<h1><a id=3D"title" name=3D"title">Extensible Markup Language (XML) 1.0 (Fi=
fth Edition)</a></h1>
<h2><a id=3D"w3c-doctype" name=3D"w3c-doctype">W3C Recommendation 26 Novemb=
er 2008</a></h2><dl><dt><a id=3D"w3c-doctype" name=3D"w3c-doctype">This ver=
sion:</a></dt><dd>
<a id=3D"w3c-doctype" name=3D"w3c-doctype">			</a><a href=3D"http://www.w3.=
org/TR/2008/REC-xml-20081126/">http://www.w3.org/TR/2008/REC-xml-20081126/<=
/a>
		</dd><dt>Latest version:</dt><dd>
			<a href=3D"http://www.w3.org/TR/xml/">http://www.w3.org/TR/xml/</a>
		</dd><dt>Previous versions:</dt><dd>
   <a href=3D"http://www.w3.org/TR/2008/PER-xml-20080205/">http://www.w3.or=
g/TR/2008/PER-xml-20080205/</a>
  <br>
   <a href=3D"http://www.w3.org/TR/2006/REC-xml-20060816/">http://www.w3.or=
g/TR/2006/REC-xml-20060816/</a>
		</dd><dt>Editors:</dt><dd>Tim Bray, Textuality and Netscape <a href=3D"ma=
ilto:tbray@textuality.com">&lt;tbray@textuality.com&gt;</a></dd><dd>Jean Pa=
oli, Microsoft <a href=3D"mailto:jeanpa@microsoft.com">&lt;jeanpa@microsoft=
.com&gt;</a></dd><dd>C. M. Sperberg-McQueen, W3C <a href=3D"mailto:cmsmcq@w=
3.org">&lt;cmsmcq@w3.org&gt;</a></dd><dd>Eve Maler, Sun Microsystems, Inc.=
 <a href=3D"mailto:elm@east.sun.com">&lt;eve.maler@east.sun.com&gt;</a></dd=
><dd>Fran=C3=A7ois Yergeau</dd></dl><p>Please refer to the <a href=3D"http:=
//www.w3.org/XML/xml-V10-5e-errata"><strong>errata</strong></a> for this do=
cument, which may
      include some normative corrections.</p><p>The <a href=3D"http://www.w=
3.org/XML/xml-V10-4e-errata">previous errata</a> for this document, are als=
o available.</p><p>See also <a href=3D"http://www.w3.org/2003/03/Translatio=
ns/byTechnology?technology=3Dxml"><strong>translations</strong></a>.</p><p>=
This document is also available in these non-normative formats: <a href=3D"=
REC-xml-20081126.xml">XML</a> and&nbsp;<a href=3D"REC-xml-20081126-review.h=
tml">XHTML with color-coded revision indicators</a>.</p><p class=3D"copyrig=
ht"><a href=3D"http://www.w3.org/Consortium/Legal/ipr-notice#Copyright">Cop=
yright</a>&nbsp;=C2=A9&nbsp;2008&nbsp;<a href=3D"http://www.w3.org/"><acron=
ym title=3D"World Wide Web Consortium">W3C</acronym></a><sup>=C2=AE</sup>=
 (<a href=3D"http://www.csail.mit.edu/"><acronym title=3D"Massachusetts Ins=
titute of Technology">MIT</acronym></a>, <a href=3D"http://www.ercim.org/">=
<acronym title=3D"European Research Consortium for Informatics and Mathemat=
ics">ERCIM</acronym></a>, <a href=3D"http://www.keio.ac.jp/">Keio</a>), All=
 Rights Reserved. W3C <a href=3D"http://www.w3.org/Consortium/Legal/ipr-not=
ice#Legal_Disclaimer">liability</a>, <a href=3D"http://www.w3.org/Consortiu=
m/Legal/ipr-notice#W3C_Trademarks">trademark</a> and <a href=3D"http://www.=
w3.org/Consortium/Legal/copyright-documents">document use</a> rules apply.<=
/p></div><hr><div>
<h2><a id=3D"abstract" name=3D"abstract">Abstract</a></h2><p><a id=3D"abstr=
act" name=3D"abstract">The Extensible Markup Language (XML) is a subset of=
 SGML that is completely
described in this document. Its goal is to enable generic SGML to be served,
received, and processed on the Web in the way that is now possible with HTM=
L.
XML has been designed for ease of implementation and for interoperability
with both SGML and HTML.</a></p></div><div>
<h2><a id=3D"status" name=3D"status">Status of this Document</a></h2><p><a=
 id=3D"status" name=3D"status"><em>This section describes the status of thi=
s document at the time of its publication.
				Other documents may supersede this document. A list of current W3C publ=
ications and the
				latest revision of this technical report can be found in the </em></a><=
em><a href=3D"http://www.w3.org/TR/">W3C technical reports index</a> at
				http://www.w3.org/TR/.</em></p><p>This document specifies a syntax crea=
ted by subsetting an existing, widely
				used international text processing standard (Standard Generalized Marku=
p Language,
				ISO 8879:1986(E) as amended and corrected) for use on the World Wide We=
b.
				It is a product of the <a href=3D"http://www.w3.org/XML/Core/">XML Core=
 Working Group</a>
				as part of the <a href=3D"http://www.w3.org/XML/Activity">XML Activity<=
/a>.
				The English version of this specification is the only normative version=
. However,
				for translations of this document, see <a href=3D"http://www.w3.org/200=
3/03/Translations/byTechnology?technology=3Dxml">http://www.w3.org/2003/03/=
Translations/byTechnology?technology=3Dxml</a>.</p><p>This document is a <a=
 href=3D"http://www.w3.org/2005/10/Process-20051014/tr.html#q74">W3C Recomm=
endation</a>. This fifth edition is <em>not</em> a new version of XML. As=
 a convenience to readers,
				it incorporates the changes dictated by the accumulated errata (availab=
le at
				<a href=3D"http://www.w3.org/XML/xml-V10-4e-errata">http://www.w3.org/X=
ML/xml-V10-4e-errata</a>) to the <a href=3D"http://www.w3.org/TR/2006/REC-x=
ml-20060816/">Fourth
				Edition of XML 1.0, dated 16 August 2006</a>.  In particular, erratum=
 <a href=3D"http://www.w3.org/XML/xml-V10-4e-errata#E09">[E09]</a>
				relaxes the restrictions on element and attribute names, thereby provid=
ing in XML 1.0 the major end user benefit
				currently achievable only by using XML
1.1.  As a consequence, many possible
 documents which were not well-formed according to previous editions of this
 specification are now well-formed, and previously invalid documents
using the newly-allowed name characters in, for example, ID
attributes, are now valid.</p><p>This edition supersedes the previous <a hr=
ef=3D"http://www.w3.org/TR/2006/REC-xml-20060816/">W3C Recommendation
				of 16 August 2006</a>.</p><p>Please report errors in this document to
the public <a href=3D"mailto:xml-editor@w3.org">xml-editor@w3.org</a> mail=
 list; public
				<a href=3D"http://lists.w3.org/Archives/Public/xml-editor/">archives</a=
> are available. For the convenience of readers,
				an <a href=3D"REC-xml-20081126-review.html">XHTML version with color-co=
ded revision indicators</a> is
				also provided; this version highlights each change due to an erratum pu=
blished in the
				<a href=3D"http://www.w3.org/XML/xml-V10-4e-errata">errata
list</a> for the previous edition, together with a link to the particular
				erratum in that list. Most of the
errata in the list provide a rationale for the change.  The errata
list for this fifth edition is available at <a href=3D"http://www.w3.org/XM=
L/xml-V10-5e-errata">http://www.w3.org/XML/xml-V10-5e-errata</a>.</p><p>An=
 implementation report is available at <a href=3D"http://www.w3.org/XML/200=
8/01/xml10-5e-implementation.html">http://www.w3.org/XML/2008/01/xml10-5e-i=
mplementation.html</a>.
				A <a href=3D"http://www.w3.org/XML/Test/">Test Suite</a> is maintained=
 to help assessing conformance to this specification.</p><p>This document=
 has been reviewed by W3C Members, by software developers, and by other W3C=
 groups and interested parties, and is endorsed by the Director as a W3C Re=
commendation. It is a stable document and may be used as reference material=
 or cited from another document. W3C&#x27;s role in making the Recommendati=
on is to draw attention to the specification and to promote its widespread=
 deployment. This enhances the functionality and interoperability of the We=
b.</p><p>W3C maintains a <a rel=3D"disclosure" href=3D"http://www.w3.org/20=
02/08/xmlcore-IPR-statements">public list of
				any patent disclosures</a> made in connection with the deliverables of
				the group; that page also includes instructions for disclosing a patent.
				An individual who has actual knowledge of a patent which the individual
				believes contains <a href=3D"http://www.w3.org/Consortium/Patent-Policy=
-20040205/#def-essential">Essential
				Claim(s)</a> must disclose the information in accordance with=20
				<a href=3D"http://www.w3.org/Consortium/Patent-Policy-20040205/#sec-Dis=
closure">section 6 of the W3C Patent Policy</a>.</p></div><div class=3D"toc=
">
<h2><a id=3D"contents" name=3D"contents">Table of Contents</a></h2><p class=
=3D"toc"><a id=3D"contents" name=3D"contents">1 </a><a href=3D"#sec-intro">=
Introduction</a><br>
&nbsp;&nbsp;&nbsp;&nbsp;1.1 <a href=3D"#sec-origin-goals">Origin and Goals<=
/a><br>
&nbsp;&nbsp;&nbsp;&nbsp;1.2 <a href=3D"#sec-terminology">Terminology</a><br>
2 <a href=3D"#sec-documents">Documents</a><br>
&nbsp;&nbsp;&nbsp;&nbsp;2.1 <a href=3D"#sec-well-formed">Well-Formed XML Do=
cuments</a><br>
&nbsp;&nbsp;&nbsp;&nbsp;2.2 <a href=3D"#charsets">Characters</a><br>
&nbsp;&nbsp;&nbsp;&nbsp;2.3 <a href=3D"#sec-common-syn">Common Syntactic Co=
nstructs</a><br>
&nbsp;&nbsp;&nbsp;&nbsp;2.4 <a href=3D"#syntax">Character Data and Markup</=
a><br>
&nbsp;&nbsp;&nbsp;&nbsp;2.5 <a href=3D"#sec-comments">Comments</a><br>
&nbsp;&nbsp;&nbsp;&nbsp;2.6 <a href=3D"#sec-pi">Processing Instructions</a>=
<br>
&nbsp;&nbsp;&nbsp;&nbsp;2.7 <a href=3D"#sec-cdata-sect">CDATA Sections</a><=
br>
&nbsp;&nbsp;&nbsp;&nbsp;2.8 <a href=3D"#sec-prolog-dtd">Prolog and Document=
 Type Declaration</a><br>
&nbsp;&nbsp;&nbsp;&nbsp;2.9 <a href=3D"#sec-rmd">Standalone Document Declar=
ation</a><br>
&nbsp;&nbsp;&nbsp;&nbsp;2.10 <a href=3D"#sec-white-space">White Space Handl=
ing</a><br>
&nbsp;&nbsp;&nbsp;&nbsp;2.11 <a href=3D"#sec-line-ends">End-of-Line Handlin=
g</a><br>
&nbsp;&nbsp;&nbsp;&nbsp;2.12 <a href=3D"#sec-lang-tag">Language Identificat=
ion</a><br>
3 <a href=3D"#sec-logical-struct">Logical Structures</a><br>
&nbsp;&nbsp;&nbsp;&nbsp;3.1 <a href=3D"#sec-starttags">Start-Tags, End-Tags=
, and Empty-Element Tags</a><br>
&nbsp;&nbsp;&nbsp;&nbsp;3.2 <a href=3D"#elemdecls">Element Type Declaration=
s</a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3.2.1 <a href=3D"#sec-eleme=
nt-content">Element Content</a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3.2.2 <a href=3D"#sec-mixed=
-content">Mixed Content</a><br>
&nbsp;&nbsp;&nbsp;&nbsp;3.3 <a href=3D"#attdecls">Attribute-List Declaratio=
ns</a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3.3.1 <a href=3D"#sec-attri=
bute-types">Attribute Types</a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3.3.2 <a href=3D"#sec-attr-=
defaults">Attribute Defaults</a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3.3.3 <a href=3D"#AVNormali=
ze">Attribute-Value Normalization</a><br>
&nbsp;&nbsp;&nbsp;&nbsp;3.4 <a href=3D"#sec-condition-sect">Conditional Sec=
tions</a><br>
4 <a href=3D"#sec-physical-struct">Physical Structures</a><br>
&nbsp;&nbsp;&nbsp;&nbsp;4.1 <a href=3D"#sec-references">Character and Entit=
y References</a><br>
&nbsp;&nbsp;&nbsp;&nbsp;4.2 <a href=3D"#sec-entity-decl">Entity Declaration=
s</a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4.2.1 <a href=3D"#sec-inter=
nal-ent">Internal Entities</a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4.2.2 <a href=3D"#sec-exter=
nal-ent">External Entities</a><br>
&nbsp;&nbsp;&nbsp;&nbsp;4.3 <a href=3D"#TextEntities">Parsed Entities</a><b=
r>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4.3.1 <a href=3D"#sec-TextD=
ecl">The Text Declaration</a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4.3.2 <a href=3D"#wf-entiti=
es">Well-Formed Parsed Entities</a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4.3.3 <a href=3D"#charencod=
ing">Character Encoding in Entities</a><br>
&nbsp;&nbsp;&nbsp;&nbsp;4.4 <a href=3D"#entproc">XML Processor Treatment of=
 Entities and References</a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4.4.1 <a href=3D"#not-recog=
nized">Not Recognized</a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4.4.2 <a href=3D"#included"=
>Included</a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4.4.3 <a href=3D"#include-i=
f-valid">Included If Validating</a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4.4.4 <a href=3D"#forbidden=
">Forbidden</a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4.4.5 <a href=3D"#inliteral=
">Included in Literal</a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4.4.6 <a href=3D"#notify">N=
otify</a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4.4.7 <a href=3D"#bypass">B=
ypassed</a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4.4.8 <a href=3D"#as-PE">In=
cluded as PE</a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4.4.9 <a href=3D"#error">Er=
ror</a><br>
&nbsp;&nbsp;&nbsp;&nbsp;4.5 <a href=3D"#intern-replacement">Construction of=
 Entity Replacement Text</a><br>
&nbsp;&nbsp;&nbsp;&nbsp;4.6 <a href=3D"#sec-predefined-ent">Predefined Enti=
ties</a><br>
&nbsp;&nbsp;&nbsp;&nbsp;4.7 <a href=3D"#Notations">Notation Declarations</a=
><br>
&nbsp;&nbsp;&nbsp;&nbsp;4.8 <a href=3D"#sec-doc-entity">Document Entity</a>=
<br>
5 <a href=3D"#sec-conformance">Conformance</a><br>
&nbsp;&nbsp;&nbsp;&nbsp;5.1 <a href=3D"#proc-types">Validating and Non-Vali=
dating Processors</a><br>
&nbsp;&nbsp;&nbsp;&nbsp;5.2 <a href=3D"#safe-behavior">Using XML Processors=
</a><br>
6 <a href=3D"#sec-notation">Notation</a><br>
</p>
<h3><a id=3D"appendices" name=3D"appendices">Appendices</a></h3><p class=3D=
"toc"><a id=3D"appendices" name=3D"appendices">A </a><a href=3D"#sec-biblio=
graphy">References</a><br>
&nbsp;&nbsp;&nbsp;&nbsp;A.1 <a href=3D"#sec-existing-stds">Normative Refere=
nces</a><br>
&nbsp;&nbsp;&nbsp;&nbsp;A.2 <a href=3D"#null">Other References</a><br>
B <a href=3D"#CharClasses">Character Classes</a><br>
C <a href=3D"#sec-xml-and-sgml">XML and SGML</a> (Non-Normative)<br>
D <a href=3D"#sec-entexpand">Expansion of Entity and Character References</=
a> (Non-Normative)<br>
E <a href=3D"#determinism">Deterministic Content Models</a> (Non-Normative)=
<br>
F <a href=3D"#sec-guessing">Autodetection of Character Encodings</a> (Non-N=
ormative)<br>
&nbsp;&nbsp;&nbsp;&nbsp;F.1 <a href=3D"#sec-guessing-no-ext-info">Detection=
 Without External Encoding Information</a><br>
&nbsp;&nbsp;&nbsp;&nbsp;F.2 <a href=3D"#sec-guessing-with-ext-info">Priorit=
ies in the Presence of External Encoding Information</a><br>
G <a href=3D"#sec-xml-wg">W3C XML Working Group</a> (Non-Normative)<br>
H <a href=3D"#sec-core-wg">W3C XML Core Working Group</a> (Non-Normative)<b=
r>
I <a href=3D"#prod-notes">Production Notes</a> (Non-Normative)<br>
J <a href=3D"#sec-suggested-names">Suggestions for XML Names</a> (Non-Norma=
tive)<br>
</p></div><hr><div class=3D"body"><div class=3D"div1">
<h2><a id=3D"sec-intro" name=3D"sec-intro">1 Introduction</a></h2><p><a id=
=3D"sec-intro" name=3D"sec-intro">Extensible Markup Language, abbreviated=
 XML, describes a class of data
objects called </a><a href=3D"#dt-xml-doc" title=3D"XML Document">XML docum=
ents</a> and partially
describes the behavior of computer programs which process them. XML is an
application profile or restricted form of SGML, the Standard Generalized Ma=
rkup
Language <a href=3D"#ISO8879">[ISO 8879]</a>. By construction, XML document=
s are conforming
SGML documents.</p><p>XML documents are made up of storage units called <a=
 href=3D"#dt-entity" title=3D"Entity">entities</a>,
which contain either parsed or unparsed data. Parsed data is made up of <a=
 href=3D"#dt-character" title=3D"Character">characters</a>, some of which=
 form <a href=3D"#dt-chardata" title=3D"Character Data">character
data</a>, and some of which form <a href=3D"#dt-markup" title=3D"Markup">ma=
rkup</a>.
Markup encodes a description of the document&#x27;s storage layout and logi=
cal
structure. XML provides a mechanism to impose constraints on the storage la=
yout
and logical structure.</p><p>
				[<a title=3D"XML Processor" id=3D"dt-xml-proc" name=3D"dt-xml-proc">Def=
inition</a>: A software module called
an <b>XML processor</b> is used to read XML documents and provide access
to their content and structure.]
				[<a title=3D"Application" id=3D"dt-app" name=3D"dt-app">Definition</a>:=
 It
is assumed that an XML processor is doing its work on behalf of another mod=
ule,
called the <b>application</b>.] This specification describes
the required behavior of an XML processor in terms of how it must read XML
data and the information it must provide to the application.</p><div class=
=3D"div2">
<h3><a id=3D"sec-origin-goals" name=3D"sec-origin-goals">1.1 Origin and Goa=
ls</a></h3><p><a id=3D"sec-origin-goals" name=3D"sec-origin-goals">XML was=
 developed by an XML Working Group (originally known as the SGML
Editorial Review Board) formed under the auspices of the World Wide Web Con=
sortium
(W3C) in 1996. It was chaired by Jon Bosak of Sun Microsystems with the act=
ive
participation of an XML Special Interest Group (previously known as the SGML
Working Group) also organized by the W3C. The membership of the XML Working
Group is given in an appendix. Dan Connolly served as the Working Group&#x2=
7;s contact with
the W3C.</a></p><p><a id=3D"sec-origin-goals" name=3D"sec-origin-goals">The=
 design goals for XML are:</a></p><ol class=3D"enumar"><li><p><a id=3D"sec-=
origin-goals" name=3D"sec-origin-goals">XML shall be straightforwardly usab=
le over the Internet.</a></p></li><li><p><a id=3D"sec-origin-goals" name=3D=
"sec-origin-goals">XML shall support a wide variety of applications.</a></p=
></li><li><p><a id=3D"sec-origin-goals" name=3D"sec-origin-goals">XML shall=
 be compatible with SGML.</a></p></li><li><p><a id=3D"sec-origin-goals" nam=
e=3D"sec-origin-goals">It shall be easy to write programs which process XML=
 documents.</a></p></li><li><p><a id=3D"sec-origin-goals" name=3D"sec-origi=
n-goals">The number of optional features in XML is to be kept to the absolu=
te
minimum, ideally zero.</a></p></li><li><p><a id=3D"sec-origin-goals" name=
=3D"sec-origin-goals">XML documents should be human-legible and reasonably=
 clear.</a></p></li><li><p><a id=3D"sec-origin-goals" name=3D"sec-origin-go=
als">The XML design should be prepared quickly.</a></p></li><li><p><a id=3D=
"sec-origin-goals" name=3D"sec-origin-goals">The design of XML shall be for=
mal and concise.</a></p></li><li><p><a id=3D"sec-origin-goals" name=3D"sec-=
origin-goals">XML documents shall be easy to create.</a></p></li><li><p><a=
 id=3D"sec-origin-goals" name=3D"sec-origin-goals">Terseness in XML markup=
 is of minimal importance.</a></p></li></ol><p><a id=3D"sec-origin-goals"=
 name=3D"sec-origin-goals">This specification, together with associated sta=
ndards (Unicode </a><a href=3D"#Unicode">[Unicode]</a>
					and ISO/IEC 10646 <a href=3D"#ISO10646">[ISO/IEC 10646]</a> for charac=
ters, Internet <span>BCP 47</span>
					<a href=3D"#RFC1766">[IETF BCP 47]</a> <span>and the Language Subtag=
 Registry <a href=3D"#IANA-LANGCODES">[IANA-LANGCODES]</a></span> for langu=
age
					identification tags), provides
all the information necessary to understand XML Version 1.0 and
construct computer programs to process it.</p><p>This version of the XML sp=
ecification may be distributed freely, as long as
all text and legal notices remain intact.</p></div><div class=3D"div2">
<h3><a id=3D"sec-terminology" name=3D"sec-terminology">1.2 Terminology</a><=
/h3><p><a id=3D"sec-terminology" name=3D"sec-terminology">The terminology=
 used to describe XML documents is defined in the body of
this specification. The key words <em title=3D"Keyword in RFC 2119 context"=
 class=3D"rfc2119">MUST</em>, <em title=3D"Keyword in RFC 2119 context" cla=
ss=3D"rfc2119">MUST NOT</em>,
<em title=3D"Keyword in RFC 2119 context" class=3D"rfc2119">REQUIRED</em>,=
 <em title=3D"Keyword in RFC 2119 context" class=3D"rfc2119">SHALL</em>, <e=
m title=3D"Keyword in RFC 2119 context" class=3D"rfc2119">SHALL NOT</em>,
<em title=3D"Keyword in RFC 2119 context" class=3D"rfc2119">SHOULD</em>, <e=
m title=3D"Keyword in RFC 2119 context" class=3D"rfc2119">SHOULD NOT</em>,=
 <em title=3D"Keyword in RFC 2119 context" class=3D"rfc2119">RECOMMENDED</e=
m>,
<em title=3D"Keyword in RFC 2119 context" class=3D"rfc2119">MAY</em>, and=
 <em title=3D"Keyword in RFC 2119 context" class=3D"rfc2119">OPTIONAL</em>,=
 when <em title=3D"Keyword in RFC 2119 context" class=3D"rfc2119">EMPHASIZE=
D</em>,
are to be interpreted as described in </a><a href=3D"#rfc2119">[IETF RFC 21=
19]</a>. In addition, the terms defined
in the following list are used in building
those definitions and in describing the actions of an XML processor:</p><dl=
><dt class=3D"label">error</dt><dd><p>
									[<a title=3D"Error" id=3D"dt-error" name=3D"dt-error">Definition</=
a>: A violation of the rules of this specification;
results are undefined. Unless otherwise specified, failure to observe a pre=
scription of this specification indicated by one of the keywords <em title=
=3D"Keyword in RFC 2119 context" class=3D"rfc2119">MUST</em>, <em title=3D"=
Keyword in RFC 2119 context" class=3D"rfc2119">REQUIRED</em>, <em title=3D"=
Keyword in RFC 2119 context" class=3D"rfc2119">MUST NOT</em>, <em title=3D"=
Keyword in RFC 2119 context" class=3D"rfc2119">SHALL</em> and <em title=3D"=
Keyword in RFC 2119 context" class=3D"rfc2119">SHALL NOT</em> is an error.=
  Conforming software <em title=3D"Keyword in RFC 2119 context" class=3D"rf=
c2119">MAY</em> detect and report an error
and <em title=3D"Keyword in RFC 2119 context" class=3D"rfc2119">MAY</em> re=
cover from it.]
								</p></dd><dt class=3D"label">fatal error</dt><dd><p>
									[<a title=3D"Fatal Error" id=3D"dt-fatal" name=3D"dt-fatal">Defini=
tion</a>: An error which a conforming <a href=3D"#dt-xml-proc" title=3D"XML=
 Processor">XML processor</a>
										<em title=3D"Keyword in RFC 2119 context" class=3D"rfc2119">MUST<=
/em> detect and report to the application.
After encountering a fatal error, the processor <em title=3D"Keyword in RFC=
 2119 context" class=3D"rfc2119">MAY</em> continue processing the
data to search for further errors and <em title=3D"Keyword in RFC 2119 cont=
ext" class=3D"rfc2119">MAY</em> report such errors to the application.
In order to support correction of errors, the processor <em title=3D"Keywor=
d in RFC 2119 context" class=3D"rfc2119">MAY</em> make unprocessed
data from the document (with intermingled character data and markup) availa=
ble
to the application. Once a fatal error is detected, however, the processor
<em title=3D"Keyword in RFC 2119 context" class=3D"rfc2119">MUST NOT</em>=
 continue normal processing (i.e., it <em title=3D"Keyword in RFC 2119 cont=
ext" class=3D"rfc2119">MUST NOT</em> continue to pass character
data and information about the document&#x27;s logical structure to the app=
lication
in the normal way).]
								</p></dd><dt class=3D"label">at user option</dt><dd><p>
									[<a title=3D"At user option" id=3D"dt-atuseroption" name=3D"dt-atu=
seroption">Definition</a>: Conforming software
<em title=3D"Keyword in RFC 2119 context" class=3D"rfc2119">MAY</em> or <em=
 title=3D"Keyword in RFC 2119 context" class=3D"rfc2119">MUST</em> (dependi=
ng on the modal verb in the sentence) behave as described;
if it does, it <em title=3D"Keyword in RFC 2119 context" class=3D"rfc2119">=
MUST</em> provide users a means to enable or disable the behavior
described.]
								</p></dd><dt class=3D"label">validity constraint</dt><dd><p>
									[<a title=3D"Validity constraint" id=3D"dt-vc" name=3D"dt-vc">Defi=
nition</a>: A rule which applies to
all <a href=3D"#dt-valid" title=3D"Validity">valid</a> XML documents. Viola=
tions of validity
constraints are errors; they <em title=3D"Keyword in RFC 2119 context" clas=
s=3D"rfc2119">MUST</em>, at user option, be reported by <a href=3D"#dt-vali=
dating" title=3D"Validating Processor">validating XML processors</a>.]
								</p></dd><dt class=3D"label">well-formedness constraint</dt><dd><p>
									[<a title=3D"Well-formedness constraint" id=3D"dt-wfc" name=3D"dt-=
wfc">Definition</a>: A rule which applies
to all <a href=3D"#dt-wellformed" title=3D"Well-Formed">well-formed</a> XML=
 documents. Violations
of well-formedness constraints are <a href=3D"#dt-fatal" title=3D"Fatal Err=
or">fatal errors</a>.]
								</p></dd><dt class=3D"label">match</dt><dd><p>
									[<a title=3D"match" id=3D"dt-match" name=3D"dt-match">Definition</=
a>: (Of strings or names:) Two strings
or names being compared are identical. Characters with multiple possible
representations in ISO/IEC 10646 (e.g. characters with both precomposed and
base+diacritic forms) match only if they have the same representation in bo=
th
strings. No
case folding is performed. (Of strings and rules in the grammar:) A string
matches a grammatical production if it belongs to the language generated by
that production. (Of content and content models:) An element matches its de=
claration
when it conforms in the fashion described in the constraint <b>[VC: <a href=
=3D"#elementvalid">Element Valid</a>]</b>.]
								</p></dd><dt class=3D"label">for compatibility</dt><dd><p>
									[<a title=3D"For Compatibility" id=3D"dt-compat" name=3D"dt-compat=
">Definition</a>: Marks
a sentence describing a feature of XML included solely to ensure
that XML remains compatible with SGML.]
								</p></dd><dt class=3D"label">for interoperability</dt><dd><p>
									[<a title=3D"For interoperability" id=3D"dt-interop" name=3D"dt-in=
terop">Definition</a>: Marks
a sentence describing a non-binding recommendation included to increase
the chances that XML documents can be processed by the existing installed
base of SGML processors which predate the WebSGML Adaptations Annex to ISO=
 8879.]
								</p></dd></dl><p>
				</p></div></div><div class=3D"div1">
<h2><a id=3D"sec-documents" name=3D"sec-documents">2 Documents</a></h2><p>
<a id=3D"sec-documents" name=3D"sec-documents">				[</a><a title=3D"XML Doc=
ument" id=3D"dt-xml-doc" name=3D"dt-xml-doc">Definition</a>:  A data object=
 is an <b>XML
document</b> if it is <a href=3D"#dt-wellformed" title=3D"Well-Formed">well=
-formed</a>,
as defined in this specification. In addition, the XML document is
<a href=3D"#dt-valid" title=3D"Validity">valid</a> if it meets certain furt=
her constraints.]
			</p><p>Each XML document has both a logical and a physical structure. Ph=
ysically,
the document is composed of units called <a href=3D"#dt-entity" title=3D"En=
tity">entities</a>.
An entity may
				<a href=3D"#dt-entref" title=3D"Entity Reference">refer</a> to other en=
tities to
cause their inclusion in the document. A document begins in a &quot;root&qu=
ot;
or <a href=3D"#dt-docent" title=3D"Document Entity">document entity</a>. Lo=
gically, the document
is composed of declarations, elements, comments, character references, and
processing instructions, all of which are indicated in the document by expl=
icit
markup. The logical and physical structures <em title=3D"Keyword in RFC 211=
9 context" class=3D"rfc2119">MUST</em> nest properly, as described
in <a href=3D"#wf-entities"><b>4.3.2 Well-Formed Parsed Entities</b></a>.</=
p><div class=3D"div2">
<h3><a id=3D"sec-well-formed" name=3D"sec-well-formed">2.1 Well-Formed XML=
 Documents</a></h3><p>
<a id=3D"sec-well-formed" name=3D"sec-well-formed">					[</a><a title=3D"We=
ll-Formed" id=3D"dt-wellformed" name=3D"dt-wellformed">Definition</a>:  A=
 textual object is a <b>well-formed</b>
XML document if:]
				</p><ol class=3D"enumar"><li><p>Taken as a whole, it matches the produc=
tion labeled <a href=3D"#NT-document">document</a>.</p></li><li><p>It meets=
 all the well-formedness constraints given in this specification.</p></li><=
li><p>Each of the <a href=3D"#dt-parsedent" title=3D"Text Entity">parsed en=
tities</a>
which is referenced directly or indirectly within the document is <a href=
=3D"#dt-wellformed" title=3D"Well-Formed">well-formed</a>.</p></li></ol>
<h5><a id=3D"document" name=3D"document">Document</a></h5><table summary=3D=
"Scrap" class=3D"scrap"><tbody><tr valign=3D"baseline"><td><a id=3D"NT-docu=
ment" name=3D"NT-document">[1]&nbsp;&nbsp;&nbsp;</a></td><td><code>document=
</code></td><td>&nbsp;&nbsp;&nbsp;::=3D&nbsp;&nbsp;&nbsp;</td><td><code>
							<a href=3D"#NT-prolog">prolog</a>
							<a href=3D"#NT-element">element</a>
							<a href=3D"#NT-Misc">Misc</a>*</code></td></tr></tbody></table><p><a=
 id=3D"document" name=3D"document">Matching the </a><a href=3D"#NT-document=
">document</a> production implies that:</p><ol class=3D"enumar"><li><p>It=
 contains one or more <a href=3D"#dt-element" title=3D"Element">elements</a=
>.</p></li><li><p>
							[<a title=3D"Root Element" id=3D"dt-root" name=3D"dt-root">Definitio=
n</a>: There is exactly one element,
called the <b>root</b>, or document element, no part of which appears
in the <a href=3D"#dt-content" title=3D"Content">content</a> of any other=
 element.] For
all other elements, if the <a href=3D"#dt-stag" title=3D"Start-Tag">start-t=
ag</a> is in
the content of another element, the <a href=3D"#dt-etag" title=3D"End Tag">=
end-tag</a>
is in the content of the same element. More simply stated, the elements,
delimited by start- and end-tags, nest properly within each other.</p></li>=
</ol><p>
					[<a title=3D"Parent/Child" id=3D"dt-parentchild" name=3D"dt-parentchil=
d">Definition</a>: As a consequence of this,
for each non-root element <code>C</code> in the document, there is one othe=
r element <code>P</code>
in the document such that <code>C</code> is in the content of <code>P</code=
>, but
is not in the content of any other element that is in the content of <code>=
P</code>. <code>P</code>
is referred to as the <b>parent</b> of <code>C</code>, and <code>C</code> as
a <b>child</b> of <code>P</code>.]
				</p></div><div class=3D"div2">
<h3><a id=3D"charsets" name=3D"charsets">2.2 Characters</a></h3><p>
<a id=3D"charsets" name=3D"charsets">					[</a><a title=3D"Text" id=3D"dt-t=
ext" name=3D"dt-text">Definition</a>: A parsed entity contains <b>text</b>,
a sequence of <a href=3D"#dt-character" title=3D"Character">characters</a>,=
 which may
represent markup or character data.]
					[<a title=3D"Character" id=3D"dt-character" name=3D"dt-character">Defi=
nition</a>: A <b>character</b>
is an atomic unit of text as specified by ISO/IEC 10646:2000 <a href=3D"#IS=
O10646">[ISO/IEC 10646]</a>. Legal characters are tab, carriage
return, line feed, and the legal characters
of Unicode and ISO/IEC 10646. The
versions of these standards cited in <a href=3D"#sec-existing-stds"><b>A.1=
 Normative References</b></a> were
current at the time this document was prepared. New characters may be added
to these standards by amendments or new editions. Consequently, XML process=
ors
<em title=3D"Keyword in RFC 2119 context" class=3D"rfc2119">MUST</em> accep=
t any character in the range specified for <a href=3D"#NT-Char">Char</a>.
]
				</p>
<h5><a id=3D"char32" name=3D"char32">Character Range</a></h5><table summary=
=3D"Scrap" class=3D"scrap"><tbody><tr valign=3D"baseline"><td><a id=3D"NT-C=
har" name=3D"NT-Char">[2]&nbsp;&nbsp;&nbsp;</a></td><td><code>Char</code></=
td><td>&nbsp;&nbsp;&nbsp;::=3D&nbsp;&nbsp;&nbsp;</td><td><code>#x9 | #xA |=
 #xD | [#x20-#xD7FF] | [#xE000-#xFFFD] | [#x10000-#x10FFFF]</code></td><td>=
<i>/* any Unicode character, excluding the surrogate blocks, FFFE, and FFFF=
. */</i></td></tr></tbody></table><p><a id=3D"char32" name=3D"char32">The=
 mechanism for encoding character code points into bit patterns may
vary from entity to entity. All XML processors <em title=3D"Keyword in RFC=
 2119 context" class=3D"rfc2119">MUST</em> accept the UTF-8 and UTF-16
encodings of Unicode <span></span></a><a href=3D"#Unicode">[Unicode]</a>;
the mechanisms for signaling which of the two is in use,
or for bringing other encodings into play, are discussed later, in <a href=
=3D"#charencoding"><b>4.3.3 Character Encoding in Entities</b></a>.</p><div=
 class=3D"note"><p class=3D"prefix"><b>Note:</b></p><p>Document authors are=
 encouraged to avoid
&quot;compatibility characters&quot;, as defined
in section <span>2.3</span> of <a href=3D"#Unicode">[Unicode]</a>. The char=
acters defined in the following ranges are also
discouraged. They are either control characters or permanently undefined Un=
icode
characters:</p><div class=3D"exampleInner"><pre>[#x7F-#x84], [#x86-#x9F],=
 [#xFDD0-#xFD<span>E</span>F],
[#x1FFFE-#x1FFFF], [#x2FFFE-#x2FFFF], [#x3FFFE-#x3FFFF],
[#x4FFFE-#x4FFFF], [#x5FFFE-#x5FFFF], [#x6FFFE-#x6FFFF],
[#x7FFFE-#x7FFFF], [#x8FFFE-#x8FFFF], [#x9FFFE-#x9FFFF],
[#xAFFFE-#xAFFFF], [#xBFFFE-#xBFFFF], [#xCFFFE-#xCFFFF],
[#xDFFFE-#xDFFFF], [#xEFFFE-#xEFFFF], [#xFFFFE-#xFFFFF],
[#x10FFFE-#x10FFFF].</pre></div></div></div><div class=3D"div2">
<h3><a id=3D"sec-common-syn" name=3D"sec-common-syn">2.3 Common Syntactic=
 Constructs</a></h3><p><a id=3D"sec-common-syn" name=3D"sec-common-syn">Thi=
s section defines some symbols used widely in the grammar.</a></p><p>
<a id=3D"sec-common-syn" name=3D"sec-common-syn">					</a><a href=3D"#NT-S"=
>S</a> (white space) consists of one or more space (#x20)
characters, carriage returns, line feeds, or tabs.</p>
<h5><a id=3D"white" name=3D"white">White Space</a></h5><table summary=3D"Sc=
rap" class=3D"scrap"><tbody><tr valign=3D"baseline"><td><a id=3D"NT-S" name=
=3D"NT-S">[3]&nbsp;&nbsp;&nbsp;</a></td><td><code>S</code></td><td>&nbsp;&n=
bsp;&nbsp;::=3D&nbsp;&nbsp;&nbsp;</td><td><code>(#x20 | #x9 | #xD | #xA)+</=
code></td></tr></tbody></table><div class=3D"note"><p class=3D"prefix"><a=
 id=3D"white" name=3D"white"><b>Note:</b></a></p><p><a id=3D"white" name=3D=
"white">The presence of #xD in the above production is
	maintained purely for backward compatibility with the
	</a><a href=3D"http://www.w3.org/TR/1998/REC-xml-19980210">First Edition</=
a>.
	As explained in <a href=3D"#sec-line-ends"><b>2.11 End-of-Line Handling</b=
></a>,
	all #xD characters literally present in an XML document
	are either removed or replaced by #xA characters before
	any other processing is done. The only way to get a #xD character to match=
 this production is to
  use a character reference in an entity value literal.</p></div><p>An <a=
 href=3D"#NT-Nmtoken">Nmtoken</a> (name token) is any mixture of name
characters.</p><p>[<a title=3D"Name" id=3D"dt-name" name=3D"dt-name">Defini=
tion</a>: A <a href=3D"#NT-Name">Name</a> is an <a href=3D"#NT-Nmtoken">Nmt=
oken</a> with a restricted set of initial characters.]  Disallowed initial=
 characters for <a href=3D"#NT-Name">Names</a> include digits, diacritics,=
 the full stop and the hyphen.</p><p>Names beginning with the string &quot;=
<code>xml</code>&quot;,
or with any string which would match <code>((&#x27;X&#x27;|&#x27;x&#x27;)=
 (&#x27;M&#x27;|&#x27;m&#x27;) (&#x27;L&#x27;|&#x27;l&#x27;))</code>,
are reserved for standardization in this or future versions of this specifi=
cation.</p><div class=3D"note"><p class=3D"prefix"><b>Note:</b></p><p>The
Namespaces in XML Recommendation <a href=3D"#xml-names">[XML Names]</a> ass=
igns a meaning
to names containing colon characters. Therefore, authors should not use the
colon in XML names except for namespace purposes, but XML processors must
accept the colon as a name character.</p></div><p>The first character of a=
 <a href=3D"#NT-Name">Name</a> <em title=3D"Keyword in RFC 2119 context" cl=
ass=3D"rfc2119">MUST</em> be a <a href=3D"#NT-NameStartChar">NameStartChar<=
/a>, and any
					other characters <em title=3D"Keyword in RFC 2119 context" class=3D"rf=
c2119">MUST</em> be <a href=3D"#NT-NameChar">NameChars</a>; this mechanism=
 is used to
					prevent names from beginning with European (ASCII) digits or with
					basic combining characters. Almost all characters are permitted in
					names, except those which either are or reasonably could be used as
					delimiters. The intention is to be inclusive rather than exclusive,
					so that writing systems not yet encoded in Unicode can be used in
					XML names. See <a href=3D"#sec-suggested-names"><b>J Suggestions for=
 XML Names</b></a> for suggestions on the creation of
					names.</p><p>Document authors are encouraged to use names which are
					meaningful words or combinations of words in natural languages, and
					to avoid symbolic or white space characters in names. Note that
					COLON, HYPHEN-MINUS, FULL STOP (period), LOW LINE (underscore), and
					MIDDLE DOT are explicitly permitted.</p><p>The ASCII symbols and punct=
uation marks, along with a fairly
					large group of Unicode symbol characters, are excluded from names
					because they are more useful as delimiters in contexts where XML
					names are used outside XML documents; providing this group gives
					those contexts hard guarantees about what <em>cannot</em> be part of
					an XML name. The character #x037E, GREEK QUESTION MARK, is excluded
					because when normalized it becomes a semicolon, which could change
					the meaning of entity references.</p>
<h5><a id=3D"d0e804" name=3D"d0e804">Names and Tokens</a></h5><table summar=
y=3D"Scrap" class=3D"scrap"><tbody><tr valign=3D"baseline"><td><a id=3D"NT-=
NameStartChar" name=3D"NT-NameStartChar">[4]&nbsp;&nbsp;&nbsp;</a></td><td>=
<code>NameStartChar</code></td><td>&nbsp;&nbsp;&nbsp;::=3D&nbsp;&nbsp;&nbsp=
;</td><td><code>&quot;:&quot; | [A-Z] | &quot;_&quot; | [a-z] | [#xC0-#xD6]=
 | [#xD8-#xF6] | [#xF8-#x2FF] | [#x370-#x37D] | [#x37F-#x1FFF] | [#x200C-#x=
200D] | [#x2070-#x218F] | [#x2C00-#x2FEF] | [#x3001-#xD7FF] | [#xF900-#xFDC=
F] | [#xFDF0-#xFFFD] | [#x10000-#xEFFFF]</code></td></tr></tbody><tbody><tr=
 valign=3D"baseline"><td><a id=3D"NT-NameChar" name=3D"NT-NameChar">[4a]&nb=
sp;&nbsp;&nbsp;</a></td><td><code>NameChar</code></td><td>&nbsp;&nbsp;&nbsp=
;::=3D&nbsp;&nbsp;&nbsp;</td><td><code><a href=3D"#NT-NameStartChar">NameSt=
artChar</a> | &quot;-&quot; | &quot;.&quot; | [0-9] | #xB7 | [#x0300-#x036F=
] | [#x203F-#x2040]</code></td></tr></tbody><tbody><tr valign=3D"baseline">=
<td><a id=3D"NT-Name" name=3D"NT-Name">[5]&nbsp;&nbsp;&nbsp;</a></td><td><c=
ode>Name</code></td><td>&nbsp;&nbsp;&nbsp;::=3D&nbsp;&nbsp;&nbsp;</td><td><=
code><a href=3D"#NT-NameStartChar">NameStartChar</a> (<a href=3D"#NT-NameCh=
ar">NameChar</a>)*</code></td></tr></tbody><tbody><tr valign=3D"baseline"><=
td><a id=3D"NT-Names" name=3D"NT-Names">[6]&nbsp;&nbsp;&nbsp;</a></td><td><=
code>Names</code></td><td>&nbsp;&nbsp;&nbsp;::=3D&nbsp;&nbsp;&nbsp;</td><td=
><code><a href=3D"#NT-Name">Name</a> (#x20 <a href=3D"#NT-Name">Name</a>)*<=
/code></td></tr></tbody><tbody><tr valign=3D"baseline"><td><a id=3D"NT-Nmto=
ken" name=3D"NT-Nmtoken">[7]&nbsp;&nbsp;&nbsp;</a></td><td><code>Nmtoken</c=
ode></td><td>&nbsp;&nbsp;&nbsp;::=3D&nbsp;&nbsp;&nbsp;</td><td><code>(<a hr=
ef=3D"#NT-NameChar">NameChar</a>)+</code></td></tr></tbody><tbody><tr valig=
n=3D"baseline"><td><a id=3D"NT-Nmtokens" name=3D"NT-Nmtokens">[8]&nbsp;&nbs=
p;&nbsp;</a></td><td><code>Nmtokens</code></td><td>&nbsp;&nbsp;&nbsp;::=3D&=
nbsp;&nbsp;&nbsp;</td><td><code><a href=3D"#NT-Nmtoken">Nmtoken</a> (#x20=
 <a href=3D"#NT-Nmtoken">Nmtoken</a>)*</code></td></tr></tbody></table><div=
 class=3D"note"><p class=3D"prefix"><a id=3D"d0e804" name=3D"d0e804"><b>Not=
e:</b></a></p><p><a id=3D"d0e804" name=3D"d0e804">The </a><a href=3D"#NT-Na=
mes">Names</a>
and <a href=3D"#NT-Nmtokens">Nmtokens</a> productions are used to define th=
e validity
of tokenized attribute values after normalization (see <a href=3D"#sec-attr=
ibute-types"><b>3.3.1 Attribute Types</b></a>).</p></div><p>Literal data is=
 any quoted string not containing the quotation mark used
as a delimiter for that string. Literals are used for specifying the content
of internal entities (<a href=3D"#NT-EntityValue">EntityValue</a>), the val=
ues
of attributes (<a href=3D"#NT-AttValue">AttValue</a>), and external identif=
iers
(<a href=3D"#NT-SystemLiteral">SystemLiteral</a>). Note that a <a href=3D"#=
NT-SystemLiteral">SystemLiteral</a>
can be parsed without scanning for markup.</p>
<h5><a id=3D"d0e888" name=3D"d0e888">Literals</a></h5><table summary=3D"Scr=
ap" class=3D"scrap"><tbody><tr valign=3D"baseline"><td><a id=3D"NT-EntityVa=
lue" name=3D"NT-EntityValue">[9]&nbsp;&nbsp;&nbsp;</a></td><td><code>Entity=
Value</code></td><td>&nbsp;&nbsp;&nbsp;::=3D&nbsp;&nbsp;&nbsp;</td><td><cod=
e>&#x27;&quot;&#x27; ([^%&amp;&quot;] | <a href=3D"#NT-PEReference">PERefer=
ence</a>
| <a href=3D"#NT-Reference">Reference</a>)* &#x27;&quot;&#x27; </code></td>=
</tr><tr valign=3D"baseline"><td></td><td></td><td></td><td><code>|&nbsp;=
 &quot;&#x27;&quot; ([^%&amp;&#x27;] | <a href=3D"#NT-PEReference">PERefere=
nce</a> | <a href=3D"#NT-Reference">Reference</a>)* &quot;&#x27;&quot;</cod=
e></td></tr></tbody><tbody><tr valign=3D"baseline"><td><a id=3D"NT-AttValue=
" name=3D"NT-AttValue">[10]&nbsp;&nbsp;&nbsp;</a></td><td><code>AttValue</c=
ode></td><td>&nbsp;&nbsp;&nbsp;::=3D&nbsp;&nbsp;&nbsp;</td><td><code>&#x27;=
&quot;&#x27; ([^&lt;&amp;&quot;] | <a href=3D"#NT-Reference">Reference</a>)*
&#x27;&quot;&#x27; </code></td></tr><tr valign=3D"baseline"><td></td><td></=
td><td></td><td><code>|&nbsp; &quot;&#x27;&quot; ([^&lt;&amp;&#x27;] | <a=
 href=3D"#NT-Reference">Reference</a>)*
&quot;&#x27;&quot;</code></td></tr></tbody><tbody><tr valign=3D"baseline"><=
td><a id=3D"NT-SystemLiteral" name=3D"NT-SystemLiteral">[11]&nbsp;&nbsp;&nb=
sp;</a></td><td><code>SystemLiteral</code></td><td>&nbsp;&nbsp;&nbsp;::=3D&=
nbsp;&nbsp;&nbsp;</td><td><code>(&#x27;&quot;&#x27; [^&quot;]* &#x27;&quot;=
&#x27;) |&nbsp;(&quot;&#x27;&quot; [^&#x27;]* &quot;&#x27;&quot;) </code></=
td></tr></tbody><tbody><tr valign=3D"baseline"><td><a id=3D"NT-PubidLiteral=
" name=3D"NT-PubidLiteral">[12]&nbsp;&nbsp;&nbsp;</a></td><td><code>PubidLi=
teral</code></td><td>&nbsp;&nbsp;&nbsp;::=3D&nbsp;&nbsp;&nbsp;</td><td><cod=
e>&#x27;&quot;&#x27; <a href=3D"#NT-PubidChar">PubidChar</a>* &#x27;&quot;&=
#x27;
| &quot;&#x27;&quot; (<a href=3D"#NT-PubidChar">PubidChar</a> - &quot;&#x27=
;&quot;)* &quot;&#x27;&quot;</code></td></tr></tbody><tbody><tr valign=3D"b=
aseline"><td><a id=3D"NT-PubidChar" name=3D"NT-PubidChar">[13]&nbsp;&nbsp;&=
nbsp;</a></td><td><code>PubidChar</code></td><td>&nbsp;&nbsp;&nbsp;::=3D&nb=
sp;&nbsp;&nbsp;</td><td><code>#x20 | #xD | #xA |&nbsp;[a-zA-Z0-9] |&nbsp;[-=
&#x27;()+,./:=3D?;!*#@$_%]</code></td></tr></tbody></table><div class=3D"no=
te"><p class=3D"prefix"><a id=3D"d0e888" name=3D"d0e888"><b>Note:</b></a></=
p><p><a id=3D"d0e888" name=3D"d0e888">Although
the </a><a href=3D"#NT-EntityValue">EntityValue</a> production allows the=
 definition
of a general entity consisting of a single explicit <code>&lt;</code> in th=
e literal
(e.g., <code>&lt;!ENTITY mylt &quot;&lt;&quot;&gt;</code>), it is strongly=
 advised to avoid
this practice since any reference to that entity will cause a well-formedne=
ss
error.</p></div></div><div class=3D"div2">
<h3><a id=3D"syntax" name=3D"syntax">2.4 Character Data and Markup</a></h3>=
<p>
<a id=3D"syntax" name=3D"syntax">					</a><a href=3D"#dt-text" title=3D"Tex=
t">Text</a> consists of intermingled <a href=3D"#dt-chardata" title=3D"Char=
acter Data">character data</a> and markup. [<a title=3D"Markup" id=3D"dt-ma=
rkup" name=3D"dt-markup">Definition</a>:=20
						<b>Markup</b> takes the form of <a href=3D"#dt-stag" title=3D"Start-T=
ag">start-tags</a>, <a href=3D"#dt-etag" title=3D"End Tag">end-tags</a>, <a=
 href=3D"#dt-empty" title=3D"Empty">empty-element tags</a>, <a href=3D"#dt-=
entref" title=3D"Entity Reference">entity references</a>, <a href=3D"#dt-ch=
arref" title=3D"Character Reference">character
references</a>, <a href=3D"#dt-comment" title=3D"Comment">comments</a>, <a=
 href=3D"#dt-cdsection" title=3D"CDATA Section">CDATA section</a> delimiter=
s, <a href=3D"#dt-doctype" title=3D"Document Type Declaration">document
type declarations</a>, <a href=3D"#dt-pi" title=3D"Processing instruction">=
processing instructions</a>, <a href=3D"#NT-XMLDecl">XML declarations</a>,=
 <a href=3D"#NT-TextDecl">text declarations</a>,
and any white space that is at the top level of the document entity (that
is, outside the document element and not inside any other markup).]
				</p><p>
					[<a title=3D"Character Data" id=3D"dt-chardata" name=3D"dt-chardata">D=
efinition</a>: All text that is not markup
constitutes the <b>character data</b> of the document.]
				</p><p>The ampersand character (&amp;) and the left angle bracket (&lt;=
) <em title=3D"Keyword in RFC 2119 context" class=3D"rfc2119">MUST NOT</em>=
 appear
in their literal form, except when used as markup delimiters, or
within a <a href=3D"#dt-comment" title=3D"Comment">comment</a>, a <a href=
=3D"#dt-pi" title=3D"Processing instruction">processing
instruction</a>, or a <a href=3D"#dt-cdsection" title=3D"CDATA Section">CDA=
TA section</a>.

If they are needed elsewhere, they <em title=3D"Keyword in RFC 2119 context=
" class=3D"rfc2119">MUST</em> be <a href=3D"#dt-escape" title=3D"escape">es=
caped</a>
using either <a href=3D"#dt-charref" title=3D"Character Reference">numeric=
 character references</a>
or the strings &quot;
						<code>&amp;amp;</code>
					&quot; and &quot;
						<code>&amp;lt;</code>
					&quot;
respectively. The right angle bracket (&gt;) may be represented using the=
 string &quot;
						<code>&amp;gt;</code>
					&quot;,
and <em title=3D"Keyword in RFC 2119 context" class=3D"rfc2119">MUST</em>,=
 <a href=3D"#dt-compat" title=3D"For Compatibility">for compatibility</a>,=
 be escaped
using either &quot;
						<code>&amp;gt;</code>
					&quot; or a character reference when it
appears in the string &quot;
						<code>]]&gt;</code>
					&quot; in content, when
that string is not marking the end of a <a href=3D"#dt-cdsection" title=3D"=
CDATA Section">CDATA
section</a>.</p><p>In the content of elements, character data is any string=
 of characters
which does not contain the start-delimiter of any markup and does not inclu=
de the CDATA-section-close
delimiter, &quot;
						<code>]]&gt;</code>
					&quot;. In a CDATA section,
character data is any string of characters not including the CDATA-section-=
close
delimiter, &quot;
						<code>]]&gt;</code>
					&quot;.</p><p>To allow attribute values to contain both single and dou=
ble quotes, the
apostrophe or single-quote character (&#x27;) may be represented as &quot;
						<code>&amp;apos;</code>
					&quot;,
and the double-quote character (&quot;) as &quot;
						<code>&amp;quot;</code>
					&quot;.</p>
<h5><a id=3D"d0e1106" name=3D"d0e1106">Character Data</a></h5><table summar=
y=3D"Scrap" class=3D"scrap"><tbody><tr valign=3D"baseline"><td><a id=3D"NT-=
CharData" name=3D"NT-CharData">[14]&nbsp;&nbsp;&nbsp;</a></td><td><code>Cha=
rData</code></td><td>&nbsp;&nbsp;&nbsp;::=3D&nbsp;&nbsp;&nbsp;</td><td><cod=
e>[^&lt;&amp;]* - ([^&lt;&amp;]* &#x27;]]&gt;&#x27; [^&lt;&amp;]*)</code></=
td></tr></tbody></table></div><div class=3D"div2">
<h3><a id=3D"sec-comments" name=3D"sec-comments">2.5 Comments</a></h3><p>
<a id=3D"sec-comments" name=3D"sec-comments">					[</a><a title=3D"Comment"=
 id=3D"dt-comment" name=3D"dt-comment">Definition</a>:=20
						<b>Comments</b> may appear
anywhere in a document outside other <a href=3D"#dt-markup" title=3D"Markup=
">markup</a>;
in addition, they may appear within the document type declaration at places
allowed by the grammar. They are not part of the document&#x27;s <a href=3D=
"#dt-chardata" title=3D"Character Data">character
data</a>; an XML processor <em title=3D"Keyword in RFC 2119 context" class=
=3D"rfc2119">MAY</em>, but need not, make it possible for an
application to retrieve the text of comments. <a href=3D"#dt-compat" title=
=3D"For Compatibility">For
compatibility</a>, the string &quot;
							<code>--</code>
						&quot; (double-hyphen)
<em title=3D"Keyword in RFC 2119 context" class=3D"rfc2119">MUST NOT</em>=
 occur within comments.] Parameter
entity references <em title=3D"Keyword in RFC 2119 context" class=3D"rfc211=
9">MUST NOT</em> be recognized within comments.</p>
<h5><a id=3D"d0e1149" name=3D"d0e1149">Comments</a></h5><table summary=3D"S=
crap" class=3D"scrap"><tbody><tr valign=3D"baseline"><td><a id=3D"NT-Commen=
t" name=3D"NT-Comment">[15]&nbsp;&nbsp;&nbsp;</a></td><td><code>Comment</co=
de></td><td>&nbsp;&nbsp;&nbsp;::=3D&nbsp;&nbsp;&nbsp;</td><td><code>&#x27;&=
lt;!--&#x27; ((<a href=3D"#NT-Char">Char</a> - &#x27;-&#x27;) | (&#x27;-&#x=
27;
(<a href=3D"#NT-Char">Char</a> - &#x27;-&#x27;)))* &#x27;--&gt;&#x27;</code=
></td></tr></tbody></table><p><a id=3D"d0e1149" name=3D"d0e1149">An example=
 of a comment:</a></p><div class=3D"exampleInner"><pre><a id=3D"d0e1149" na=
me=3D"d0e1149">&lt;!-- declarations for &lt;head&gt; &amp; &lt;body&gt; --&=
gt;</a></pre></div><p><a id=3D"d0e1149" name=3D"d0e1149">Note
that the grammar does not allow a comment ending in <code>---&gt;</code>.=
 The
following example is <em>not</em> well-formed.</a></p><div class=3D"example=
Inner"><pre><a id=3D"d0e1149" name=3D"d0e1149">&lt;!-- B+, B, or B---&gt;</=
a></pre></div></div><div class=3D"div2">
<h3><a id=3D"sec-pi" name=3D"sec-pi">2.6 Processing Instructions</a></h3><p>
<a id=3D"sec-pi" name=3D"sec-pi">					[</a><a title=3D"Processing instructi=
on" id=3D"dt-pi" name=3D"dt-pi">Definition</a>:=20
						<b>Processing instructions</b>
(PIs) allow documents to contain instructions for applications.]
				</p>
<h5><a id=3D"d0e1188" name=3D"d0e1188">Processing Instructions</a></h5><tab=
le summary=3D"Scrap" class=3D"scrap"><tbody><tr valign=3D"baseline"><td><a=
 id=3D"NT-PI" name=3D"NT-PI">[16]&nbsp;&nbsp;&nbsp;</a></td><td><code>PI</c=
ode></td><td>&nbsp;&nbsp;&nbsp;::=3D&nbsp;&nbsp;&nbsp;</td><td><code>&#x27;=
&lt;?&#x27; <a href=3D"#NT-PITarget">PITarget</a> (<a href=3D"#NT-S">S</a>
(<a href=3D"#NT-Char">Char</a>* - (<a href=3D"#NT-Char">Char</a>* &#x27;?&g=
t;&#x27; <a href=3D"#NT-Char">Char</a>*)))? &#x27;?&gt;&#x27;</code></td></=
tr></tbody><tbody><tr valign=3D"baseline"><td><a id=3D"NT-PITarget" name=3D=
"NT-PITarget">[17]&nbsp;&nbsp;&nbsp;</a></td><td><code>PITarget</code></td>=
<td>&nbsp;&nbsp;&nbsp;::=3D&nbsp;&nbsp;&nbsp;</td><td><code>
							<a href=3D"#NT-Name">Name</a> - ((&#x27;X&#x27; | &#x27;x&#x27;) (&#=
x27;M&#x27; |
&#x27;m&#x27;) (&#x27;L&#x27; | &#x27;l&#x27;))</code></td></tr></tbody></t=
able><p><a id=3D"d0e1188" name=3D"d0e1188">PIs are not part of the document=
&#x27;s </a><a href=3D"#dt-chardata" title=3D"Character Data">character
data</a>, but <em title=3D"Keyword in RFC 2119 context" class=3D"rfc2119">M=
UST</em> be passed through to the application. The PI begins
with a target (<a href=3D"#NT-PITarget">PITarget</a>) used to identify the=
 application
to which the instruction is directed. The target names &quot;
						<code>XML</code>
					&quot;, &quot;
						<code>xml</code>
					&quot;,
and so on are reserved for standardization in this or future versions of th=
is
specification. The XML <a href=3D"#dt-notation" title=3D"Notation">Notation=
</a> mechanism
may be used for formal declaration of PI targets. Parameter
entity references <em title=3D"Keyword in RFC 2119 context" class=3D"rfc211=
9">MUST NOT</em> be recognized within processing instructions.</p></div><di=
v class=3D"div2">
<h3><a id=3D"sec-cdata-sect" name=3D"sec-cdata-sect">2.7 CDATA Sections</a>=
</h3><p>
<a id=3D"sec-cdata-sect" name=3D"sec-cdata-sect">					[</a><a title=3D"CDAT=
A Section" id=3D"dt-cdsection" name=3D"dt-cdsection">Definition</a>:=20
						<b>CDATA sections</b> may occur anywhere character data may occur; th=
ey are used to escape blocks
of text containing characters which would otherwise be recognized as markup.
CDATA sections begin with the string &quot;
							<code>&lt;![CDATA[</code>
						&quot;
and end with the string &quot;
							<code>]]&gt;</code>
						&quot;:]
				</p>
<h5><a id=3D"d0e1271" name=3D"d0e1271">CDATA Sections</a></h5><table summar=
y=3D"Scrap" class=3D"scrap"><tbody><tr valign=3D"baseline"><td><a id=3D"NT-=
CDSect" name=3D"NT-CDSect">[18]&nbsp;&nbsp;&nbsp;</a></td><td><code>CDSect<=
/code></td><td>&nbsp;&nbsp;&nbsp;::=3D&nbsp;&nbsp;&nbsp;</td><td><code>
							<a href=3D"#NT-CDStart">CDStart</a>
							<a href=3D"#NT-CData">CData</a>
							<a href=3D"#NT-CDEnd">CDEnd</a>
						</code></td></tr></tbody><tbody><tr valign=3D"baseline"><td><a id=3D"=
NT-CDStart" name=3D"NT-CDStart">[19]&nbsp;&nbsp;&nbsp;</a></td><td><code>CD=
Start</code></td><td>&nbsp;&nbsp;&nbsp;::=3D&nbsp;&nbsp;&nbsp;</td><td><cod=
e>&#x27;&lt;![CDATA[&#x27;</code></td></tr></tbody><tbody><tr valign=3D"bas=
eline"><td><a id=3D"NT-CData" name=3D"NT-CData">[20]&nbsp;&nbsp;&nbsp;</a><=
/td><td><code>CData</code></td><td>&nbsp;&nbsp;&nbsp;::=3D&nbsp;&nbsp;&nbsp=
;</td><td><code>(<a href=3D"#NT-Char">Char</a>* - (<a href=3D"#NT-Char">Cha=
r</a>*
&#x27;]]&gt;&#x27; <a href=3D"#NT-Char">Char</a>*)) </code></td></tr></tbod=
y><tbody><tr valign=3D"baseline"><td><a id=3D"NT-CDEnd" name=3D"NT-CDEnd">[=
21]&nbsp;&nbsp;&nbsp;</a></td><td><code>CDEnd</code></td><td>&nbsp;&nbsp;&n=
bsp;::=3D&nbsp;&nbsp;&nbsp;</td><td><code>&#x27;]]&gt;&#x27;</code></td></t=
r></tbody></table><p><a id=3D"d0e1271" name=3D"d0e1271">Within a CDATA sect=
ion, only the </a><a href=3D"#NT-CDEnd">CDEnd</a> string is
recognized as markup, so that left angle brackets and ampersands may occur
in their literal form; they need not (and cannot) be escaped using &quot;
						<code>&amp;lt;</code>
					&quot;
and &quot;
						<code>&amp;amp;</code>
					&quot;. CDATA sections cannot nest.</p><p>An example of a CDATA sectio=
n, in which &quot;
						<code>&lt;greeting&gt;</code>
					&quot;
and &quot;
						<code>&lt;/greeting&gt;</code>
					&quot; are recognized as <a href=3D"#dt-chardata" title=3D"Character=
 Data">character data</a>, not <a href=3D"#dt-markup" title=3D"Markup">mark=
up</a>:</p><div class=3D"exampleInner"><pre>&lt;![CDATA[&lt;greeting&gt;Hel=
lo, world!&lt;/greeting&gt;]]&gt; </pre></div></div><div class=3D"div2">
<h3><a id=3D"sec-prolog-dtd" name=3D"sec-prolog-dtd">2.8 Prolog and Documen=
t Type Declaration</a></h3><p>
<a id=3D"sec-prolog-dtd" name=3D"sec-prolog-dtd">					[</a><a title=3D"XML=
 Declaration" id=3D"dt-xmldecl" name=3D"dt-xmldecl">Definition</a>: XML doc=
uments <em title=3D"Keyword in RFC 2119 context" class=3D"rfc2119">SHOULD</=
em>
begin with an <b>XML declaration</b> which specifies the version of
XML being used.] For example, the following is a complete XML document, <a=
 href=3D"#dt-wellformed" title=3D"Well-Formed">well-formed</a> but not <a=
 href=3D"#dt-valid" title=3D"Validity">valid</a>:</p><div class=3D"exampleI=
nner"><pre>&lt;?xml version=3D&quot;1.0&quot;?&gt;
&lt;greeting&gt;Hello, world!&lt;/greeting&gt; </pre></div><p>and so is thi=
s:</p><div class=3D"exampleInner"><pre>&lt;greeting&gt;Hello, world!&lt;/gr=
eeting&gt;</pre></div><p>The function of the markup in an XML document is=
 to describe its storage and
logical structure and to associate attribute
name-value pairs with its logical structures. XML provides a mechanism, the
<a href=3D"#dt-doctype" title=3D"Document Type Declaration">document
type declaration</a>, to define constraints on the logical structure
and to support the use of predefined storage units. [<a title=3D"Validity"=
 id=3D"dt-valid" name=3D"dt-valid">Definition</a>: An XML document is <b>va=
lid</b> if it has an associated
document type declaration and if the document complies with the constraints
expressed in it.]
				</p><p>The document type declaration <em title=3D"Keyword in RFC 2119=
 context" class=3D"rfc2119">MUST</em> appear before the first <a href=3D"#d=
t-element" title=3D"Element">element</a>
in the document.</p>
<h5><a id=3D"xmldoc" name=3D"xmldoc">Prolog</a></h5><table summary=3D"Scrap=
" class=3D"scrap"><tbody><tr valign=3D"baseline"><td><a id=3D"NT-prolog" na=
me=3D"NT-prolog">[22]&nbsp;&nbsp;&nbsp;</a></td><td><code>prolog</code></td=
><td>&nbsp;&nbsp;&nbsp;::=3D&nbsp;&nbsp;&nbsp;</td><td><code>
								<a href=3D"#NT-XMLDecl">XMLDecl</a>? <a href=3D"#NT-Misc">Misc</a>*
(<a href=3D"#NT-doctypedecl">doctypedecl</a>
								<a href=3D"#NT-Misc">Misc</a>*)?</code></td></tr><tr valign=3D"base=
line"><td><a id=3D"NT-XMLDecl" name=3D"NT-XMLDecl">[23]&nbsp;&nbsp;&nbsp;</=
a></td><td><code>XMLDecl</code></td><td>&nbsp;&nbsp;&nbsp;::=3D&nbsp;&nbsp;=
&nbsp;</td><td><code>&#x27;&lt;?xml&#x27; <a href=3D"#NT-VersionInfo">Versi=
onInfo</a>
								<a href=3D"#NT-EncodingDecl">EncodingDecl</a>? <a href=3D"#NT-SDDec=
l">SDDecl</a>? <a href=3D"#NT-S">S</a>? &#x27;?&gt;&#x27;</code></td></tr><=
tr valign=3D"baseline"><td><a id=3D"NT-VersionInfo" name=3D"NT-VersionInfo"=
>[24]&nbsp;&nbsp;&nbsp;</a></td><td><code>VersionInfo</code></td><td>&nbsp;=
&nbsp;&nbsp;::=3D&nbsp;&nbsp;&nbsp;</td><td><code>
								<a href=3D"#NT-S">S</a> &#x27;version&#x27; <a href=3D"#NT-Eq">Eq</=
a>
(&quot;&#x27;&quot; <a href=3D"#NT-VersionNum">VersionNum</a> &quot;&#x27;&=
quot; | &#x27;&quot;&#x27; <a href=3D"#NT-VersionNum">VersionNum</a>
&#x27;&quot;&#x27;)</code></td></tr><tr valign=3D"baseline"><td><a id=3D"NT=
-Eq" name=3D"NT-Eq">[25]&nbsp;&nbsp;&nbsp;</a></td><td><code>Eq</code></td>=
<td>&nbsp;&nbsp;&nbsp;::=3D&nbsp;&nbsp;&nbsp;</td><td><code>
								<a href=3D"#NT-S">S</a>? &#x27;=3D&#x27; <a href=3D"#NT-S">S</a>?</=
code></td></tr><tr valign=3D"baseline"><td><a id=3D"NT-VersionNum" name=3D"=
NT-VersionNum">[26]&nbsp;&nbsp;&nbsp;</a></td><td><code>VersionNum</code></=
td><td>&nbsp;&nbsp;&nbsp;::=3D&nbsp;&nbsp;&nbsp;</td><td><code>&#x27;1.&#x2=
7; [0-9]+</code></td></tr><tr valign=3D"baseline"><td><a id=3D"NT-Misc" nam=
e=3D"NT-Misc">[27]&nbsp;&nbsp;&nbsp;</a></td><td><code>Misc</code></td><td>=
&nbsp;&nbsp;&nbsp;::=3D&nbsp;&nbsp;&nbsp;</td><td><code>
								<a href=3D"#NT-Comment">Comment</a> | <a href=3D"#NT-PI">PI</a>
| <a href=3D"#NT-S">S</a>
							</code></td></tr></tbody></table><p><a id=3D"xmldoc" name=3D"xmldoc"=
>Even though the </a><a href=3D"#NT-VersionNum">VersionNum</a> production=
 matches
					any version number of the form &#x27;1.x&#x27;, XML 1.0 documents <em=
 title=3D"Keyword in RFC 2119 context" class=3D"rfc2119">SHOULD NOT</em> sp=
ecify a version number other than &#x27;1.0&#x27;.</p><div class=3D"note"><=
p class=3D"prefix"><b>Note:</b></p><p>When an XML 1.0 processor encounters=
 a document that specifies
						a 1.x version number other than &#x27;1.0&#x27;, it will process it as
						a 1.0 document.  This means that an XML 1.0 processor will accept
						1.x documents provided they do not use any non-1.0 features.</p></div=
><p>
					[<a title=3D"Document Type Declaration" id=3D"dt-doctype" name=3D"dt-d=
octype">Definition</a>: The XML <b>document
type declaration</b> contains or points to <a href=3D"#dt-markupdecl" title=
=3D"markup declaration">markup
declarations</a> that provide a grammar for a class of documents. This
grammar is known as a document type definition, or <b>DTD</b>. The document
type declaration can point to an external subset (a special kind of <a href=
=3D"#dt-extent" title=3D"External Entity">external entity</a>) containing=
 markup declarations,
or can contain the markup declarations directly in an internal subset, or
can do both. The DTD for a document consists of both subsets taken together=
.]
				</p><p>
					[<a title=3D"markup declaration" id=3D"dt-markupdecl" name=3D"dt-marku=
pdecl">Definition</a>:  A <b>markup declaration</b>
is an <a href=3D"#dt-eldecl" title=3D"Element Type declaration">element typ=
e declaration</a>, an <a href=3D"#dt-attdecl" title=3D"Attribute-List Decla=
ration">attribute-list declaration</a>, an <a href=3D"#dt-entdecl" title=3D=
"entity declaration">entity
declaration</a>, or a <a href=3D"#dt-notdecl" title=3D"Notation Declaration=
">notation declaration</a>.]
These declarations may be contained in whole or in part within <a href=3D"#=
dt-PE" title=3D"Parameter entity">parameter
entities</a>, as described in the well-formedness and validity constraints
below. For further
information, see <a href=3D"#sec-physical-struct"><b>4 Physical Structures<=
/b></a>.</p>
<h5><a id=3D"dtd" name=3D"dtd">Document Type Definition</a></h5><table summ=
ary=3D"Scrap" class=3D"scrap"><tbody><tr valign=3D"baseline"><td><a id=3D"N=
T-doctypedecl" name=3D"NT-doctypedecl">[28]&nbsp;&nbsp;&nbsp;</a></td><td><=
code>doctypedecl</code></td><td>&nbsp;&nbsp;&nbsp;::=3D&nbsp;&nbsp;&nbsp;</=
td><td><code>&#x27;&lt;!DOCTYPE&#x27; <a href=3D"#NT-S">S</a>
								<a href=3D"#NT-Name">Name</a>
(<a href=3D"#NT-S">S</a>
								<a href=3D"#NT-ExternalID">ExternalID</a>)? <a href=3D"#NT-S">S</a>?
(&#x27;[&#x27; <a href=3D"#NT-intSubset">intSubset</a> &#x27;]&#x27; <a hre=
f=3D"#NT-S">S</a>?)? &#x27;&gt;&#x27;</code></td><td><a href=3D"#vc-roottyp=
e">[VC: Root Element Type]</a></td></tr><tr valign=3D"baseline"><td></td><t=
d></td><td></td><td></td><td><a href=3D"#ExtSubset">[WFC: External Subset]<=
/a></td></tr><tr valign=3D"baseline"><td><a id=3D"NT-DeclSep" name=3D"NT-De=
clSep">[28a]&nbsp;&nbsp;&nbsp;</a></td><td><code>DeclSep</code></td><td>&nb=
sp;&nbsp;&nbsp;::=3D&nbsp;&nbsp;&nbsp;</td><td><code>
								<a href=3D"#NT-PEReference">PEReference</a> | <a href=3D"#NT-S">S</=
a>
							</code></td><td><a href=3D"#PE-between-Decls">[WFC: PE Between Decla=
rations]</a></td></tr><tr valign=3D"baseline"><td><a id=3D"NT-intSubset" na=
me=3D"NT-intSubset">[28b]&nbsp;&nbsp;&nbsp;</a></td><td><code>intSubset</co=
de></td><td>&nbsp;&nbsp;&nbsp;::=3D&nbsp;&nbsp;&nbsp;</td><td><code>(<a hre=
f=3D"#NT-markupdecl">markupdecl</a> | <a href=3D"#NT-DeclSep">DeclSep</a>)*=
</code></td></tr><tr valign=3D"baseline"><td><a id=3D"NT-markupdecl" name=
=3D"NT-markupdecl">[29]&nbsp;&nbsp;&nbsp;</a></td><td><code>markupdecl</cod=
e></td><td>&nbsp;&nbsp;&nbsp;::=3D&nbsp;&nbsp;&nbsp;</td><td><code>
								<a href=3D"#NT-elementdecl">elementdecl</a> | <a href=3D"#NT-Attlis=
tDecl">AttlistDecl</a> | <a href=3D"#NT-EntityDecl">EntityDecl</a>
| <a href=3D"#NT-NotationDecl">NotationDecl</a> | <a href=3D"#NT-PI">PI</a>=
 | <a href=3D"#NT-Comment">Comment</a>
							</code></td><td><a href=3D"#vc-PEinMarkupDecl">[VC: Proper Declarati=
on/PE Nesting]</a></td></tr><tr valign=3D"baseline"><td></td><td></td><td><=
/td><td></td><td><a href=3D"#wfc-PEinInternalSubset">[WFC: PEs in Internal=
 Subset]</a></td></tr></tbody></table><p><a id=3D"dtd" name=3D"dtd">Note
that it is possible to construct a well-formed document containing a </a><a=
 href=3D"#NT-doctypedecl">doctypedecl</a>
that neither points to an external subset nor contains an internal subset.<=
/p><p>The markup declarations may be made up in whole or in part of the <a=
 href=3D"#dt-repltext" title=3D"Replacement Text">replacement text</a> of=
 <a href=3D"#dt-PE" title=3D"Parameter entity">parameter
entities</a>. The productions later in this specification for individual
nonterminals (<a href=3D"#NT-elementdecl">elementdecl</a>, <a href=3D"#NT-A=
ttlistDecl">AttlistDecl</a>,
and so on) describe the declarations <em>after</em> all the parameter
entities have been <a href=3D"#dt-include" title=3D"Include">included</a>.<=
/p><p>Parameter
entity references are recognized anywhere in the DTD (internal and external
subsets and external parameter entities), except in literals, processing in=
structions,
comments, and the contents of ignored conditional sections (see <a href=3D"=
#sec-condition-sect"><b>3.4 Conditional Sections</b></a>).
They are also recognized in entity value literals. The use of parameter ent=
ities
in the internal subset is restricted as described below.</p><div class=3D"c=
onstraint"><p class=3D"prefix"><a id=3D"vc-roottype" name=3D"vc-roottype"><=
b>Validity constraint: Root Element Type</b></a></p><p><a id=3D"vc-roottype=
" name=3D"vc-roottype">The </a><a href=3D"#NT-Name">Name</a>
in the document type declaration <em title=3D"Keyword in RFC 2119 context"=
 class=3D"rfc2119">MUST</em> match the element type of the <a href=3D"#dt-r=
oot" title=3D"Root Element">root element</a>.</p></div><div class=3D"constr=
aint"><p class=3D"prefix"><a id=3D"vc-PEinMarkupDecl" name=3D"vc-PEinMarkup=
Decl"><b>Validity constraint: Proper Declaration/PE Nesting</b></a></p><p><=
a id=3D"vc-PEinMarkupDecl" name=3D"vc-PEinMarkupDecl">Parameter-entity </a>=
<a href=3D"#dt-repltext" title=3D"Replacement Text">replacement text</a>
						<em title=3D"Keyword in RFC 2119 context" class=3D"rfc2119">MUST</em>=
 be properly nested with markup declarations. That is to say, if either
the first character or the last character of a markup declaration (<a href=
=3D"#NT-markupdecl">markupdecl</a>
above) is contained in the replacement text for a <a href=3D"#dt-PERef" tit=
le=3D"Parameter-entity reference">parameter-entity
reference</a>, both <em title=3D"Keyword in RFC 2119 context" class=3D"rfc2=
119">MUST</em> be contained in the same replacement text.</p></div><div cla=
ss=3D"constraint"><p class=3D"prefix"><a id=3D"wfc-PEinInternalSubset" name=
=3D"wfc-PEinInternalSubset"><b>Well-formedness constraint: PEs in Internal=
 Subset</b></a></p><p><a id=3D"wfc-PEinInternalSubset" name=3D"wfc-PEinInte=
rnalSubset">In
the internal DTD subset, </a><a href=3D"#dt-PERef" title=3D"Parameter-entit=
y reference">parameter-entity references</a>
						<em title=3D"Keyword in RFC 2119 context" class=3D"rfc2119">MUST NOT<=
/em> occur within markup declarations; they may occur where markup declarat=
ions can occur.
(This does not apply to references that occur in external parameter entities
or to the external subset.)</p></div><div class=3D"constraint"><p class=3D"=
prefix"><a id=3D"ExtSubset" name=3D"ExtSubset"><b>Well-formedness constrain=
t: External Subset</b></a></p><p><a id=3D"ExtSubset" name=3D"ExtSubset">The=
 external subset, if any, <em title=3D"Keyword in RFC 2119 context" class=
=3D"rfc2119">MUST</em> match the production for </a><a href=3D"#NT-extSubse=
t">extSubset</a>.</p></div><div class=3D"constraint"><p class=3D"prefix"><a=
 id=3D"PE-between-Decls" name=3D"PE-between-Decls"><b>Well-formedness const=
raint: PE Between Declarations</b></a></p><p><a id=3D"PE-between-Decls" nam=
e=3D"PE-between-Decls">The replacement text of a parameter entity reference
in a </a><a href=3D"#NT-DeclSep">DeclSep</a>
						<em title=3D"Keyword in RFC 2119 context" class=3D"rfc2119">MUST</em>=
 match the production <a href=3D"#NT-extSubsetDecl">extSubsetDecl</a>.</p><=
/div><p>Like the internal subset, the external subset and any external para=
meter
entities referenced
in a <a href=3D"#NT-DeclSep">DeclSep</a>
					<em title=3D"Keyword in RFC 2119 context" class=3D"rfc2119">MUST</em>=
 consist of a series of
complete markup declarations of the types allowed by the non-terminal symbo=
l <a href=3D"#NT-markupdecl">markupdecl</a>, interspersed with white space=
 or <a href=3D"#dt-PERef" title=3D"Parameter-entity reference">parameter-en=
tity references</a>. However, portions of
the contents of the external subset or of these
external parameter entities may conditionally be ignored by using the <a hr=
ef=3D"#dt-cond-section" title=3D"conditional section">conditional section</=
a> construct; this is not
allowed in the internal subset but is
allowed in external parameter entities referenced in the internal subset.</=
p>
<h5><a id=3D"ext-Subset" name=3D"ext-Subset">External Subset</a></h5><table=
 summary=3D"Scrap" class=3D"scrap"><tbody><tr valign=3D"baseline"><td><a id=
=3D"NT-extSubset" name=3D"NT-extSubset">[30]&nbsp;&nbsp;&nbsp;</a></td><td>=
<code>extSubset</code></td><td>&nbsp;&nbsp;&nbsp;::=3D&nbsp;&nbsp;&nbsp;</t=
d><td><code>
								<a href=3D"#NT-TextDecl">TextDecl</a>? <a href=3D"#NT-extSubsetDecl=
">extSubsetDecl</a>
							</code></td></tr><tr valign=3D"baseline"><td><a id=3D"NT-extSubsetDe=
cl" name=3D"NT-extSubsetDecl">[31]&nbsp;&nbsp;&nbsp;</a></td><td><code>extS=
ubsetDecl</code></td><td>&nbsp;&nbsp;&nbsp;::=3D&nbsp;&nbsp;&nbsp;</td><td>=
<code>( <a href=3D"#NT-markupdecl">markupdecl</a> | <a href=3D"#NT-conditio=
nalSect">conditionalSect</a> | <a href=3D"#NT-DeclSep">DeclSep</a>)*</code>=
</td></tr></tbody></table><p><a id=3D"ext-Subset" name=3D"ext-Subset">The=
 external subset and external parameter entities also differ from the
internal subset in that in them, </a><a href=3D"#dt-PERef" title=3D"Paramet=
er-entity reference">parameter-entity
references</a> are permitted <em>within</em> markup declarations,
not only <em>between</em> markup declarations.</p><p>An example of an XML=
 document with a document type declaration:</p><div class=3D"exampleInner">=
<pre>&lt;?xml version=3D&quot;1.0&quot;?&gt;
&lt;!DOCTYPE greeting SYSTEM &quot;hello.dtd&quot;&gt;
&lt;greeting&gt;Hello, world!&lt;/greeting&gt; </pre></div><p>The <a href=
=3D"#dt-sysid" title=3D"System Identifier">system identifier</a>
					&quot;
						<code>hello.dtd</code>
					&quot;
gives the address (a URI reference) of a DTD for the document.</p><p>The de=
clarations can also be given locally, as in this example:</p><div class=3D"=
exampleInner"><pre>&lt;?xml version=3D&quot;1.0&quot; encoding=3D&quot;UTF-=
8&quot; ?&gt;
&lt;!DOCTYPE greeting [
  &lt;!ELEMENT greeting (#PCDATA)&gt;
]&gt;
&lt;greeting&gt;Hello, world!&lt;/greeting&gt;</pre></div><p>If both the ex=
ternal and internal subsets are used, the internal subset
<em title=3D"Keyword in RFC 2119 context" class=3D"rfc2119">MUST</em> be co=
nsidered to occur before the external subset.=20
This has the effect that entity and attribute-list declarations in the inte=
rnal
subset take precedence over those in the external subset.</p></div><div cla=
ss=3D"div2">
<h3><a id=3D"sec-rmd" name=3D"sec-rmd">2.9 Standalone Document Declaration<=
/a></h3><p><a id=3D"sec-rmd" name=3D"sec-rmd">Markup declarations can affec=
t the content of the document, as passed from
an </a><a href=3D"#dt-xml-proc" title=3D"XML Processor">XML processor</a>=
 to an application; examples
are attribute defaults and entity declarations. The standalone document dec=
laration,
which may appear as a component of the XML declaration, signals whether or
not there are such declarations which appear external to the <a href=3D"#dt=
-docent" title=3D"Document Entity">document
entity</a>
or in parameter entities. [<a title=3D"External Markup Declaration" id=3D"d=
t-extmkpdecl" name=3D"dt-extmkpdecl">Definition</a>: An <b>external
markup declaration</b> is defined as a markup declaration occurring in
the external subset or in a parameter entity (external or internal, the lat=
ter
being included because non-validating processors are not required to read
them).]
				</p>
<h5><a id=3D"fulldtd" name=3D"fulldtd">Standalone Document Declaration</a><=
/h5><table summary=3D"Scrap" class=3D"scrap"><tbody><tr valign=3D"baseline"=
><td><a id=3D"NT-SDDecl" name=3D"NT-SDDecl">[32]&nbsp;&nbsp;&nbsp;</a></td>=
<td><code>SDDecl</code></td><td>&nbsp;&nbsp;&nbsp;::=3D&nbsp;&nbsp;&nbsp;</=
td><td><code>
								<a href=3D"#NT-S">S</a> &#x27;standalone&#x27; <a href=3D"#NT-Eq">E=
q</a>
((&quot;&#x27;&quot; (&#x27;yes&#x27; | &#x27;no&#x27;) &quot;&#x27;&quot;)=
 | (&#x27;&quot;&#x27; (&#x27;yes&#x27; | &#x27;no&#x27;) &#x27;&quot;&#x27=
;)) </code></td><td><a href=3D"#vc-check-rmd">[VC: Standalone Document Decl=
aration]</a></td></tr></tbody></table><p><a id=3D"fulldtd" name=3D"fulldtd"=
>In a standalone document declaration, the value &quot;yes&quot; indicates
that there are no </a><a href=3D"#dt-extmkpdecl" title=3D"External Markup=
 Declaration">external markup declarations</a> which
affect the information passed from the XML processor to the application. The
value &quot;no&quot; indicates that there are or may be such external
markup declarations. Note that the standalone document declaration only den=
otes
the presence of external <em>declarations</em>; the presence, in a document,
of references to external <em>entities</em>, when those entities are intern=
ally
declared, does not change its standalone status.</p><p>If there are no exte=
rnal markup declarations, the standalone document declaration
has no meaning. If there are external markup declarations but there is no
standalone document declaration, the value &quot;no&quot; is assumed.</p><p=
>Any XML document for which <code>standalone=3D&quot;no&quot;</code> holds=
 can be converted
algorithmically to a standalone document, which may be desirable for some
network delivery applications.</p><div class=3D"constraint"><p class=3D"pre=
fix"><a id=3D"vc-check-rmd" name=3D"vc-check-rmd"><b>Validity constraint:=
 Standalone Document Declaration</b></a></p><p><a id=3D"vc-check-rmd" name=
=3D"vc-check-rmd">The
standalone document declaration <em title=3D"Keyword in RFC 2119 context"=
 class=3D"rfc2119">MUST</em> have the value &quot;no&quot; if
any external markup declarations contain declarations of:</a></p><ul><li><p=
><a id=3D"vc-check-rmd" name=3D"vc-check-rmd">attributes with </a><a href=
=3D"#dt-default" title=3D"Attribute Default">default</a> values,
if elements to which these attributes apply appear in the document without
specifications of values for these attributes, or</p></li><li><p>entities=
 (other than <code>amp</code>,
<code>lt</code>,
<code>gt</code>,
<code>apos</code>,
<code>quot</code>), if <a href=3D"#dt-entref" title=3D"Entity Reference">re=
ferences</a>
to those entities appear in the document, or</p></li><li><p>attributes with
tokenized types, where the
attribute appears in the document with a value such that
<a href=3D"#AVNormalize"><cite>normalization</cite></a>
will produce a different value from that which would be produced
in the absence of the declaration, or</p></li><li><p>element types with <a=
 href=3D"#dt-elemcontent" title=3D"Element content">element content</a>,
if white space occurs directly within any instance of those types.</p></li>=
</ul></div><p>An example XML declaration with a standalone document declara=
tion:</p><div class=3D"exampleInner"><pre>&lt;?xml version=3D&quot;1.0&quot=
; standalone=3D&#x27;yes&#x27;?&gt;</pre></div></div><div class=3D"div2">
<h3><a id=3D"sec-white-space" name=3D"sec-white-space">2.10 White Space Han=
dling</a></h3><p><a id=3D"sec-white-space" name=3D"sec-white-space">In edit=
ing XML documents, it is often convenient to use &quot;white space&quot;
(spaces, tabs, and blank lines)
to set apart the markup for greater readability. Such white space is typica=
lly
not intended for inclusion in the delivered version of the document. On the
other hand, &quot;significant&quot; white space that should be preserved
in the delivered version is common, for example in poetry and source code.<=
/a></p><p><a id=3D"sec-white-space" name=3D"sec-white-space">An </a><a href=
=3D"#dt-xml-proc" title=3D"XML Processor">XML processor</a>
					<em title=3D"Keyword in RFC 2119 context" class=3D"rfc2119">MUST</em>=
 always pass
all characters in a document that are not markup through to the application.
A <a href=3D"#dt-validating" title=3D"Validating Processor"> validating XML=
 processor</a>
					<em title=3D"Keyword in RFC 2119 context" class=3D"rfc2119">MUST</em>=
 also
inform the application which of these characters constitute white space app=
earing
in <a href=3D"#dt-elemcontent" title=3D"Element content">element content</a=
>.</p><p>A special <a href=3D"#dt-attr" title=3D"Attribute">attribute</a>=
 named <code>xml:space</code> may be attached to an element to signal an in=
tention that in that element,
white space should be preserved by applications. In valid documents, this
attribute, like any other, <em title=3D"Keyword in RFC 2119 context" class=
=3D"rfc2119">MUST</em> be <a href=3D"#dt-attdecl" title=3D"Attribute-List=
 Declaration">declared</a>
if it is used. When declared, it <em title=3D"Keyword in RFC 2119 context"=
 class=3D"rfc2119">MUST</em> be given as an <a href=3D"#dt-enumerated" titl=
e=3D"Enumerated Attribute Values">enumerated
type</a> whose values
are one or both of &quot;default&quot; and &quot;preserve&quot;.
For example:</p><div class=3D"exampleInner"><pre>&lt;!ATTLIST poem  xml:spa=
ce (default|preserve) &#x27;preserve&#x27;&gt;

&lt;!ATTLIST pre xml:space (preserve) #FIXED &#x27;preserve&#x27;&gt;</pre>=
</div><p>The value &quot;default&quot; signals that applications&#x27; defa=
ult white-space
processing modes are acceptable for this element; the value &quot;preserve&=
quot;
indicates the intent that applications preserve all the white space. This
declared intent is considered to apply to all elements within the content
of the element where it is specified, unless overridden with
another instance of the <code>xml:space</code> attribute. This specificatio=
n does not give meaning to any value of <code>xml:space</code> other than=
 &quot;default&quot; and &quot;preserve&quot;. It is an error for other val=
ues to be specified; the XML processor <em title=3D"Keyword in RFC 2119 con=
text" class=3D"rfc2119">MAY</em> report the error or <em title=3D"Keyword=
 in RFC 2119 context" class=3D"rfc2119">MAY</em> recover by ignoring the at=
tribute specification or by reporting the (erroneous) value to the applicat=
ion. Applications may ignore or reject erroneous values.</p><p>The <a href=
=3D"#dt-root" title=3D"Root Element">root element</a> of any document is co=
nsidered
to have signaled no intentions as regards application space handling, unless
it provides a value for this attribute or the attribute is declared with a
default value.</p></div><div class=3D"div2">
<h3><a id=3D"sec-line-ends" name=3D"sec-line-ends">2.11 End-of-Line Handlin=
g</a></h3><p><a id=3D"sec-line-ends" name=3D"sec-line-ends">XML </a><a href=
=3D"#dt-parsedent" title=3D"Text Entity">parsed entities</a> are often stor=
ed
in computer files which, for editing convenience, are organized into lines.
These lines are typically separated by some combination of the characters
CARRIAGE RETURN (#xD) and LINE FEED (#xA).</p><p>To
simplify the tasks of <a href=3D"#dt-app" title=3D"Application">application=
s</a>, the
<a href=3D"#dt-xml-proc" title=3D"XML Processor">XML
processor</a>
					<em title=3D"Keyword in RFC 2119 context" class=3D"rfc2119">MUST</em>=
 behave as if it normalized all line breaks in external parsed
entities (including the document entity) on input, before parsing, by trans=
lating
both the two-character sequence #xD #xA and any #xD that is not followed by
#xA to a single #xA character.</p></div><div class=3D"div2">
<h3><a id=3D"sec-lang-tag" name=3D"sec-lang-tag">2.12 Language Identificati=
on</a></h3><p><a id=3D"sec-lang-tag" name=3D"sec-lang-tag">In document proc=
essing, it is often useful to identify the natural or formal
language in which the content is written. A special </a><a href=3D"#dt-attr=
" title=3D"Attribute">attribute</a>
named <code>xml:lang</code> may be inserted in documents to specify the lan=
guage
used in the contents and attribute values of any element in an XML document.
In valid documents, this attribute, like any other, <em title=3D"Keyword in=
 RFC 2119 context" class=3D"rfc2119">MUST</em> be <a href=3D"#dt-attdecl"=
 title=3D"Attribute-List Declaration">declared</a>
if it is used. The
values of the attribute are language identifiers as defined by <a href=3D"#=
RFC1766">[IETF BCP 47]</a>, <cite>Tags
for the Identification of Languages</cite>; in addition, the empty string=
 may be specified.</p><p>(Productions 33 through 38 have been removed.)</p>=
<p>For example:</p><div class=3D"exampleInner"><pre>&lt;p xml:lang=3D&quot;=
en&quot;&gt;The quick brown fox jumps over the lazy dog.&lt;/p&gt;
&lt;p xml:lang=3D&quot;en-GB&quot;&gt;What colour is it?&lt;/p&gt;
&lt;p xml:lang=3D&quot;en-US&quot;&gt;What color is it?&lt;/p&gt;
&lt;sp who=3D&quot;Faust&quot; desc=3D&#x27;leise&#x27; xml:lang=3D&quot;de=
&quot;&gt;
  &lt;l&gt;Habe nun, ach! Philosophie,&lt;/l&gt;
  &lt;l&gt;Juristerei, und Medizin&lt;/l&gt;
  &lt;l&gt;und leider auch Theologie&lt;/l&gt;
  &lt;l&gt;durchaus studiert mit hei=C3=9Fem Bem=C3=BCh&#x27;n.&lt;/l&gt;
&lt;/sp&gt;</pre></div><p>The language specified by <code>xml:lang</code>=
 applies to the element where it is specified
		 (including the values of its attributes), and  to all elements in its co=
ntent unless
     overridden with another instance of <code>xml:lang</code>. In particul=
ar, the empty value of <code>xml:lang</code> is used on an element B to ove=
rride
		 a specification of <code>xml:lang</code> on an enclosing element A, with=
out specifying another language. Within B,
		 it is considered that there is no language information available, just=
 as if <code>xml:lang</code> had not been specified
		 on B or any of its ancestors. Applications determine which of an element=
&#x27;s attribute values
     and which parts of its character content, if any, are treated as langu=
age-dependent values described by <code>xml:lang</code>. </p><div class=3D"=
note"><p class=3D"prefix"><b>Note:</b></p><p>Language information may also=
 be provided by external transport protocols (e.g. HTTP or
  MIME). When available, this information may be used by XML applications,=
 but the more local
  information provided by <code>xml:lang</code> should be considered to ove=
rride it.
</p></div><p>A simple declaration for <code>xml:lang</code> might take the=
 form</p><div class=3D"exampleInner"><pre>xml:lang CDATA #IMPLIED</pre></di=
v><p>but specific default values may also be given, if appropriate. In a co=
llection
of French poems for English students, with glosses and notes in English, th=
e <code>xml:lang</code>
attribute might be declared this way:</p><div class=3D"exampleInner"><pre>&=
lt;!ATTLIST poem   xml:lang CDATA &#x27;fr&#x27;&gt;
&lt;!ATTLIST gloss  xml:lang CDATA &#x27;en&#x27;&gt;
&lt;!ATTLIST note   xml:lang CDATA &#x27;en&#x27;&gt;</pre></div></div></di=
v><div class=3D"div1">
<h2><a id=3D"sec-logical-struct" name=3D"sec-logical-struct">3 Logical Stru=
ctures</a></h2><p>
<a id=3D"sec-logical-struct" name=3D"sec-logical-struct">				[</a><a title=
=3D"Element" id=3D"dt-element" name=3D"dt-element">Definition</a>: Each <a=
 href=3D"#dt-xml-doc" title=3D"XML Document">XML
document</a> contains one or more <b>elements</b>, the boundaries
of which are either delimited by <a href=3D"#dt-stag" title=3D"Start-Tag">s=
tart-tags</a>
and <a href=3D"#dt-etag" title=3D"End Tag">end-tags</a>, or, for <a href=3D=
"#dt-empty" title=3D"Empty">empty</a>
elements, by an <a href=3D"#dt-eetag" title=3D"empty-element tag">empty-ele=
ment tag</a>. Each
element has a type, identified by name, sometimes called its &quot;generic
identifier&quot; (GI), and may have a set of attribute specifications.]
Each attribute specification has a <a href=3D"#dt-attrname" title=3D"Attrib=
ute Name">name</a>
and a <a href=3D"#dt-attrval" title=3D"Attribute Value">value</a>.</p>
<h5><a id=3D"d0e2130" name=3D"d0e2130">Element</a></h5><table summary=3D"Sc=
rap" class=3D"scrap"><tbody><tr valign=3D"baseline"><td><a id=3D"NT-element=
" name=3D"NT-element">[39]&nbsp;&nbsp;&nbsp;</a></td><td><code>element</cod=
e></td><td>&nbsp;&nbsp;&nbsp;::=3D&nbsp;&nbsp;&nbsp;</td><td><code>
						<a href=3D"#NT-EmptyElemTag">EmptyElemTag</a>
					</code></td></tr><tr valign=3D"baseline"><td></td><td></td><td></td><t=
d><code>| <a href=3D"#NT-STag">STag</a>
						<a href=3D"#NT-content">content</a>
						<a href=3D"#NT-ETag">ETag</a>
					</code></td><td><a href=3D"#GIMatch">[WFC: Element Type Match]</a></td=
></tr><tr valign=3D"baseline"><td></td><td></td><td></td><td></td><td><a hr=
ef=3D"#elementvalid">[VC: Element Valid]</a></td></tr></tbody></table><p><a=
 id=3D"d0e2130" name=3D"d0e2130">This specification does not constrain the
			application semantics, use, or (beyond syntax)
names of the element types and attributes, except that names beginning with
a match to <code>((&#x27;X&#x27;|&#x27;x&#x27;)(&#x27;M&#x27;|&#x27;m&#x27;=
)(&#x27;L&#x27;|&#x27;l&#x27;))</code> are reserved for standardization
in this or future versions of this specification.</a></p><div class=3D"cons=
traint"><p class=3D"prefix"><a id=3D"GIMatch" name=3D"GIMatch"><b>Well-form=
edness constraint: Element Type Match</b></a></p><p><a id=3D"GIMatch" name=
=3D"GIMatch">The </a><a href=3D"#NT-Name">Name</a>
in an element&#x27;s end-tag <em title=3D"Keyword in RFC 2119 context" clas=
s=3D"rfc2119">MUST</em> match the element type in the start-tag.</p></div><=
div class=3D"constraint"><p class=3D"prefix"><a id=3D"elementvalid" name=3D=
"elementvalid"><b>Validity constraint: Element Valid</b></a></p><p><a id=3D=
"elementvalid" name=3D"elementvalid">An element is valid
if there is a declaration matching </a><a href=3D"#NT-elementdecl">elementd=
ecl</a>
where the <a href=3D"#NT-Name">Name</a> matches the element type, and one of
the following holds:</p><ol class=3D"enumar"><li><p>The declaration matches=
 <b>EMPTY</b> and the element has no <a href=3D"#dt-content" title=3D"Conte=
nt">content</a> (not even entity
references, comments, PIs or white space).</p></li><li><p>The declaration=
 matches <a href=3D"#NT-children">children</a> and the
sequence of <a href=3D"#dt-parentchild" title=3D"Parent/Child">child elemen=
ts</a> belongs
to the language generated by the regular expression in the content model,
with optional white space, comments and
PIs (i.e. markup matching production [27] <a href=3D"#NT-Misc">Misc</a>) be=
tween the
start-tag and the first child element, between child elements, or between
the last child element and the end-tag. Note that a CDATA section containing
only white space or a reference
to an entity whose replacement text is character references expanding to wh=
ite
space do not
match the nonterminal <a href=3D"#NT-S">S</a>, and
hence cannot appear in these positions; however, a
reference to an internal entity with a literal value consisting of character
references expanding to white space does match <a href=3D"#NT-S">S</a>, sin=
ce its
replacement text is the white space resulting from expansion of the charact=
er
references.</p></li><li><p>The declaration matches <a href=3D"#NT-Mixed">Mi=
xed</a>, and the content
(after replacing
any entity references with their replacement text) consists of
<a href=3D"#dt-chardata" title=3D"Character Data">character data</a>
(including <a href=3D"#dt-cdsection" title=3D"CDATA Section">CDATA sections=
</a>),
<a href=3D"#dt-comment" title=3D"Comment">comments</a>, <a href=3D"#dt-pi"=
 title=3D"Processing instruction">PIs</a> and <a href=3D"#dt-parentchild"=
 title=3D"Parent/Child">child elements</a> whose types match names in the
content model.</p></li><li><p>The declaration matches <b>ANY</b>, and the=
 content (after replacing
any entity references with their replacement text)
consists of character data, <a href=3D"#dt-cdsection" title=3D"CDATA Sectio=
n">CDATA
sections</a>, <a href=3D"#dt-comment" title=3D"Comment">comments</a>, <a hr=
ef=3D"#dt-pi" title=3D"Processing instruction">PIs</a>
 and <a href=3D"#dt-parentchild" title=3D"Parent/Child">child elements</a>
whose types have been declared.</p></li></ol></div><div class=3D"div2">
<h3><a id=3D"sec-starttags" name=3D"sec-starttags">3.1 Start-Tags, End-Tags=
, and Empty-Element Tags</a></h3><p>
<a id=3D"sec-starttags" name=3D"sec-starttags">					[</a><a title=3D"Start-=
Tag" id=3D"dt-stag" name=3D"dt-stag">Definition</a>: The beginning of every=
 non-empty
XML element is marked by a <b>start-tag</b>.]
				</p>
<h5><a id=3D"d0e2259" name=3D"d0e2259">Start-tag</a></h5><table summary=3D"=
Scrap" class=3D"scrap"><tbody><tr valign=3D"baseline"><td><a id=3D"NT-STag"=
 name=3D"NT-STag">[40]&nbsp;&nbsp;&nbsp;</a></td><td><code>STag</code></td>=
<td>&nbsp;&nbsp;&nbsp;::=3D&nbsp;&nbsp;&nbsp;</td><td><code>&#x27;&lt;&#x27=
; <a href=3D"#NT-Name">Name</a> (<a href=3D"#NT-S">S</a>
								<a href=3D"#NT-Attribute">Attribute</a>)* <a href=3D"#NT-S">S</a>?=
 &#x27;&gt;&#x27;</code></td><td><a href=3D"#uniqattspec">[WFC: Unique Att=
 Spec]</a></td></tr><tr valign=3D"baseline"><td><a id=3D"NT-Attribute" name=
=3D"NT-Attribute">[41]&nbsp;&nbsp;&nbsp;</a></td><td><code>Attribute</code>=
</td><td>&nbsp;&nbsp;&nbsp;::=3D&nbsp;&nbsp;&nbsp;</td><td><code>
								<a href=3D"#NT-Name">Name</a>
								<a href=3D"#NT-Eq">Eq</a>
								<a href=3D"#NT-AttValue">AttValue</a>
							</code></td><td><a href=3D"#ValueType">[VC: Attribute Value Type]</a=
></td></tr><tr valign=3D"baseline"><td></td><td></td><td></td><td></td><td>=
<a href=3D"#NoExternalRefs">[WFC: No External Entity References]</a></td></=
tr><tr valign=3D"baseline"><td></td><td></td><td></td><td></td><td><a href=
=3D"#CleanAttrVals">[WFC: No &lt; in Attribute Values]</a></td></tr></tbody=
></table><p><a id=3D"d0e2259" name=3D"d0e2259">The </a><a href=3D"#NT-Name"=
>Name</a> in the start- and end-tags gives the element&#x27;s <b>type</b>.=
 [<a title=3D"Attribute" id=3D"dt-attr" name=3D"dt-attr">Definition</a>: =
 The <a href=3D"#NT-Name">Name</a>-<a href=3D"#NT-AttValue">AttValue</a>
pairs are referred to as the <b>attribute specifications</b> of the
element], [<a title=3D"Attribute Name" id=3D"dt-attrname" name=3D"dt-attrna=
me">Definition</a>: with the <a href=3D"#NT-Name">Name</a> in each pair ref=
erred to as the <b>attribute name</b>
					]
and [<a title=3D"Attribute Value" id=3D"dt-attrval" name=3D"dt-attrval">Def=
inition</a>: the content of the <a href=3D"#NT-AttValue">AttValue</a> (the=
 text between the <code>&#x27;</code> or <code>&quot;</code>
delimiters) as the <b>attribute value</b>.] Note
that the order of attribute specifications in a start-tag or empty-element
tag is not significant.</p><div class=3D"constraint"><p class=3D"prefix"><a=
 id=3D"uniqattspec" name=3D"uniqattspec"><b>Well-formedness constraint: Uni=
que Att Spec</b></a></p><p><a id=3D"uniqattspec" name=3D"uniqattspec">An at=
tribute name
<em title=3D"Keyword in RFC 2119 context" class=3D"rfc2119">MUST NOT</em>=
 appear more than once in the same start-tag or empty-element tag.</a></p><=
/div><div class=3D"constraint"><p class=3D"prefix"><a id=3D"ValueType" name=
=3D"ValueType"><b>Validity constraint: Attribute Value Type</b></a></p><p><=
a id=3D"ValueType" name=3D"ValueType">The attribute <em title=3D"Keyword in=
 RFC 2119 context" class=3D"rfc2119">MUST</em>
have been declared; the value <em title=3D"Keyword in RFC 2119 context" cla=
ss=3D"rfc2119">MUST</em> be of the type declared for it. (For attribute
types, see </a><a href=3D"#attdecls"><b>3.3 Attribute-List Declarations</b>=
</a>.)</p></div><div class=3D"constraint"><p class=3D"prefix"><a id=3D"NoEx=
ternalRefs" name=3D"NoExternalRefs"><b>Well-formedness constraint: No Exter=
nal Entity References</b></a></p><p><a id=3D"NoExternalRefs" name=3D"NoExte=
rnalRefs">Attribute
values <em title=3D"Keyword in RFC 2119 context" class=3D"rfc2119">MUST NOT=
</em> contain direct or indirect entity references to external entities.</a=
></p></div><div class=3D"constraint"><p class=3D"prefix"><a id=3D"CleanAttr=
Vals" name=3D"CleanAttrVals"><b>Well-formedness constraint: No <code>&lt;</=
code> in Attribute Values</b></a></p><p><a id=3D"CleanAttrVals" name=3D"Cle=
anAttrVals">The </a><a href=3D"#dt-repltext" title=3D"Replacement Text">rep=
lacement text</a> of any entity
referred to directly or indirectly in an attribute value <em title=3D"Keywo=
rd in RFC 2119 context" class=3D"rfc2119">MUST NOT</em> contain a <code>&lt=
;</code>.</p></div><p>An example of a start-tag:</p><div class=3D"exampleIn=
ner"><pre>&lt;termdef id=3D&quot;dt-dog&quot; term=3D&quot;dog&quot;&gt;</p=
re></div><p>
					[<a title=3D"End Tag" id=3D"dt-etag" name=3D"dt-etag">Definition</a>:=
 The end of every element that begins
with a start-tag <em title=3D"Keyword in RFC 2119 context" class=3D"rfc2119=
">MUST</em> be marked by an <b>end-tag</b> containing a name
that echoes the element&#x27;s type as given in the start-tag:]
				</p>
<h5><a id=3D"d0e2403" name=3D"d0e2403">End-tag</a></h5><table summary=3D"Sc=
rap" class=3D"scrap"><tbody><tr valign=3D"baseline"><td><a id=3D"NT-ETag"=
 name=3D"NT-ETag">[42]&nbsp;&nbsp;&nbsp;</a></td><td><code>ETag</code></td>=
<td>&nbsp;&nbsp;&nbsp;::=3D&nbsp;&nbsp;&nbsp;</td><td><code>&#x27;&lt;/&#x2=
7; <a href=3D"#NT-Name">Name</a>
								<a href=3D"#NT-S">S</a>?
&#x27;&gt;&#x27;</code></td></tr></tbody></table><p><a id=3D"d0e2403" name=
=3D"d0e2403">An example of an end-tag:</a></p><div class=3D"exampleInner"><=
pre><a id=3D"d0e2403" name=3D"d0e2403">&lt;/termdef&gt;</a></pre></div><p>
<a id=3D"d0e2403" name=3D"d0e2403">					[</a><a title=3D"Content" id=3D"dt-=
content" name=3D"dt-content">Definition</a>: The <a href=3D"#dt-text" title=
=3D"Text">text</a>
between the start-tag and end-tag is called the element&#x27;s <b>content</=
b>:]
				</p>
<h5><a id=3D"d0e2433" name=3D"d0e2433">Content of Elements</a></h5><table=
 summary=3D"Scrap" class=3D"scrap"><tbody><tr valign=3D"baseline"><td><a id=
=3D"NT-content" name=3D"NT-content">[43]&nbsp;&nbsp;&nbsp;</a></td><td><cod=
e>content</code></td><td>&nbsp;&nbsp;&nbsp;::=3D&nbsp;&nbsp;&nbsp;</td><td>=
<code>
								<a href=3D"#NT-CharData">CharData</a>? ((<a href=3D"#NT-element">el=
ement</a>
| <a href=3D"#NT-Reference">Reference</a> | <a href=3D"#NT-CDSect">CDSect</=
a>
| <a href=3D"#NT-PI">PI</a> | <a href=3D"#NT-Comment">Comment</a>) <a href=
=3D"#NT-CharData">CharData</a>?)*</code></td></tr></tbody></table><p>
<a id=3D"d0e2433" name=3D"d0e2433">					[</a><a title=3D"Empty" id=3D"dt-em=
pty" name=3D"dt-empty">Definition</a>: An element
with no <a href=3D"#NT-content">content</a> is said to be <b>empty</b>.] Th=
e representation
of an empty element is either a start-tag immediately followed by an end-ta=
g,
or an empty-element tag. [<a title=3D"empty-element tag" id=3D"dt-eetag" na=
me=3D"dt-eetag">Definition</a>: An <b>empty-element
tag</b> takes a special form:]
				</p>
<h5><a id=3D"d0e2480" name=3D"d0e2480">Tags for Empty Elements</a></h5><tab=
le summary=3D"Scrap" class=3D"scrap"><tbody><tr valign=3D"baseline"><td><a=
 id=3D"NT-EmptyElemTag" name=3D"NT-EmptyElemTag">[44]&nbsp;&nbsp;&nbsp;</a>=
</td><td><code>EmptyElemTag</code></td><td>&nbsp;&nbsp;&nbsp;::=3D&nbsp;&nb=
sp;&nbsp;</td><td><code>&#x27;&lt;&#x27; <a href=3D"#NT-Name">Name</a> (<a=
 href=3D"#NT-S">S</a>
								<a href=3D"#NT-Attribute">Attribute</a>)* <a href=3D"#NT-S">S</a>?=
 &#x27;/&gt;&#x27;</code></td><td><a href=3D"#uniqattspec">[WFC: Unique Att=
 Spec]</a></td></tr></tbody></table><p><a id=3D"d0e2480" name=3D"d0e2480">E=
mpty-element tags may be used for any element which has no content, whether
or not it is declared using the keyword <b>EMPTY</b>. </a><a href=3D"#dt-in=
terop" title=3D"For interoperability">For
interoperability</a>, the empty-element tag <em title=3D"Keyword in RFC 211=
9 context" class=3D"rfc2119">SHOULD</em>
be used, and <em title=3D"Keyword in RFC 2119 context" class=3D"rfc2119">SH=
OULD</em> only be used, for elements which are declared
EMPTY.</p><p>Examples of empty elements:</p><div class=3D"exampleInner"><pr=
e>&lt;IMG align=3D&quot;left&quot;
 src=3D&quot;http://www.w3.org/Icons/WWW/w3c_home&quot; /&gt;
&lt;br&gt;&lt;/br&gt;
&lt;br/&gt;</pre></div></div><div class=3D"div2">
<h3><a id=3D"elemdecls" name=3D"elemdecls">3.2 Element Type Declarations</a=
></h3><p><a id=3D"elemdecls" name=3D"elemdecls">The </a><a href=3D"#dt-elem=
ent" title=3D"Element">element</a> structure of an <a href=3D"#dt-xml-doc"=
 title=3D"XML Document">XML document</a> may, for <a href=3D"#dt-valid" tit=
le=3D"Validity">validation</a>
purposes, be constrained using element type and attribute-list declarations.
An element type declaration constrains the element&#x27;s <a href=3D"#dt-co=
ntent" title=3D"Content">content</a>.</p><p>Element type declarations often=
 constrain which element types can appear
as <a href=3D"#dt-parentchild" title=3D"Parent/Child">children</a> of the=
 element. At user
option, an XML processor <em title=3D"Keyword in RFC 2119 context" class=3D=
"rfc2119">MAY</em> issue a warning when a declaration mentions an
element type for which no declaration is provided, but this is not an error=
.</p><p>
					[<a title=3D"Element Type declaration" id=3D"dt-eldecl" name=3D"dt-eld=
ecl">Definition</a>: An <b>element
type declaration</b> takes the form:]
				</p>
<h5><a id=3D"d0e2553" name=3D"d0e2553">Element Type Declaration</a></h5><ta=
ble summary=3D"Scrap" class=3D"scrap"><tbody><tr valign=3D"baseline"><td><a=
 id=3D"NT-elementdecl" name=3D"NT-elementdecl">[45]&nbsp;&nbsp;&nbsp;</a></=
td><td><code>elementdecl</code></td><td>&nbsp;&nbsp;&nbsp;::=3D&nbsp;&nbsp;=
&nbsp;</td><td><code>&#x27;&lt;!ELEMENT&#x27; <a href=3D"#NT-S">S</a>
								<a href=3D"#NT-Name">Name</a>
								<a href=3D"#NT-S">S</a>
								<a href=3D"#NT-contentspec">contentspec</a>
								<a href=3D"#NT-S">S</a>?
&#x27;&gt;&#x27;</code></td><td><a href=3D"#EDUnique">[VC: Unique Element=
 Type Declaration]</a></td></tr><tr valign=3D"baseline"><td><a id=3D"NT-con=
tentspec" name=3D"NT-contentspec">[46]&nbsp;&nbsp;&nbsp;</a></td><td><code>=
contentspec</code></td><td>&nbsp;&nbsp;&nbsp;::=3D&nbsp;&nbsp;&nbsp;</td><t=
d><code>&#x27;EMPTY&#x27; | &#x27;ANY&#x27; | <a href=3D"#NT-Mixed">Mixed</=
a>
| <a href=3D"#NT-children">children</a>
							</code></td></tr></tbody></table><p><a id=3D"d0e2553" name=3D"d0e255=
3">where the </a><a href=3D"#NT-Name">Name</a> gives the element type being=
 declared.</p><div class=3D"constraint"><p class=3D"prefix"><a id=3D"EDUniq=
ue" name=3D"EDUnique"><b>Validity constraint: Unique Element Type Declarati=
on</b></a></p><p><a id=3D"EDUnique" name=3D"EDUnique">An element type <em=
 title=3D"Keyword in RFC 2119 context" class=3D"rfc2119">MUST NOT</em> be=
 declared more than once.</a></p></div><p><a id=3D"EDUnique" name=3D"EDUniq=
ue">Examples of element type declarations:</a></p><div class=3D"exampleInne=
r"><pre><a id=3D"EDUnique" name=3D"EDUnique">&lt;!ELEMENT br EMPTY&gt;
&lt;!ELEMENT p (#PCDATA|emph)* &gt;
&lt;!ELEMENT %name.para; %content.para; &gt;
&lt;!ELEMENT container ANY&gt;</a></pre></div><div class=3D"div3">
<h4><a id=3D"sec-element-content" name=3D"sec-element-content">3.2.1 Elemen=
t Content</a></h4><p>
<a id=3D"sec-element-content" name=3D"sec-element-content">						[</a><a ti=
tle=3D"Element content" id=3D"dt-elemcontent" name=3D"dt-elemcontent">Defin=
ition</a>: An element <a href=3D"#dt-stag" title=3D"Start-Tag">type</a> has=
 <b>element content</b> when elements
of that type <em title=3D"Keyword in RFC 2119 context" class=3D"rfc2119">MU=
ST</em> contain only <a href=3D"#dt-parentchild" title=3D"Parent/Child">chi=
ld</a>
elements (no character data), optionally separated by white space (characte=
rs
matching the nonterminal <a href=3D"#NT-S">S</a>).]
						[<a title=3D"Content model" id=3D"dt-content-model" name=3D"dt-conten=
t-model">Definition</a>: In this case, the constraint includes a <b>content
model</b>, a simple grammar governing the allowed types of the
child elements and the order in which they are allowed to appear.]
The grammar is built on content particles (<a href=3D"#NT-cp">cp</a>s), whi=
ch
consist of names, choice lists of content particles, or sequence lists of
content particles:</p>
<h5><a id=3D"d0e2638" name=3D"d0e2638">Element-content Models</a></h5><tabl=
e summary=3D"Scrap" class=3D"scrap"><tbody><tr valign=3D"baseline"><td><a=
 id=3D"NT-children" name=3D"NT-children">[47]&nbsp;&nbsp;&nbsp;</a></td><td=
><code>children</code></td><td>&nbsp;&nbsp;&nbsp;::=3D&nbsp;&nbsp;&nbsp;</t=
d><td><code>(<a href=3D"#NT-choice">choice</a> | <a href=3D"#NT-seq">seq</a=
>)
(&#x27;?&#x27; | &#x27;*&#x27; | &#x27;+&#x27;)?</code></td></tr><tr valign=
=3D"baseline"><td><a id=3D"NT-cp" name=3D"NT-cp">[48]&nbsp;&nbsp;&nbsp;</a>=
</td><td><code>cp</code></td><td>&nbsp;&nbsp;&nbsp;::=3D&nbsp;&nbsp;&nbsp;<=
/td><td><code>(<a href=3D"#NT-Name">Name</a> | <a href=3D"#NT-choice">choic=
e</a>
| <a href=3D"#NT-seq">seq</a>) (&#x27;?&#x27; | &#x27;*&#x27; | &#x27;+&#x2=
7;)?</code></td></tr><tr valign=3D"baseline"><td><a id=3D"NT-choice" name=
=3D"NT-choice">[49]&nbsp;&nbsp;&nbsp;</a></td><td><code>choice</code></td><=
td>&nbsp;&nbsp;&nbsp;::=3D&nbsp;&nbsp;&nbsp;</td><td><code>&#x27;(&#x27; <a=
 href=3D"#NT-S">S</a>? <a href=3D"#NT-cp">cp</a> ( <a href=3D"#NT-S">S</a>?=
 &#x27;|&#x27; <a href=3D"#NT-S">S</a>? <a href=3D"#NT-cp">cp</a> )+ <a hre=
f=3D"#NT-S">S</a>? &#x27;)&#x27;</code></td><td><a href=3D"#vc-PEinGroup">[=
VC: Proper Group/PE Nesting]</a></td></tr><tr valign=3D"baseline"><td><a id=
=3D"NT-seq" name=3D"NT-seq">[50]&nbsp;&nbsp;&nbsp;</a></td><td><code>seq</c=
ode></td><td>&nbsp;&nbsp;&nbsp;::=3D&nbsp;&nbsp;&nbsp;</td><td><code>&#x27;=
(&#x27; <a href=3D"#NT-S">S</a>? <a href=3D"#NT-cp">cp</a> ( <a href=3D"#NT=
-S">S</a>? &#x27;,&#x27; <a href=3D"#NT-S">S</a>? <a href=3D"#NT-cp">cp</a>=
 )* <a href=3D"#NT-S">S</a>? &#x27;)&#x27;</code></td><td><a href=3D"#vc-PE=
inGroup">[VC: Proper Group/PE Nesting]</a></td></tr></tbody></table><p><a=
 id=3D"d0e2638" name=3D"d0e2638">where each </a><a href=3D"#NT-Name">Name</=
a> is the type of an element which
may appear as a <a href=3D"#dt-parentchild" title=3D"Parent/Child">child</a=
>. Any content
particle in a choice list may appear in the <a href=3D"#dt-elemcontent" tit=
le=3D"Element content">element
content</a> at the location where the choice list appears in the grammar;
content particles occurring in a sequence list <em title=3D"Keyword in RFC=
 2119 context" class=3D"rfc2119">MUST</em> each appear in the <a href=3D"#d=
t-elemcontent" title=3D"Element content">element content</a> in the order=
 given in the list.
The optional character following a name or list governs whether the element
or the content particles in the list may occur one or more (<code>+</code>),
zero or more (<code>*</code>), or zero or one times (<code>?</code>). The
absence of such an operator means that the element or content particle <em=
 title=3D"Keyword in RFC 2119 context" class=3D"rfc2119">MUST</em>
appear exactly once. This syntax and meaning are identical to those used in
the productions in this specification.</p><p>The content of an element matc=
hes a content model if and only if it is
possible to trace out a path through the content model, obeying the sequenc=
e,
choice, and repetition operators and matching each element in the content
against an element type in the content model. <a href=3D"#dt-compat" title=
=3D"For Compatibility">For
compatibility</a>, it is an error if the content model
allows an element to match more than one occurrence of an element type in=
 the
content model. For more information, see <a href=3D"#determinism"><b>E Dete=
rministic Content Models</b></a>.</p><div class=3D"constraint"><p class=3D"=
prefix"><a id=3D"vc-PEinGroup" name=3D"vc-PEinGroup"><b>Validity constraint=
: Proper Group/PE Nesting</b></a></p><p><a id=3D"vc-PEinGroup" name=3D"vc-P=
EinGroup">Parameter-entity </a><a href=3D"#dt-repltext" title=3D"Replacemen=
t Text">replacement text</a>
							<em title=3D"Keyword in RFC 2119 context" class=3D"rfc2119">MUST</em=
> be properly nested with parenthesized
groups. That is to say, if either of the opening or closing parentheses in
a <a href=3D"#NT-choice">choice</a>, <a href=3D"#NT-seq">seq</a>, or <a hre=
f=3D"#NT-Mixed">Mixed</a>
construct is contained in the replacement text for a <a href=3D"#dt-PERef"=
 title=3D"Parameter-entity reference">parameter
entity</a>, both <em title=3D"Keyword in RFC 2119 context" class=3D"rfc2119=
">MUST</em> be contained in the same replacement text.</p><p>
							<a href=3D"#dt-interop" title=3D"For interoperability">For interoper=
ability</a>, if a parameter-entity reference
appears in a <a href=3D"#NT-choice">choice</a>, <a href=3D"#NT-seq">seq</a>=
, or <a href=3D"#NT-Mixed">Mixed</a> construct, its replacement text <em ti=
tle=3D"Keyword in RFC 2119 context" class=3D"rfc2119">SHOULD</em> contain at
least one non-blank character, and neither the first nor last non-blank cha=
racter
of the replacement text <em title=3D"Keyword in RFC 2119 context" class=3D"=
rfc2119">SHOULD</em> be a connector (<code>|</code> or <code>,</code>).</p>=
</div><p>Examples of element-content models:</p><div class=3D"exampleInner"=
><pre>&lt;!ELEMENT spec (front, body, back?)&gt;
&lt;!ELEMENT div1 (head, (p | list | note)*, div2*)&gt;
&lt;!ELEMENT dictionary-body (%div.mix; | %dict.mix;)*&gt;</pre></div></div=
><div class=3D"div3">
<h4><a id=3D"sec-mixed-content" name=3D"sec-mixed-content">3.2.2 Mixed Cont=
ent</a></h4><p>
<a id=3D"sec-mixed-content" name=3D"sec-mixed-content">						[</a><a title=
=3D"Mixed Content" id=3D"dt-mixed" name=3D"dt-mixed">Definition</a>: An ele=
ment <a href=3D"#dt-stag" title=3D"Start-Tag">type</a>
has <b>mixed content</b> when elements of that type may contain character
data, optionally interspersed with <a href=3D"#dt-parentchild" title=3D"Par=
ent/Child">child</a>
elements.] In this case, the types of the child elements may be constrained,
but not their order or their number of occurrences:</p>
<h5><a id=3D"d0e2826" name=3D"d0e2826">Mixed-content Declaration</a></h5><t=
able summary=3D"Scrap" class=3D"scrap"><tbody><tr valign=3D"baseline"><td><=
a id=3D"NT-Mixed" name=3D"NT-Mixed">[51]&nbsp;&nbsp;&nbsp;</a></td><td><cod=
e>Mixed</code></td><td>&nbsp;&nbsp;&nbsp;::=3D&nbsp;&nbsp;&nbsp;</td><td><c=
ode>&#x27;(&#x27; <a href=3D"#NT-S">S</a>? &#x27;#PCDATA&#x27; (<a href=3D"=
#NT-S">S</a>?
&#x27;|&#x27; <a href=3D"#NT-S">S</a>? <a href=3D"#NT-Name">Name</a>)* <a=
 href=3D"#NT-S">S</a>?
&#x27;)*&#x27; </code></td></tr><tr valign=3D"baseline"><td></td><td></td><=
td></td><td><code>| &#x27;(&#x27; <a href=3D"#NT-S">S</a>? &#x27;#PCDATA&#x=
27; <a href=3D"#NT-S">S</a>? &#x27;)&#x27; </code></td><td><a href=3D"#vc-P=
EinGroup">[VC: Proper Group/PE Nesting]</a></td></tr><tr valign=3D"baseline=
"><td></td><td></td><td></td><td></td><td><a href=3D"#vc-MixedChildrenUniqu=
e">[VC: No Duplicate Types]</a></td></tr></tbody></table><p><a id=3D"d0e282=
6" name=3D"d0e2826">where the </a><a href=3D"#NT-Name">Name</a>s give the=
 types of elements that
may appear as children. The
keyword <b>#PCDATA</b> derives historically from the term &quot;parsed
character data.&quot;
					</p><div class=3D"constraint"><p class=3D"prefix"><a id=3D"vc-MixedChi=
ldrenUnique" name=3D"vc-MixedChildrenUnique"><b>Validity constraint: No Dup=
licate Types</b></a></p><p><a id=3D"vc-MixedChildrenUnique" name=3D"vc-Mixe=
dChildrenUnique">The
same name <em title=3D"Keyword in RFC 2119 context" class=3D"rfc2119">MUST=
 NOT</em> appear more than once in a single mixed-content declaration.</a><=
/p></div><p><a id=3D"vc-MixedChildrenUnique" name=3D"vc-MixedChildrenUnique=
">Examples of mixed content declarations:</a></p><div class=3D"exampleInner=
"><pre><a id=3D"vc-MixedChildrenUnique" name=3D"vc-MixedChildrenUnique">&lt=
;!ELEMENT p (#PCDATA|a|ul|b|i|em)*&gt;
&lt;!ELEMENT p (#PCDATA | %font; | %phrase; | %special; | %form;)* &gt;
&lt;!ELEMENT b (#PCDATA)&gt;</a></pre></div></div></div><div class=3D"div2">
<h3><a id=3D"attdecls" name=3D"attdecls">3.3 Attribute-List Declarations</a=
></h3><p>
<a id=3D"attdecls" name=3D"attdecls">					</a><a href=3D"#dt-attr" title=3D=
"Attribute">Attributes</a> are used to associate name-value
pairs with <a href=3D"#dt-element" title=3D"Element">elements</a>. Attribut=
e specifications
<em title=3D"Keyword in RFC 2119 context" class=3D"rfc2119">MUST NOT</em>=
 appear outside of <a href=3D"#dt-stag" title=3D"Start-Tag">start-tags</a>=
 and <a href=3D"#dt-eetag" title=3D"empty-element tag">empty-element tags</=
a>; thus, the productions used to
recognize them appear in <a href=3D"#sec-starttags"><b>3.1 Start-Tags, End-=
Tags, and Empty-Element Tags</b></a>. Attribute-list declarations
may be used:</p><ul><li><p>To define the set of attributes pertaining to a=
 given element type.</p></li><li><p>To establish type constraints for these=
 attributes.</p></li><li><p>To provide <a href=3D"#dt-default" title=3D"Att=
ribute Default">default values</a> for
attributes.</p></li></ul><p>
					[<a title=3D"Attribute-List Declaration" id=3D"dt-attdecl" name=3D"dt-=
attdecl">Definition</a>:=20
						<b>Attribute-list
declarations</b> specify the name, data type, and default value (if any)
of each attribute associated with a given element type:]
				</p>
<h5><a id=3D"d0e2926" name=3D"d0e2926">Attribute-list Declaration</a></h5><=
table summary=3D"Scrap" class=3D"scrap"><tbody><tr valign=3D"baseline"><td>=
<a id=3D"NT-AttlistDecl" name=3D"NT-AttlistDecl">[52]&nbsp;&nbsp;&nbsp;</a>=
</td><td><code>AttlistDecl</code></td><td>&nbsp;&nbsp;&nbsp;::=3D&nbsp;&nbs=
p;&nbsp;</td><td><code>&#x27;&lt;!ATTLIST&#x27; <a href=3D"#NT-S">S</a>
							<a href=3D"#NT-Name">Name</a>
							<a href=3D"#NT-AttDef">AttDef</a>* <a href=3D"#NT-S">S</a>? &#x27;&g=
t;&#x27;</code></td></tr></tbody><tbody><tr valign=3D"baseline"><td><a id=
=3D"NT-AttDef" name=3D"NT-AttDef">[53]&nbsp;&nbsp;&nbsp;</a></td><td><code>=
AttDef</code></td><td>&nbsp;&nbsp;&nbsp;::=3D&nbsp;&nbsp;&nbsp;</td><td><co=
de>
							<a href=3D"#NT-S">S</a>
							<a href=3D"#NT-Name">Name</a>
							<a href=3D"#NT-S">S</a>
							<a href=3D"#NT-AttType">AttType</a>
							<a href=3D"#NT-S">S</a>
							<a href=3D"#NT-DefaultDecl">DefaultDecl</a>
						</code></td></tr></tbody></table><p><a id=3D"d0e2926" name=3D"d0e2926=
">The </a><a href=3D"#NT-Name">Name</a> in the <a href=3D"#NT-AttlistDecl">=
AttlistDecl</a>
rule is the type of an element. At user option, an XML processor <em title=
=3D"Keyword in RFC 2119 context" class=3D"rfc2119">MAY</em> issue
a warning if attributes are declared for an element type not itself declare=
d,
but this is not an error. The <a href=3D"#NT-Name">Name</a> in the <a href=
=3D"#NT-AttDef">AttDef</a>
rule is the name of the attribute.</p><p>When more than one <a href=3D"#NT-=
AttlistDecl">AttlistDecl</a> is provided
for a given element type, the contents of all those provided are merged. Wh=
en
more than one definition is provided for the same attribute of a given elem=
ent
type, the first declaration is binding and later declarations are ignored.=
 <a href=3D"#dt-interop" title=3D"For interoperability">For interoperabilit=
y,</a> writers of DTDs may choose
to provide at most one attribute-list declaration for a given element type,
at most one attribute definition for a given attribute name in an attribute=
-list
declaration, and at least one attribute definition in each attribute-list
declaration. For interoperability, an XML processor <em title=3D"Keyword in=
 RFC 2119 context" class=3D"rfc2119">MAY</em> at user option
issue a warning when more than one attribute-list declaration is provided
for a given element type, or more than one attribute definition is provided
for a given attribute, but this is not an error.</p><div class=3D"div3">
<h4><a id=3D"sec-attribute-types" name=3D"sec-attribute-types">3.3.1 Attrib=
ute Types</a></h4><p><a id=3D"sec-attribute-types" name=3D"sec-attribute-ty=
pes">XML attribute types are of three kinds: a string type, a set of tokeni=
zed
types, and enumerated types. The string type may take any literal string as
a value; the tokenized types are more constrained.
The validity constraints noted in the grammar are applied after the attribu=
te
value has been normalized as described in </a><a href=3D"#AVNormalize"><b>3=
.3.3 Attribute-Value Normalization</b></a>.</p>
<h5><a id=3D"d0e3004" name=3D"d0e3004">Attribute Types</a></h5><table summa=
ry=3D"Scrap" class=3D"scrap"><tbody><tr valign=3D"baseline"><td><a id=3D"NT=
-AttType" name=3D"NT-AttType">[54]&nbsp;&nbsp;&nbsp;</a></td><td><code>AttT=
ype</code></td><td>&nbsp;&nbsp;&nbsp;::=3D&nbsp;&nbsp;&nbsp;</td><td><code>
									<a href=3D"#NT-StringType">StringType</a> | <a href=3D"#NT-Tokeniz=
edType">TokenizedType</a>
| <a href=3D"#NT-EnumeratedType">EnumeratedType</a>
								</code></td></tr><tr valign=3D"baseline"><td><a id=3D"NT-StringType=
" name=3D"NT-StringType">[55]&nbsp;&nbsp;&nbsp;</a></td><td><code>StringTyp=
e</code></td><td>&nbsp;&nbsp;&nbsp;::=3D&nbsp;&nbsp;&nbsp;</td><td><code>&#=
x27;CDATA&#x27;</code></td></tr><tr valign=3D"baseline"><td><a id=3D"NT-Tok=
enizedType" name=3D"NT-TokenizedType">[56]&nbsp;&nbsp;&nbsp;</a></td><td><c=
ode>TokenizedType</code></td><td>&nbsp;&nbsp;&nbsp;::=3D&nbsp;&nbsp;&nbsp;<=
/td><td><code>&#x27;ID&#x27;</code></td><td><a href=3D"#id">[VC: ID]</a></t=
d></tr><tr valign=3D"baseline"><td></td><td></td><td></td><td></td><td><a=
 href=3D"#one-id-per-el">[VC: One ID per Element Type]</a></td></tr><tr val=
ign=3D"baseline"><td></td><td></td><td></td><td></td><td><a href=3D"#id-def=
ault">[VC: ID Attribute Default]</a></td></tr><tr valign=3D"baseline"><td><=
/td><td></td><td></td><td><code>| &#x27;IDREF&#x27;</code></td><td><a href=
=3D"#idref">[VC: IDREF]</a></td></tr><tr valign=3D"baseline"><td></td><td><=
/td><td></td><td><code>| &#x27;IDREFS&#x27;</code></td><td><a href=3D"#idre=
f">[VC: IDREF]</a></td></tr><tr valign=3D"baseline"><td></td><td></td><td><=
/td><td><code>| &#x27;ENTITY&#x27;</code></td><td><a href=3D"#entname">[VC:=
 Entity Name]</a></td></tr><tr valign=3D"baseline"><td></td><td></td><td></=
td><td><code>| &#x27;ENTITIES&#x27;</code></td><td><a href=3D"#entname">[VC=
: Entity Name]</a></td></tr><tr valign=3D"baseline"><td></td><td></td><td><=
/td><td><code>| &#x27;NMTOKEN&#x27;</code></td><td><a href=3D"#nmtok">[VC:=
 Name Token]</a></td></tr><tr valign=3D"baseline"><td></td><td></td><td></t=
d><td><code>| &#x27;NMTOKENS&#x27;</code></td><td><a href=3D"#nmtok">[VC:=
 Name Token]</a></td></tr></tbody></table><div class=3D"constraint"><p clas=
s=3D"prefix"><a id=3D"id" name=3D"id"><b>Validity constraint: ID</b></a></p=
><p><a id=3D"id" name=3D"id">Values of type <b>ID</b>
							<em title=3D"Keyword in RFC 2119 context" class=3D"rfc2119">MUST</em=
> match the </a><a href=3D"#NT-Name">Name</a> production. A name <em title=
=3D"Keyword in RFC 2119 context" class=3D"rfc2119">MUST NOT</em> appear mor=
e than once
in an XML document as a value of this type; i.e., ID values <em title=3D"Ke=
yword in RFC 2119 context" class=3D"rfc2119">MUST</em> uniquely
identify the elements which bear them.</p></div><div class=3D"constraint"><=
p class=3D"prefix"><a id=3D"one-id-per-el" name=3D"one-id-per-el"><b>Validi=
ty constraint: One ID per Element Type</b></a></p><p><a id=3D"one-id-per-el=
" name=3D"one-id-per-el">An element type <em title=3D"Keyword in RFC 2119=
 context" class=3D"rfc2119">MUST NOT</em> have more than one ID attribute=
 specified.</a></p></div><div class=3D"constraint"><p class=3D"prefix"><a=
 id=3D"id-default" name=3D"id-default"><b>Validity constraint: ID Attribute=
 Default</b></a></p><p><a id=3D"id-default" name=3D"id-default">An ID attri=
bute
<em title=3D"Keyword in RFC 2119 context" class=3D"rfc2119">MUST</em> have=
 a declared default of <b>#IMPLIED</b> or <b>#REQUIRED</b>.</a></p></div><d=
iv class=3D"constraint"><p class=3D"prefix"><a id=3D"idref" name=3D"idref">=
<b>Validity constraint: IDREF</b></a></p><p><a id=3D"idref" name=3D"idref">=
Values of type <b>IDREF</b>
							<em title=3D"Keyword in RFC 2119 context" class=3D"rfc2119">MUST</em>
match the </a><a href=3D"#NT-Name">Name</a> production, and values of type=
 <b>IDREFS</b>
							<em title=3D"Keyword in RFC 2119 context" class=3D"rfc2119">MUST</em=
> match <a href=3D"#NT-Names">Names</a>; each <a href=3D"#NT-Name">Name</a>
							<em title=3D"Keyword in RFC 2119 context" class=3D"rfc2119">MUST</em=
> match the value of an ID attribute on some element in the XML document;
i.e. <b>IDREF</b> values <em title=3D"Keyword in RFC 2119 context" class=3D=
"rfc2119">MUST</em> match the value of some ID attribute.</p></div><div cla=
ss=3D"constraint"><p class=3D"prefix"><a id=3D"entname" name=3D"entname"><b=
>Validity constraint: Entity Name</b></a></p><p><a id=3D"entname" name=3D"e=
ntname">Values of type <b>ENTITY</b>
							<em title=3D"Keyword in RFC 2119 context" class=3D"rfc2119">MUST</em=
> match the </a><a href=3D"#NT-Name">Name</a> production, values of type <b=
>ENTITIES</b>
							<em title=3D"Keyword in RFC 2119 context" class=3D"rfc2119">MUST</em=
> match <a href=3D"#NT-Names">Names</a>; each <a href=3D"#NT-Name">Name</a>
							<em title=3D"Keyword in RFC 2119 context" class=3D"rfc2119">MUST</em=
> match the name of an <a href=3D"#dt-unparsed" title=3D"Unparsed Entity">u=
nparsed entity</a>
declared in the <a href=3D"#dt-doctype" title=3D"Document Type Declaration"=
>DTD</a>.</p></div><div class=3D"constraint"><p class=3D"prefix"><a id=3D"n=
mtok" name=3D"nmtok"><b>Validity constraint: Name Token</b></a></p><p><a id=
=3D"nmtok" name=3D"nmtok">Values of type <b>NMTOKEN</b>
							<em title=3D"Keyword in RFC 2119 context" class=3D"rfc2119">MUST</em=
> match the </a><a href=3D"#NT-Nmtoken">Nmtoken</a> production; values of=
 type <b>NMTOKENS</b>
							<em title=3D"Keyword in RFC 2119 context" class=3D"rfc2119">MUST</em=
> match <a href=3D"#NT-Nmtokens">Nmtokens</a>.</p></div><p>
						[<a title=3D"Enumerated Attribute Values" id=3D"dt-enumerated" name=
=3D"dt-enumerated">Definition</a>:=20
							<b>Enumerated attributes</b>
							have a list of allowed values in their declaration
						]. They <em title=3D"Keyword in RFC 2119 context" class=3D"rfc2119">M=
UST</em> take one of those values.  There are two kinds of enumerated attri=
bute types:</p>
<h5><a id=3D"d0e3200" name=3D"d0e3200">Enumerated Attribute Types</a></h5><=
table summary=3D"Scrap" class=3D"scrap"><tbody><tr valign=3D"baseline"><td>=
<a id=3D"NT-EnumeratedType" name=3D"NT-EnumeratedType">[57]&nbsp;&nbsp;&nbs=
p;</a></td><td><code>EnumeratedType</code></td><td>&nbsp;&nbsp;&nbsp;::=3D&=
nbsp;&nbsp;&nbsp;</td><td><code>
								<a href=3D"#NT-NotationType">NotationType</a>
| <a href=3D"#NT-Enumeration">Enumeration</a>
							</code></td></tr></tbody><tbody><tr valign=3D"baseline"><td><a id=3D=
"NT-NotationType" name=3D"NT-NotationType">[58]&nbsp;&nbsp;&nbsp;</a></td><=
td><code>NotationType</code></td><td>&nbsp;&nbsp;&nbsp;::=3D&nbsp;&nbsp;&nb=
sp;</td><td><code>&#x27;NOTATION&#x27; <a href=3D"#NT-S">S</a> &#x27;(&#x27=
; <a href=3D"#NT-S">S</a>? <a href=3D"#NT-Name">Name</a> (<a href=3D"#NT-S"=
>S</a>? &#x27;|&#x27; <a href=3D"#NT-S">S</a>? <a href=3D"#NT-Name">Name</a=
>)* <a href=3D"#NT-S">S</a>? &#x27;)&#x27; </code></td><td><a href=3D"#nota=
tn">[VC: Notation Attributes]</a></td></tr><tr valign=3D"baseline"><td></td=
><td></td><td></td><td></td><td><a href=3D"#OneNotationPer">[VC: One Notati=
on Per Element Type]</a></td></tr><tr valign=3D"baseline"><td></td><td></td=
><td></td><td></td><td><a href=3D"#NoNotationEmpty">[VC: No Notation on Emp=
ty Element]</a></td></tr><tr valign=3D"baseline"><td></td><td></td><td></td=
><td></td><td><a href=3D"#NoDuplicateTokens">[VC: No Duplicate Tokens]</a><=
/td></tr></tbody><tbody><tr valign=3D"baseline"><td><a id=3D"NT-Enumeration=
" name=3D"NT-Enumeration">[59]&nbsp;&nbsp;&nbsp;</a></td><td><code>Enumerat=
ion</code></td><td>&nbsp;&nbsp;&nbsp;::=3D&nbsp;&nbsp;&nbsp;</td><td><code>=
&#x27;(&#x27; <a href=3D"#NT-S">S</a>? <a href=3D"#NT-Nmtoken">Nmtoken</a>
(<a href=3D"#NT-S">S</a>? &#x27;|&#x27; <a href=3D"#NT-S">S</a>? <a href=3D=
"#NT-Nmtoken">Nmtoken</a>)* <a href=3D"#NT-S">S</a>? &#x27;)&#x27;</code></=
td><td><a href=3D"#enum">[VC: Enumeration]</a></td></tr><tr valign=3D"basel=
ine"><td></td><td></td><td></td><td></td><td><a href=3D"#NoDuplicateTokens"=
>[VC: No Duplicate Tokens]</a></td></tr></tbody></table><p><a id=3D"d0e3200=
" name=3D"d0e3200">A <b>NOTATION</b> attribute identifies a </a><a href=3D"=
#dt-notation" title=3D"Notation">notation</a>,
declared in the DTD with associated system and/or public identifiers, to be
used in interpreting the element to which the attribute is attached.</p><di=
v class=3D"constraint"><p class=3D"prefix"><a id=3D"notatn" name=3D"notatn"=
><b>Validity constraint: Notation Attributes</b></a></p><p><a id=3D"notatn"=
 name=3D"notatn">Values of this type
<em title=3D"Keyword in RFC 2119 context" class=3D"rfc2119">MUST</em> match=
 one of the </a><a href=3D"#Notations"><cite>notation</cite></a> names
included in the declaration; all notation names in the declaration <em titl=
e=3D"Keyword in RFC 2119 context" class=3D"rfc2119">MUST</em> be
declared.</p></div><div class=3D"constraint"><p class=3D"prefix"><a id=3D"O=
neNotationPer" name=3D"OneNotationPer"><b>Validity constraint: One Notation=
 Per Element Type</b></a></p><p><a id=3D"OneNotationPer" name=3D"OneNotatio=
nPer">An element type <em title=3D"Keyword in RFC 2119 context" class=3D"rf=
c2119">MUST NOT</em> have more than one <b>NOTATION</b>
attribute specified.</a></p></div><div class=3D"constraint"><p class=3D"pre=
fix"><a id=3D"NoNotationEmpty" name=3D"NoNotationEmpty"><b>Validity constra=
int: No Notation on Empty Element</b></a></p><p>
<a id=3D"NoNotationEmpty" name=3D"NoNotationEmpty">							</a><a href=3D"#d=
t-compat" title=3D"For Compatibility">For compatibility</a>,
an attribute of type <b>NOTATION</b>
							<em title=3D"Keyword in RFC 2119 context" class=3D"rfc2119">MUST NOT=
</em> be declared on an element
declared <b>EMPTY</b>.</p></div><div class=3D"constraint"><p class=3D"prefi=
x"><a id=3D"NoDuplicateTokens" name=3D"NoDuplicateTokens"><b>Validity const=
raint: No Duplicate Tokens</b></a></p><p><a id=3D"NoDuplicateTokens" name=
=3D"NoDuplicateTokens">The notation names in a single </a><a href=3D"#NT-No=
tationType">NotationType</a>
attribute declaration, as well as the <a href=3D"#NT-Nmtoken">NmToken</a>s=
 in a single
<a href=3D"#NT-Enumeration">Enumeration</a> attribute declaration, <em titl=
e=3D"Keyword in RFC 2119 context" class=3D"rfc2119">MUST</em> all be distin=
ct.</p></div><div class=3D"constraint"><p class=3D"prefix"><a id=3D"enum"=
 name=3D"enum"><b>Validity constraint: Enumeration</b></a></p><p><a id=3D"e=
num" name=3D"enum">Values of this type <em title=3D"Keyword in RFC 2119 con=
text" class=3D"rfc2119">MUST</em> match
one of the </a><a href=3D"#NT-Nmtoken">Nmtoken</a> tokens in the declaratio=
n.</p></div><p>
						<a href=3D"#dt-interop" title=3D"For interoperability">For interopera=
bility,</a> the same <a href=3D"#NT-Nmtoken">Nmtoken</a>
						<em title=3D"Keyword in RFC 2119 context" class=3D"rfc2119">SHOULD NO=
T</em> occur more than once in the enumerated
attribute types of a single element type.</p></div><div class=3D"div3">
<h4><a id=3D"sec-attr-defaults" name=3D"sec-attr-defaults">3.3.2 Attribute=
 Defaults</a></h4><p><a id=3D"sec-attr-defaults" name=3D"sec-attr-defaults"=
>An </a><a href=3D"#dt-attdecl" title=3D"Attribute-List Declaration">attrib=
ute declaration</a> provides information
on whether the attribute&#x27;s presence is <em title=3D"Keyword in RFC 211=
9 context" class=3D"rfc2119">REQUIRED</em>, and if not, how an XML processor
is to react if a declared attribute is absent in a document.</p>
<h5><a id=3D"d0e3369" name=3D"d0e3369">Attribute Defaults</a></h5><table su=
mmary=3D"Scrap" class=3D"scrap"><tbody><tr valign=3D"baseline"><td><a id=3D=
"NT-DefaultDecl" name=3D"NT-DefaultDecl">[60]&nbsp;&nbsp;&nbsp;</a></td><td=
><code>DefaultDecl</code></td><td>&nbsp;&nbsp;&nbsp;::=3D&nbsp;&nbsp;&nbsp;=
</td><td><code>&#x27;#REQUIRED&#x27; |&nbsp;&#x27;#IMPLIED&#x27; </code></t=
d></tr><tr valign=3D"baseline"><td></td><td></td><td></td><td><code>| ((&#x=
27;#FIXED&#x27; <a href=3D"#NT-S">S</a>)? <a href=3D"#NT-AttValue">AttValue=
</a>)</code></td><td><a href=3D"#RequiredAttr">[VC: Required Attribute]</a>=
</td></tr><tr valign=3D"baseline"><td></td><td></td><td></td><td></td><td><=
a href=3D"#defattrvalid">[VC: Attribute Default Value Syntactically Correct=
]</a></td></tr><tr valign=3D"baseline"><td></td><td></td><td></td><td></td>=
<td><a href=3D"#CleanAttrVals">[WFC: No &lt; in Attribute Values]</a></td><=
/tr><tr valign=3D"baseline"><td></td><td></td><td></td><td></td><td><a href=
=3D"#FixedAttr">[VC: Fixed Attribute Default]</a></td></tr><tr valign=3D"ba=
seline"><td></td><td></td><td></td><td></td><td><a href=3D"#NoExternalRefs"=
>[WFC: No External Entity References]</a></td></tr></tbody></table><p><a id=
=3D"d0e3369" name=3D"d0e3369">In an attribute declaration, <b>#REQUIRED</b>=
 means that the attribute
<em title=3D"Keyword in RFC 2119 context" class=3D"rfc2119">MUST</em> alway=
s be provided, <b>#IMPLIED</b> that no default value is provided.

						[</a><a title=3D"Attribute Default" id=3D"dt-default" name=3D"dt-defa=
ult">Definition</a>: If
the declaration is neither <b>#REQUIRED</b> nor <b>#IMPLIED</b>, then
the <a href=3D"#NT-AttValue">AttValue</a> value contains the declared <b>de=
fault</b>
value; the <b>#FIXED</b> keyword states that the attribute <em title=3D"Key=
word in RFC 2119 context" class=3D"rfc2119">MUST</em> always have
the default value.
When an XML processor encounters
an element
without a specification for an attribute for which it has read a default
value declaration, it <em title=3D"Keyword in RFC 2119 context" class=3D"rf=
c2119">MUST</em> report the attribute with the declared default
value to the application.]
					</p><div class=3D"constraint"><p class=3D"prefix"><a id=3D"RequiredAtt=
r" name=3D"RequiredAttr"><b>Validity constraint: Required Attribute</b></a>=
</p><p><a id=3D"RequiredAttr" name=3D"RequiredAttr">If the default
declaration is the keyword <b>#REQUIRED</b>, then the attribute <em title=
=3D"Keyword in RFC 2119 context" class=3D"rfc2119">MUST</em> be
specified for all elements of the type in the attribute-list declaration.</=
a></p></div><div class=3D"constraint"><p class=3D"prefix"><a id=3D"defattrv=
alid" name=3D"defattrvalid"><b>Validity constraint: Attribute Default Value=
 Syntactically Correct</b></a></p><p><a id=3D"defattrvalid" name=3D"defattr=
valid">The declared default value <em title=3D"Keyword in RFC 2119 context"=
 class=3D"rfc2119">MUST</em> meet the syntactic
constraints of the declared attribute type. That is, the default value of=
 an attribute:
						</a></p><ul><li><p>
<a id=3D"defattrvalid" name=3D"defattrvalid">									of type IDREF or ENTI=
TY must match the </a><a href=3D"#NT-Name">Name</a> production;</p></li><li=
><p>
									of type IDREFS or ENTITIES must match the <a href=3D"#NT-Names">Na=
mes</a> production;</p></li><li><p>
									of type NMTOKEN must match the <a href=3D"#NT-Nmtoken">Nmtoken</a>=
 production;</p></li><li><p>
									of type NMTOKENS must match the <a href=3D"#NT-Nmtokens">Nmtokens<=
/a> production;</p></li><li><p>
									of an <a href=3D"#NT-EnumeratedType">enumerated type</a> (either=
 a <a href=3D"#NT-NotationType">NOTATION</a> type or an <a href=3D"#NT-Enum=
eration">enumeration</a>) must match one of the enumerated values.</p></li>=
</ul><p>Note that only the
syntactic constraints of the type are required here; other constraints (e.g.
that the value be the name of a declared unparsed entity, for an attribute=
 of
type ENTITY) will be reported by a validating
parser only if an element without a specification for this attribute
actually occurs.</p></div><div class=3D"constraint"><p class=3D"prefix"><a=
 id=3D"FixedAttr" name=3D"FixedAttr"><b>Validity constraint: Fixed Attribut=
e Default</b></a></p><p><a id=3D"FixedAttr" name=3D"FixedAttr">If an attrib=
ute
has a default value declared with the <b>#FIXED</b> keyword, instances of
that attribute <em title=3D"Keyword in RFC 2119 context" class=3D"rfc2119">=
MUST</em> match the default value.</a></p></div><p><a id=3D"FixedAttr" name=
=3D"FixedAttr">Examples of attribute-list declarations:</a></p><div class=
=3D"exampleInner"><pre><a id=3D"FixedAttr" name=3D"FixedAttr">&lt;!ATTLIST=
 termdef
          id      ID      #REQUIRED
          name    CDATA   #IMPLIED&gt;
&lt;!ATTLIST list
          type    (bullets|ordered|glossary)  &quot;ordered&quot;&gt;
&lt;!ATTLIST form
          method  CDATA   #FIXED &quot;POST&quot;&gt;</a></pre></div></div>=
<div class=3D"div3">
<h4><a id=3D"AVNormalize" name=3D"AVNormalize">3.3.3 Attribute-Value Normal=
ization</a></h4><p><a id=3D"AVNormalize" name=3D"AVNormalize">Before the va=
lue of an attribute is passed to the application or checked
for validity, the XML processor <em title=3D"Keyword in RFC 2119 context"=
 class=3D"rfc2119">MUST</em> normalize the attribute value by applying
the algorithm below, or by using some other method such that the value pass=
ed
to the application is the same as that produced by the algorithm.</a></p><o=
l class=3D"enumar"><li><p><a id=3D"AVNormalize" name=3D"AVNormalize">All li=
ne breaks <em title=3D"Keyword in RFC 2119 context" class=3D"rfc2119">MUST<=
/em> have been normalized on input to #xA as described
in </a><a href=3D"#sec-line-ends"><b>2.11 End-of-Line Handling</b></a>, so=
 the rest of this algorithm operates
on text normalized in this way.</p></li><li><p>Begin with a normalized valu=
e consisting of the empty string.</p></li><li><p>For each character, entity=
 reference, or character reference in the
unnormalized attribute value, beginning with the first and continuing to the
last, do the following:</p><ul><li><p>For a character reference, append the=
 referenced character to the
normalized value.</p></li><li><p>For an entity reference, recursively apply=
 step 3 of this algorithm
to the replacement text of the entity.</p></li><li><p>For a white space cha=
racter (#x20, #xD, #xA, #x9), append a space
character (#x20) to the normalized value.</p></li><li><p>For another charac=
ter, append the character to the normalized value.</p></li></ul></li></ol><=
p>If the attribute type is not CDATA, then the XML processor <em title=3D"K=
eyword in RFC 2119 context" class=3D"rfc2119">MUST</em> further
process the normalized attribute value by discarding any leading and traili=
ng
space (#x20) characters, and by replacing sequences of space (#x20) charact=
ers
by a single space (#x20) character.</p><p>Note that if the unnormalized att=
ribute value contains a character reference
to a white space character other than space (#x20), the normalized value co=
ntains
the referenced character itself (#xD, #xA or #x9). This contrasts with the
case where the unnormalized value contains a white space character (not a
reference), which is replaced with a space character (#x20) in the normaliz=
ed
value and also contrasts with the case where the unnormalized value contains
an entity reference whose replacement text contains a white space character;
being recursively processed, the white space character is replaced with a
space character (#x20) in the normalized value.</p><p>All attributes for wh=
ich no declaration has been read <em title=3D"Keyword in RFC 2119 context"=
 class=3D"rfc2119">SHOULD</em> be treated
by a non-validating processor as if declared <b>CDATA</b>.</p><p>It is an=
 error if an <a href=3D"#dt-attrval" title=3D"Attribute Value">attribute
value</a> contains a <a href=3D"#dt-entref" title=3D"Entity Reference">refe=
rence</a> to an
entity for which no declaration has been read.</p><p>Following are examples=
 of attribute normalization. Given the following
declarations:</p><div class=3D"exampleInner"><pre>&lt;!ENTITY d &quot;&amp;=
#xD;&quot;&gt;
&lt;!ENTITY a &quot;&amp;#xA;&quot;&gt;
&lt;!ENTITY da &quot;&amp;#xD;&amp;#xA;&quot;&gt;</pre></div><p>the attribu=
te specifications in the left column below would be normalized
to the character sequences of the middle column if the attribute <code>a</c=
ode>
is declared <b>NMTOKENS</b> and to those of the right columns if <code>a</c=
ode>
is declared <b>CDATA</b>.</p><table border=3D"1" frame=3D"border"><thead><t=
r><th>Attribute specification</th><th>a is NMTOKENS</th><th>a is CDATA</th>=
</tr></thead><tbody><tr><td>
									<div class=3D"exampleInner"><pre>a=3D&quot;

xyz&quot;</pre></div>
								</td><td>
									<div class=3D"exampleInner"><pre>x y z</pre></div>
								</td><td>
									<div class=3D"exampleInner"><pre>#x20 #x20 x y z</pre></div>
								</td></tr><tr><td>
									<div class=3D"exampleInner"><pre>a=3D&quot;&amp;d;&amp;d;A&amp;a;&=
amp;#x20;&amp;a;B&amp;da;&quot;</pre></div>
								</td><td>
									<div class=3D"exampleInner"><pre>A #x20 B</pre></div>
								</td><td>
									<div class=3D"exampleInner"><pre>#x20 #x20 A #x20 #x20 #x20 B #x20=
 #x20</pre></div>
								</td></tr><tr><td>
									<div class=3D"exampleInner"><pre>a=3D
&quot;&amp;#xd;&amp;#xd;A&amp;#xa;&amp;#xa;B&amp;#xd;&amp;#xa;&quot;</pre><=
/div>
								</td><td>
									<div class=3D"exampleInner"><pre>#xD #xD A #xA #xA B #xD #xA</pre>=
</div>
								</td><td>
									<div class=3D"exampleInner"><pre>#xD #xD A #xA #xA B #xD #xA</pre>=
</div>
								</td></tr></tbody></table><p>Note that the last example is invalid=
 (but well-formed) if <code>a</code>
is declared to be of type <b>NMTOKENS</b>.</p></div></div><div class=3D"div=
2">
<h3><a id=3D"sec-condition-sect" name=3D"sec-condition-sect">3.4 Conditiona=
l Sections</a></h3><p>
<a id=3D"sec-condition-sect" name=3D"sec-condition-sect">					[</a><a title=
=3D"conditional section" id=3D"dt-cond-section" name=3D"dt-cond-section">De=
finition</a>:=20
						<b>Conditional
sections</b> are portions of the <a href=3D"#dt-doctype" title=3D"Document=
 Type Declaration">document type
declaration external subset</a> or
of external parameter entities which are included in, or excluded from,
the logical structure of the DTD based on the keyword which governs them.]
				</p>
<h5><a id=3D"d0e3658" name=3D"d0e3658">Conditional Section</a></h5><table=
 summary=3D"Scrap" class=3D"scrap"><tbody><tr valign=3D"baseline"><td><a id=
=3D"NT-conditionalSect" name=3D"NT-conditionalSect">[61]&nbsp;&nbsp;&nbsp;<=
/a></td><td><code>conditionalSect</code></td><td>&nbsp;&nbsp;&nbsp;::=3D&nb=
sp;&nbsp;&nbsp;</td><td><code>
								<a href=3D"#NT-includeSect">includeSect</a> | <a href=3D"#NT-ignore=
Sect">ignoreSect</a>
							</code></td></tr><tr valign=3D"baseline"><td><a id=3D"NT-includeSect=
" name=3D"NT-includeSect">[62]&nbsp;&nbsp;&nbsp;</a></td><td><code>includeS=
ect</code></td><td>&nbsp;&nbsp;&nbsp;::=3D&nbsp;&nbsp;&nbsp;</td><td><code>=
&#x27;&lt;![&#x27; <a href=3D"#NT-S">S</a>? &#x27;INCLUDE&#x27; <a href=3D"=
#NT-S">S</a>? &#x27;[&#x27; <a href=3D"#NT-extSubsetDecl">extSubsetDecl</a>
&#x27;]]&gt;&#x27; </code></td><td><a href=3D"#condsec-nesting">[VC: Proper=
 Conditional Section/PE Nesting]</a></td></tr><tr valign=3D"baseline"><td><=
a id=3D"NT-ignoreSect" name=3D"NT-ignoreSect">[63]&nbsp;&nbsp;&nbsp;</a></t=
d><td><code>ignoreSect</code></td><td>&nbsp;&nbsp;&nbsp;::=3D&nbsp;&nbsp;&n=
bsp;</td><td><code>&#x27;&lt;![&#x27; <a href=3D"#NT-S">S</a>? &#x27;IGNORE=
&#x27; <a href=3D"#NT-S">S</a>? &#x27;[&#x27; <a href=3D"#NT-ignoreSectCont=
ents">ignoreSectContents</a>*
&#x27;]]&gt;&#x27;</code></td><td><a href=3D"#condsec-nesting">[VC: Proper=
 Conditional Section/PE Nesting]</a></td></tr><tr valign=3D"baseline"><td><=
a id=3D"NT-ignoreSectContents" name=3D"NT-ignoreSectContents">[64]&nbsp;&nb=
sp;&nbsp;</a></td><td><code>ignoreSectContents</code></td><td>&nbsp;&nbsp;&=
nbsp;::=3D&nbsp;&nbsp;&nbsp;</td><td><code>
								<a href=3D"#NT-Ignore">Ignore</a> (&#x27;&lt;![&#x27; <a href=3D"#N=
T-ignoreSectContents">ignoreSectContents</a> &#x27;]]&gt;&#x27; <a href=3D"=
#NT-Ignore">Ignore</a>)*</code></td></tr><tr valign=3D"baseline"><td><a id=
=3D"NT-Ignore" name=3D"NT-Ignore">[65]&nbsp;&nbsp;&nbsp;</a></td><td><code>=
Ignore</code></td><td>&nbsp;&nbsp;&nbsp;::=3D&nbsp;&nbsp;&nbsp;</td><td><co=
de>
								<a href=3D"#NT-Char">Char</a>* - (<a href=3D"#NT-Char">Char</a>*
(&#x27;&lt;![&#x27; | &#x27;]]&gt;&#x27;) <a href=3D"#NT-Char">Char</a>*)=
 </code></td></tr></tbody></table><div class=3D"constraint"><p class=3D"pre=
fix"><a id=3D"condsec-nesting" name=3D"condsec-nesting"><b>Validity constra=
int: Proper Conditional Section/PE Nesting</b></a></p><p><a id=3D"condsec-n=
esting" name=3D"condsec-nesting">If any of the &quot;<code>&lt;![</code>&qu=
ot;,
&quot;<code>[</code>&quot;, or &quot;<code>]]&gt;</code>&quot; of a conditi=
onal section is contained
in the replacement text for a parameter-entity reference, all of them <em=
 title=3D"Keyword in RFC 2119 context" class=3D"rfc2119">MUST</em>
be contained in the same replacement text.</a></p></div><p><a id=3D"condsec=
-nesting" name=3D"condsec-nesting">Like the internal and external DTD subse=
ts, a conditional section may contain
one or more complete declarations, comments, processing instructions, or ne=
sted
conditional sections, intermingled with white space.</a></p><p><a id=3D"con=
dsec-nesting" name=3D"condsec-nesting">If the keyword of the conditional se=
ction is <b>INCLUDE</b>, then the
contents of the conditional section <em title=3D"Keyword in RFC 2119 contex=
t" class=3D"rfc2119">MUST</em> be processed as part of the DTD. If the keyw=
ord of
the conditional section is <b>IGNORE</b>, then the contents of the conditio=
nal
section <em title=3D"Keyword in RFC 2119 context" class=3D"rfc2119">MUST</e=
m> <em title=3D"Keyword in RFC 2119 context" class=3D"rfc2119">NOT</em> be=
 processed as part of the DTD.
If a conditional section with a keyword of <b>INCLUDE</b> occurs within
a larger conditional section with a keyword of <b>IGNORE</b>, both the outer
and the inner conditional sections <em title=3D"Keyword in RFC 2119 context=
" class=3D"rfc2119">MUST</em> be ignored. The contents
of an ignored conditional section <em title=3D"Keyword in RFC 2119 context"=
 class=3D"rfc2119">MUST</em> be parsed by ignoring all characters after
the &quot;<code>[</code>&quot; following the keyword, except conditional se=
ction starts
&quot;<code>&lt;![</code>&quot; and ends &quot;<code>]]&gt;</code>&quot;,=
 until the matching conditional
section end is found. Parameter entity references <em title=3D"Keyword in=
 RFC 2119 context" class=3D"rfc2119">MUST NOT</em> be recognized in this
process.</a></p><p><a id=3D"condsec-nesting" name=3D"condsec-nesting">If th=
e keyword of the conditional section is a parameter-entity reference,
the parameter entity <em title=3D"Keyword in RFC 2119 context" class=3D"rfc=
2119">MUST</em> be replaced by its content before the processor
decides whether to include or ignore the conditional section.</a></p><p><a=
 id=3D"condsec-nesting" name=3D"condsec-nesting">An example:</a></p><div cl=
ass=3D"exampleInner"><pre><a id=3D"condsec-nesting" name=3D"condsec-nesting=
">&lt;!ENTITY % draft &#x27;INCLUDE&#x27; &gt;
&lt;!ENTITY % final &#x27;IGNORE&#x27; &gt;

&lt;![%draft;[
&lt;!ELEMENT book (comments*, title, body, supplements?)&gt;
]]&gt;
&lt;![%final;[
&lt;!ELEMENT book (title, body, supplements?)&gt;
]]&gt;</a></pre></div></div></div><div class=3D"div1">
<h2><a id=3D"sec-physical-struct" name=3D"sec-physical-struct">4 Physical=
 Structures</a></h2><p>
<a id=3D"sec-physical-struct" name=3D"sec-physical-struct">				[</a><a titl=
e=3D"Entity" id=3D"dt-entity" name=3D"dt-entity">Definition</a>: An XML doc=
ument may consist of one
or many storage units. These
are called <b>entities</b>; they all have <b>content</b> and are
all (except for the <a href=3D"#dt-docent" title=3D"Document Entity">docume=
nt entity</a> and
the <a href=3D"#dt-doctype" title=3D"Document Type Declaration">external DT=
D subset</a>) identified by
entity <b>name</b>.] Each XML document has one entity
called the <a href=3D"#dt-docent" title=3D"Document Entity">document entity=
</a>, which serves
as the starting point for the <a href=3D"#dt-xml-proc" title=3D"XML Process=
or">XML processor</a>
and may contain the whole document.</p><p>Entities may be either parsed or=
 unparsed. [<a title=3D"Text Entity" id=3D"dt-parsedent" name=3D"dt-parsede=
nt">Definition</a>: The contents of a <b>parsed
entity</b> are referred to as its <a href=3D"#dt-repltext" title=3D"Replace=
ment Text">replacement
text</a>; this <a href=3D"#dt-text" title=3D"Text">text</a> is considered an
integral part of the document.]
			</p><p>
				[<a title=3D"Unparsed Entity" id=3D"dt-unparsed" name=3D"dt-unparsed">D=
efinition</a>: An <b>unparsed entity</b>
is a resource whose contents may or may not be <a href=3D"#dt-text" title=
=3D"Text">text</a>,
and if text, may
be other than XML. Each unparsed entity has an associated <a href=3D"#dt-no=
tation" title=3D"Notation">notation</a>, identified by name. Beyond a requi=
rement
that an XML processor make the identifiers for the entity and notation avai=
lable
to the application, XML places no constraints on the contents of unparsed
entities.]
			</p><p>Parsed entities are invoked by name using entity references; unpa=
rsed entities
by name, given in the value of <b>ENTITY</b> or <b>ENTITIES</b> attributes.=
</p><p>
				[<a title=3D"general entity" id=3D"gen-entity" name=3D"gen-entity">Defi=
nition</a>:=20
					<b>General entities</b>
are entities for use within the document content. In this specification, ge=
neral
entities are sometimes referred to with the unqualified term <em>entity</em>
when this leads to no ambiguity.]
				[<a title=3D"Parameter entity" id=3D"dt-PE" name=3D"dt-PE">Definition</=
a>:=20
					<b>Parameter
entities</b> are parsed entities for use within the DTD.]
These two types of entities use different forms of reference and are recogn=
ized
in different contexts. Furthermore, they occupy different namespaces; a par=
ameter
entity and a general entity with the same name are two distinct entities.</=
p><div class=3D"div2">
<h3><a id=3D"sec-references" name=3D"sec-references">4.1 Character and Enti=
ty References</a></h3><p>
<a id=3D"sec-references" name=3D"sec-references">					[</a><a title=3D"Char=
acter Reference" id=3D"dt-charref" name=3D"dt-charref">Definition</a>:  A=
 <b>character
reference</b> refers to a specific character in the ISO/IEC 10646 character
set, for example one not directly accessible from available input devices.]
				</p>
<h5><a id=3D"d0e3895" name=3D"d0e3895">Character Reference</a></h5><table=
 summary=3D"Scrap" class=3D"scrap"><tbody><tr valign=3D"baseline"><td><a id=
=3D"NT-CharRef" name=3D"NT-CharRef">[66]&nbsp;&nbsp;&nbsp;</a></td><td><cod=
e>CharRef</code></td><td>&nbsp;&nbsp;&nbsp;::=3D&nbsp;&nbsp;&nbsp;</td><td>=
<code>&#x27;&amp;#&#x27; [0-9]+ &#x27;;&#x27; </code></td></tr><tr valign=
=3D"baseline"><td></td><td></td><td></td><td><code>| &#x27;&amp;#x&#x27; [0=
-9a-fA-F]+ &#x27;;&#x27;</code></td><td><a href=3D"#wf-Legalchar">[WFC: Leg=
al Character]</a></td></tr></tbody></table><div class=3D"constraint"><p cla=
ss=3D"prefix"><a id=3D"wf-Legalchar" name=3D"wf-Legalchar"><b>Well-formedne=
ss constraint: Legal Character</b></a></p><p><a id=3D"wf-Legalchar" name=3D=
"wf-Legalchar">Characters referred
to using character references <em title=3D"Keyword in RFC 2119 context" cla=
ss=3D"rfc2119">MUST</em> match the production for </a><a href=3D"#NT-Char">=
Char</a>.</p></div><p>If the character reference begins with &quot;
						<code>&amp;#x</code>
					&quot;,
the digits and letters up to the terminating <code>;</code> provide a hexad=
ecimal
representation of the character&#x27;s code point in ISO/IEC 10646. If it=
 begins
just with &quot;
						<code>&amp;#</code>
					&quot;, the digits up to the terminating <code>;</code>
provide a decimal representation of the character&#x27;s code point.</p><p>
					[<a title=3D"Entity Reference" id=3D"dt-entref" name=3D"dt-entref">Def=
inition</a>: An <b>entity reference</b>
refers to the content of a named entity.]
					[<a title=3D"General Entity Reference" id=3D"dt-GERef" name=3D"dt-GERe=
f">Definition</a>: References to parsed general entities use
ampersand (<code>&amp;</code>) and semicolon (<code>;</code>) as delimiters=
.]
					[<a title=3D"Parameter-entity reference" id=3D"dt-PERef" name=3D"dt-PE=
Ref">Definition</a>:=20
						<b>Parameter-entity references</b>
use percent-sign (<code>%</code>) and semicolon (<code>;</code>) as delimit=
ers.]
				</p>
<h5><a id=3D"d0e3966" name=3D"d0e3966">Entity Reference</a></h5><table summ=
ary=3D"Scrap" class=3D"scrap"><tbody><tr valign=3D"baseline"><td><a id=3D"N=
T-Reference" name=3D"NT-Reference">[67]&nbsp;&nbsp;&nbsp;</a></td><td><code=
>Reference</code></td><td>&nbsp;&nbsp;&nbsp;::=3D&nbsp;&nbsp;&nbsp;</td><td=
><code>
							<a href=3D"#NT-EntityRef">EntityRef</a> | <a href=3D"#NT-CharRef">Ch=
arRef</a>
						</code></td></tr></tbody><tbody><tr valign=3D"baseline"><td><a id=3D"=
NT-EntityRef" name=3D"NT-EntityRef">[68]&nbsp;&nbsp;&nbsp;</a></td><td><cod=
e>EntityRef</code></td><td>&nbsp;&nbsp;&nbsp;::=3D&nbsp;&nbsp;&nbsp;</td><t=
d><code>&#x27;&amp;&#x27; <a href=3D"#NT-Name">Name</a> &#x27;;&#x27;</code=
></td><td><a href=3D"#wf-entdeclared">[WFC: Entity Declared]</a></td></tr><=
tr valign=3D"baseline"><td></td><td></td><td></td><td></td><td><a href=3D"#=
vc-entdeclared">[VC: Entity Declared]</a></td></tr><tr valign=3D"baseline">=
<td></td><td></td><td></td><td></td><td><a href=3D"#textent">[WFC: Parsed=
 Entity]</a></td></tr><tr valign=3D"baseline"><td></td><td></td><td></td><t=
d></td><td><a href=3D"#norecursion">[WFC: No Recursion]</a></td></tr></tbod=
y><tbody><tr valign=3D"baseline"><td><a id=3D"NT-PEReference" name=3D"NT-PE=
Reference">[69]&nbsp;&nbsp;&nbsp;</a></td><td><code>PEReference</code></td>=
<td>&nbsp;&nbsp;&nbsp;::=3D&nbsp;&nbsp;&nbsp;</td><td><code>&#x27;%&#x27;=
 <a href=3D"#NT-Name">Name</a> &#x27;;&#x27;</code></td><td><a href=3D"#vc-=
entdeclared">[VC: Entity Declared]</a></td></tr><tr valign=3D"baseline"><td=
></td><td></td><td></td><td></td><td><a href=3D"#norecursion">[WFC: No Recu=
rsion]</a></td></tr><tr valign=3D"baseline"><td></td><td></td><td></td><td>=
</td><td><a href=3D"#indtd">[WFC: In DTD]</a></td></tr></tbody></table><div=
 class=3D"constraint"><p class=3D"prefix"><a id=3D"wf-entdeclared" name=3D"=
wf-entdeclared"><b>Well-formedness constraint: Entity Declared</b></a></p><=
p><a id=3D"wf-entdeclared" name=3D"wf-entdeclared">In a document
without any DTD, a document with only an internal DTD subset which contains
no parameter entity references, or a document with &quot;
							<code>standalone=3D&#x27;yes&#x27;</code>
						&quot;, for
an entity reference that does not occur within the external subset or a par=
ameter
entity, the </a><a href=3D"#NT-Name">Name</a> given in the entity reference=
 <em title=3D"Keyword in RFC 2119 context" class=3D"rfc2119">MUST</em>
						<a href=3D"#dt-match" title=3D"match">match</a> that in an <a href=3D=
"#sec-entity-decl"><cite>entity
declaration</cite></a> that does not occur within the external subset or a
parameter entity, except that well-formed documents need not declare
any of the following entities: <code>amp</code>,
<code>lt</code>,
<code>gt</code>,
<code>apos</code>,
<code>quot</code>. The
declaration of a general entity <em title=3D"Keyword in RFC 2119 context"=
 class=3D"rfc2119">MUST</em> precede any reference to it which appears
in a default value in an attribute-list declaration.</p><p>Note that non-va=
lidating processors are <a href=3D"#include-if-valid"><cite>not
obligated to</cite></a> read and process entity declarations occurring in=
 parameter entities or in
the external subset; for such documents,
the rule that an entity must be declared is a well-formedness constraint on=
ly
if <a href=3D"#sec-rmd"><cite>standalone=3D&#x27;yes&#x27;</cite></a>.</p><=
/div><div class=3D"constraint"><p class=3D"prefix"><a id=3D"vc-entdeclared"=
 name=3D"vc-entdeclared"><b>Validity constraint: Entity Declared</b></a></p=
><p><a id=3D"vc-entdeclared" name=3D"vc-entdeclared">In a document with an=
 external subset or parameter  entity references<span>,
						if the document is not standalone (either &quot;<code>standalone=3D&#=
x27;no&#x27;</code>&quot;
						is specified or there is no standalone declaration), then</span>
the </a><a href=3D"#NT-Name">Name</a> given in the entity reference <em tit=
le=3D"Keyword in RFC 2119 context" class=3D"rfc2119">MUST</em>
						<a href=3D"#dt-match" title=3D"match">match</a> that in an <a href=3D=
"#sec-entity-decl"><cite>entity
declaration</cite></a>. For interoperability, valid documents <em title=3D"=
Keyword in RFC 2119 context" class=3D"rfc2119">SHOULD</em> declare
the entities <code>amp</code>,
<code>lt</code>,
<code>gt</code>,
<code>apos</code>,
<code>quot</code>, in the form specified in <a href=3D"#sec-predefined-ent"=
><b>4.6 Predefined Entities</b></a>.
The declaration of a parameter entity <em title=3D"Keyword in RFC 2119 cont=
ext" class=3D"rfc2119">MUST</em> precede any reference to it. Similarly,
the declaration of a general entity <em title=3D"Keyword in RFC 2119 contex=
t" class=3D"rfc2119">MUST</em> precede any attribute-list
declaration containing a default value with a direct or indirect reference
to that general entity.</p></div><div class=3D"constraint"><p class=3D"pref=
ix"><a id=3D"textent" name=3D"textent"><b>Well-formedness constraint: Parse=
d Entity</b></a></p><p><a id=3D"textent" name=3D"textent">An entity referen=
ce <em title=3D"Keyword in RFC 2119 context" class=3D"rfc2119">MUST
NOT</em> contain the name of an </a><a href=3D"#dt-unparsed" title=3D"Unpar=
sed Entity">unparsed entity</a>.
Unparsed entities may be referred to only in <a href=3D"#dt-attrval" title=
=3D"Attribute Value">attribute
values</a> declared to be of type <b>ENTITY</b> or <b>ENTITIES</b>.</p></di=
v><div class=3D"constraint"><p class=3D"prefix"><a id=3D"norecursion" name=
=3D"norecursion"><b>Well-formedness constraint: No Recursion</b></a></p><p>=
<a id=3D"norecursion" name=3D"norecursion">A parsed entity <em title=3D"Key=
word in RFC 2119 context" class=3D"rfc2119">MUST NOT</em> contain a recursi=
ve reference to itself, either directly or indirectly.</a></p></div><div cl=
ass=3D"constraint"><p class=3D"prefix"><a id=3D"indtd" name=3D"indtd"><b>We=
ll-formedness constraint: In DTD</b></a></p><p><a id=3D"indtd" name=3D"indt=
d">Parameter-entity references <em title=3D"Keyword in RFC 2119 context" cl=
ass=3D"rfc2119">MUST NOT</em> appear outside
 the </a><a href=3D"#dt-doctype" title=3D"Document Type Declaration">DTD</a=
>.</p></div><p>Examples of character and entity references:</p><div class=
=3D"exampleInner"><pre>Type &lt;key&gt;less-than&lt;/key&gt; (&amp;#x3C;)=
 to save options.
This document was prepared on &amp;docdate; and
is classified &amp;security-level;.</pre></div><p>Example of a parameter-en=
tity reference:</p><div class=3D"exampleInner"><pre>&lt;!-- declare the par=
ameter entity &quot;ISOLat2&quot;... --&gt;
&lt;!ENTITY % ISOLat2
         SYSTEM &quot;http://www.xml.com/iso/isolat2-xml.entities&quot; &gt;
&lt;!-- ... now reference it. --&gt;
%ISOLat2;</pre></div></div><div class=3D"div2">
<h3><a id=3D"sec-entity-decl" name=3D"sec-entity-decl">4.2 Entity Declarati=
ons</a></h3><p>
<a id=3D"sec-entity-decl" name=3D"sec-entity-decl">					[</a><a title=3D"en=
tity declaration" id=3D"dt-entdecl" name=3D"dt-entdecl">Definition</a>:  En=
tities are declared
thus:]
				</p>
<h5><a id=3D"d0e4163" name=3D"d0e4163">Entity Declaration</a></h5><table su=
mmary=3D"Scrap" class=3D"scrap"><tbody><tr valign=3D"baseline"><td><a id=3D=
"NT-EntityDecl" name=3D"NT-EntityDecl">[70]&nbsp;&nbsp;&nbsp;</a></td><td><=
code>EntityDecl</code></td><td>&nbsp;&nbsp;&nbsp;::=3D&nbsp;&nbsp;&nbsp;</t=
d><td><code>
								<a href=3D"#NT-GEDecl">GEDecl</a>
								 | <a href=3D"#NT-PEDecl">PEDecl</a>
							</code></td></tr><tr valign=3D"baseline"><td><a id=3D"NT-GEDecl" nam=
e=3D"NT-GEDecl">[71]&nbsp;&nbsp;&nbsp;</a></td><td><code>GEDecl</code></td>=
<td>&nbsp;&nbsp;&nbsp;::=3D&nbsp;&nbsp;&nbsp;</td><td><code>&#x27;&lt;!ENTI=
TY&#x27; <a href=3D"#NT-S">S</a>
								<a href=3D"#NT-Name">Name</a>
								<a href=3D"#NT-S">S</a>
								<a href=3D"#NT-EntityDef">EntityDef</a>
								<a href=3D"#NT-S">S</a>?
&#x27;&gt;&#x27;</code></td></tr><tr valign=3D"baseline"><td><a id=3D"NT-PE=
Decl" name=3D"NT-PEDecl">[72]&nbsp;&nbsp;&nbsp;</a></td><td><code>PEDecl</c=
ode></td><td>&nbsp;&nbsp;&nbsp;::=3D&nbsp;&nbsp;&nbsp;</td><td><code>&#x27;=
&lt;!ENTITY&#x27; <a href=3D"#NT-S">S</a> &#x27;%&#x27; <a href=3D"#NT-S">S=
</a>
								<a href=3D"#NT-Name">Name</a>
								<a href=3D"#NT-S">S</a>
								<a href=3D"#NT-PEDef">PEDef</a>
								<a href=3D"#NT-S">S</a>? &#x27;&gt;&#x27;</code></td></tr><tr valig=
n=3D"baseline"><td><a id=3D"NT-EntityDef" name=3D"NT-EntityDef">[73]&nbsp;&=
nbsp;&nbsp;</a></td><td><code>EntityDef</code></td><td>&nbsp;&nbsp;&nbsp;::=
=3D&nbsp;&nbsp;&nbsp;</td><td><code>
								<a href=3D"#NT-EntityValue">EntityValue</a>
								| (<a href=3D"#NT-ExternalID">ExternalID</a>
								<a href=3D"#NT-NDataDecl">NDataDecl</a>?)</code></td></tr><tr valig=
n=3D"baseline"><td><a id=3D"NT-PEDef" name=3D"NT-PEDef">[74]&nbsp;&nbsp;&nb=
sp;</a></td><td><code>PEDef</code></td><td>&nbsp;&nbsp;&nbsp;::=3D&nbsp;&nb=
sp;&nbsp;</td><td><code>
								<a href=3D"#NT-EntityValue">EntityValue</a> | <a href=3D"#NT-Extern=
alID">ExternalID</a>
							</code></td></tr></tbody></table><p><a id=3D"d0e4163" name=3D"d0e416=
3">The </a><a href=3D"#NT-Name">Name</a> identifies the entity in an <a hre=
f=3D"#dt-entref" title=3D"Entity Reference">entity
reference</a> or, in the case of an unparsed entity, in the value of
an <b>ENTITY</b> or <b>ENTITIES</b> attribute. If the same entity is declar=
ed
more than once, the first declaration encountered is binding; at user optio=
n,
an XML processor <em title=3D"Keyword in RFC 2119 context" class=3D"rfc2119=
">MAY</em> issue a warning if entities are declared multiple times.</p><div=
 class=3D"div3">
<h4><a id=3D"sec-internal-ent" name=3D"sec-internal-ent">4.2.1 Internal Ent=
ities</a></h4><p>
<a id=3D"sec-internal-ent" name=3D"sec-internal-ent">						[</a><a title=3D=
"Internal Entity Replacement Text" id=3D"dt-internent" name=3D"dt-internent=
">Definition</a>: If the
entity definition is an <a href=3D"#NT-EntityValue">EntityValue</a>, the de=
fined
entity is called an <b>internal entity</b>. There is no separate physical
storage object, and the content of the entity is given in the declaration.]
Note that some processing of entity and character references in the <a href=
=3D"#dt-litentval" title=3D"Literal Entity Value">literal entity value</a>=
 may be required to produce
the correct <a href=3D"#dt-repltext" title=3D"Replacement Text">replacement=
 text</a>: see <a href=3D"#intern-replacement"><b>4.5 Construction of Entit=
y Replacement Text</b></a>.</p><p>An internal entity is a <a href=3D"#dt-pa=
rsedent" title=3D"Text Entity">parsed entity</a>.</p><p>Example of an inter=
nal entity declaration:</p><div class=3D"exampleInner"><pre>&lt;!ENTITY Pub=
-Status &quot;This is a pre-release of the
 specification.&quot;&gt;</pre></div></div><div class=3D"div3">
<h4><a id=3D"sec-external-ent" name=3D"sec-external-ent">4.2.2 External Ent=
ities</a></h4><p>
<a id=3D"sec-external-ent" name=3D"sec-external-ent">						[</a><a title=3D=
"External Entity" id=3D"dt-extent" name=3D"dt-extent">Definition</a>: If th=
e entity is not internal,
it is an <b>external entity</b>, declared as follows:]
					</p>
<h5><a id=3D"d0e4313" name=3D"d0e4313">External Entity Declaration</a></h5>=
<table summary=3D"Scrap" class=3D"scrap"><tbody><tr valign=3D"baseline"><td=
><a id=3D"NT-ExternalID" name=3D"NT-ExternalID">[75]&nbsp;&nbsp;&nbsp;</a><=
/td><td><code>ExternalID</code></td><td>&nbsp;&nbsp;&nbsp;::=3D&nbsp;&nbsp;=
&nbsp;</td><td><code>&#x27;SYSTEM&#x27; <a href=3D"#NT-S">S</a>
								<a href=3D"#NT-SystemLiteral">SystemLiteral</a>
							</code></td></tr><tr valign=3D"baseline"><td></td><td></td><td></td>=
<td><code>| &#x27;PUBLIC&#x27; <a href=3D"#NT-S">S</a>
								<a href=3D"#NT-PubidLiteral">PubidLiteral</a>
								<a href=3D"#NT-S">S</a>
								<a href=3D"#NT-SystemLiteral">SystemLiteral</a>
							</code></td></tr></tbody><tbody><tr valign=3D"baseline"><td><a id=3D=
"NT-NDataDecl" name=3D"NT-NDataDecl">[76]&nbsp;&nbsp;&nbsp;</a></td><td><co=
de>NDataDecl</code></td><td>&nbsp;&nbsp;&nbsp;::=3D&nbsp;&nbsp;&nbsp;</td><=
td><code>
								<a href=3D"#NT-S">S</a> &#x27;NDATA&#x27; <a href=3D"#NT-S">S</a>
								<a href=3D"#NT-Name">Name</a>
							</code></td><td><a href=3D"#not-declared">[VC: Notation Declared]</a=
></td></tr></tbody></table><p><a id=3D"d0e4313" name=3D"d0e4313">If the </a=
><a href=3D"#NT-NDataDecl">NDataDecl</a> is present, this is a general <a=
 href=3D"#dt-unparsed" title=3D"Unparsed Entity">unparsed entity</a>; other=
wise it is a parsed entity.</p><div class=3D"constraint"><p class=3D"prefix=
"><a id=3D"not-declared" name=3D"not-declared"><b>Validity constraint: Nota=
tion Declared</b></a></p><p><a id=3D"not-declared" name=3D"not-declared">Th=
e </a><a href=3D"#NT-Name">Name</a>
							<em title=3D"Keyword in RFC 2119 context" class=3D"rfc2119">MUST</em=
> match the declared name of a <a href=3D"#dt-notation" title=3D"Notation">=
notation</a>.</p></div><p>
						[<a title=3D"System Identifier" id=3D"dt-sysid" name=3D"dt-sysid">Def=
inition</a>: The <a href=3D"#NT-SystemLiteral">SystemLiteral</a> is called=
 the entity&#x27;s <b>system
identifier</b>. It is meant to be converted to a URI reference
(as defined in <a href=3D"#rfc3986">[IETF RFC 3986]</a>),
as part of the
process of dereferencing it to obtain input for the XML processor to constr=
uct the
entity&#x27;s replacement text.] It is an error for a fragment identifier
(beginning with a <code>#</code> character) to be part of a system identifi=
er.
Unless otherwise provided by information outside the scope of this specific=
ation
(e.g. a special XML element type defined by a particular DTD, or a processi=
ng
instruction defined by a particular application specification), relative UR=
Is
are relative to the location of the resource within which the entity declar=
ation
occurs. This is defined to
be the external entity containing the &#x27;&lt;&#x27; which starts the dec=
laration, at the
point when it is parsed as a declaration.
A URI might thus be relative to the <a href=3D"#dt-docent" title=3D"Documen=
t Entity">document
entity</a>, to the entity containing the <a href=3D"#dt-doctype" title=3D"D=
ocument Type Declaration">external
DTD subset</a>, or to some other <a href=3D"#dt-extent" title=3D"External=
 Entity">external parameter
entity</a>. Attempts to
retrieve the resource identified by a URI may be redirected at the parser
level (for example, in an entity resolver) or below (at the protocol level,
for example, via an HTTP <code>Location:</code> header). In the absence of=
 additional
information outside the scope of this specification within the resource,
the base URI of a resource is always the URI of the actual resource returne=
d.
In other words, it is the URI of the resource retrieved after all redirecti=
on
has occurred.</p><p>System
identifiers (and other XML strings meant to be used as URI references) may=
 contain
characters that, according to <a href=3D"#rfc3986">[IETF RFC 3986]</a>,
must be escaped before a URI can be used to retrieve the referenced resourc=
e. The
characters to be escaped are the control characters #x0 to #x1F and #x7F (m=
ost of
which cannot appear in XML), space #x20, the delimiters &#x27;&lt;&#x27; #x=
3C, &#x27;&gt;&#x27; #x3E and
&#x27;&quot;&#x27; #x22, the <em>unwise</em> characters &#x27;{&#x27; #x7B,=
 &#x27;}&#x27; #x7D, &#x27;|&#x27; #x7C, &#x27;\&#x27; #x5C, &#x27;^&#x27;=
 #x5E and
&#x27;`&#x27; #x60, as well as all characters above #x7F. Since escaping is=
 not always a fully
reversible process, it <em title=3D"Keyword in RFC 2119 context" class=3D"r=
fc2119">MUST</em> be performed only when absolutely necessary and as late
as possible in a processing chain. In particular, neither the process of co=
nverting
a relative URI to an absolute one nor the process of passing a URI referenc=
e to a
process or software component responsible for dereferencing it <em title=3D=
"Keyword in RFC 2119 context" class=3D"rfc2119">SHOULD</em> trigger escapin=
g.
When escaping does occur, it <em title=3D"Keyword in RFC 2119 context" clas=
s=3D"rfc2119">MUST</em> be performed as follows:</p><ol class=3D"enumar"><l=
i><p>Each character to be escaped is represented in UTF-8 <span><a href=3D"=
#Unicode">[Unicode]</a></span>
as one or more bytes.</p></li><li><p>The resulting bytes are escaped with
the URI escaping mechanism (that is, converted to <code>%</code>
								<var>HH</var>,
where HH is the hexadecimal notation of the byte value).</p></li><li><p>The=
 original character is replaced by the resulting character sequence.</p></l=
i></ol><div class=3D"note"><p class=3D"prefix"><b>Note:</b></p><p>In a futu=
re edition of this specification, the XML Core Working Group intends to rep=
lace the preceding paragraph
							and list of steps with a normative reference to an upcoming revision=
 of IETF RFC 3987, which will define
							&quot;Legacy Extended IRIs (LEIRIs)&quot;.  When this revision is av=
ailable, it is the intent of the XML Core WG to use it to replace
							language similar to the above in any future revisions of XML-related=
 specifications under its purview.</p></div><p>
						[<a title=3D"Public identifier" id=3D"dt-pubid" name=3D"dt-pubid">Def=
inition</a>:  In addition to a system
identifier, an external identifier may include a <b>public identifier</b>.]
An XML processor attempting to retrieve the entity&#x27;s content may use
any combination of
the public and system identifiers as well as additional information outside=
 the
scope of this specification to try to generate an alternative URI reference.
If the processor is unable to do so, it <em title=3D"Keyword in RFC 2119 co=
ntext" class=3D"rfc2119">MUST</em> use the URI
reference specified in the system literal. Before a match is attempted,
all strings of white space in the public identifier <em title=3D"Keyword in=
 RFC 2119 context" class=3D"rfc2119">MUST</em> be normalized to
single space characters (#x20), and leading and trailing white space <em ti=
tle=3D"Keyword in RFC 2119 context" class=3D"rfc2119">MUST</em>
be removed.</p><p>Examples of external entity declarations:</p><div class=
=3D"exampleInner"><pre>&lt;!ENTITY open-hatch
         SYSTEM &quot;http://www.textuality.com/boilerplate/OpenHatch.xml&q=
uot;&gt;
&lt;!ENTITY open-hatch
         PUBLIC &quot;-//Textuality//TEXT Standard open-hatch boilerplate//=
EN&quot;
         &quot;http://www.textuality.com/boilerplate/OpenHatch.xml&quot;&gt;
&lt;!ENTITY hatch-pic
         SYSTEM &quot;../grafix/OpenHatch.gif&quot;
         NDATA gif &gt;</pre></div></div></div><div class=3D"div2">
<h3><a id=3D"TextEntities" name=3D"TextEntities">4.3 Parsed Entities</a></h=
3><div class=3D"div3">
<h4><a id=3D"sec-TextDecl" name=3D"sec-TextDecl">4.3.1 The Text Declaration=
</a></h4><p><a id=3D"sec-TextDecl" name=3D"sec-TextDecl">External parsed en=
tities <em title=3D"Keyword in RFC 2119 context" class=3D"rfc2119">SHOULD</=
em> each begin with a <b>text declaration</b>.</a></p>
<h5><a id=3D"d0e4481" name=3D"d0e4481">Text Declaration</a></h5><table summ=
ary=3D"Scrap" class=3D"scrap"><tbody><tr valign=3D"baseline"><td><a id=3D"N=
T-TextDecl" name=3D"NT-TextDecl">[77]&nbsp;&nbsp;&nbsp;</a></td><td><code>T=
extDecl</code></td><td>&nbsp;&nbsp;&nbsp;::=3D&nbsp;&nbsp;&nbsp;</td><td><c=
ode>&#x27;&lt;?xml&#x27; <a href=3D"#NT-VersionInfo">VersionInfo</a>? <a hr=
ef=3D"#NT-EncodingDecl">EncodingDecl</a>
									<a href=3D"#NT-S">S</a>? &#x27;?&gt;&#x27;</code></td></tr></tbody=
></table><p><a id=3D"d0e4481" name=3D"d0e4481">The text declaration <em tit=
le=3D"Keyword in RFC 2119 context" class=3D"rfc2119">MUST</em> be provided=
 literally, not by reference
					to a parsed entity. The text declaration
					<em title=3D"Keyword in RFC 2119 context" class=3D"rfc2119">MUST NOT</=
em> appear at any
					position other than the beginning of an external parsed entity. The te=
xt declaration
          in an external parsed entity is not considered part of its </a><a=
 href=3D"#dt-repltext" title=3D"Replacement Text">replacement text</a>.</p>=
</div><div class=3D"div3">
<h4><a id=3D"wf-entities" name=3D"wf-entities">4.3.2 Well-Formed Parsed Ent=
ities</a></h4><p><a id=3D"wf-entities" name=3D"wf-entities">The document en=
tity is well-formed if it matches the production labeled </a><a href=3D"#NT=
-document">document</a>. An external general parsed entity is well-formed
if it matches the production labeled <a href=3D"#NT-extParsedEnt">extParsed=
Ent</a>. All
external parameter entities are well-formed by definition.</p><div class=3D=
"note"><p class=3D"prefix"><b>Note:</b></p><p>Only parsed entities that are=
 referenced directly or indirectly within the document are required to be=
 well-formed.</p></div>
<h5><a id=3D"d0e4524" name=3D"d0e4524">Well-Formed External Parsed Entity</=
a></h5><table summary=3D"Scrap" class=3D"scrap"><tbody><tr valign=3D"baseli=
ne"><td><a id=3D"NT-extParsedEnt" name=3D"NT-extParsedEnt">[78]&nbsp;&nbsp;=
&nbsp;</a></td><td><code>extParsedEnt</code></td><td>&nbsp;&nbsp;&nbsp;::=
=3D&nbsp;&nbsp;&nbsp;</td><td><code>
								<a href=3D"#NT-TextDecl">TextDecl</a>? <a href=3D"#NT-content">cont=
ent</a>
							</code></td></tr></tbody></table><p><a id=3D"d0e4524" name=3D"d0e452=
4">An internal general parsed entity is well-formed if its replacement text
matches the production labeled </a><a href=3D"#NT-content">content</a>. All=
 internal
parameter entities are well-formed by definition.</p><p>A consequence of we=
ll-formedness in general
entities is that the logical and physical
structures in an XML document are properly nested; no <a href=3D"#dt-stag"=
 title=3D"Start-Tag">start-tag</a>, <a href=3D"#dt-etag" title=3D"End Tag">=
end-tag</a>, <a href=3D"#dt-empty" title=3D"Empty">empty-element tag</a>,=
 <a href=3D"#dt-element" title=3D"Element">element</a>, <a href=3D"#dt-comm=
ent" title=3D"Comment">comment</a>, <a href=3D"#dt-pi" title=3D"Processing=
 instruction">processing instruction</a>, <a href=3D"#dt-charref" title=3D"=
Character Reference">character
reference</a>, or <a href=3D"#dt-entref" title=3D"Entity Reference">entity=
 reference</a>
can begin in one entity and end in another.</p></div><div class=3D"div3">
<h4><a id=3D"charencoding" name=3D"charencoding">4.3.3 Character Encoding=
 in Entities</a></h4><p><a id=3D"charencoding" name=3D"charencoding">Each=
 external parsed entity in an XML document may use a different encoding
for its characters. All XML processors <em title=3D"Keyword in RFC 2119 con=
text" class=3D"rfc2119">MUST</em> be able to read entities in both
the UTF-8 and UTF-16 encodings. The terms &quot;UTF-8&quot;
and &quot;UTF-16&quot; in this specification do not apply to=20

<span>related character encodings, including but not limited to UTF-16BE,=
 UTF-16LE, or CESU-8.</span></a></p><p><a id=3D"charencoding" name=3D"chare=
ncoding">Entities encoded in UTF-16 <em title=3D"Keyword in RFC 2119 contex=
t" class=3D"rfc2119">MUST</em> and entities
encoded in UTF-8 <em title=3D"Keyword in RFC 2119 context" class=3D"rfc2119=
">MAY</em> begin with the Byte Order Mark described by
Annex H of </a><a href=3D"#ISO10646-2000">[ISO/IEC 10646:2000]</a>, section
<span>16.8</span> of <a href=3D"#Unicode">[Unicode]</a>
(the ZERO WIDTH NO-BREAK SPACE character, #xFEFF). This is an encoding sign=
ature,
not part of either the markup or the character data of the XML document. XML
processors <em title=3D"Keyword in RFC 2119 context" class=3D"rfc2119">MUST=
</em> be able to use this character to differentiate between UTF-8
and UTF-16 encoded documents.</p><p>If the replacement text of an external=
 entity is to
						begin with the character U+FEFF, and no text declaration
						is present, then a Byte Order Mark MUST be present,
						whether the entity is encoded in UTF-8 or UTF-16.</p><p>Although an=
 XML processor is required to read only entities in the UTF-8
and UTF-16 encodings, it is recognized that other encodings are used around
the world, and it may be desired for XML processors to read entities that
use them. In
the absence of external character encoding information (such as MIME header=
s),
parsed entities which are stored in an encoding other than UTF-8 or UTF-16
<em title=3D"Keyword in RFC 2119 context" class=3D"rfc2119">MUST</em> begin=
 with a text declaration (see <a href=3D"#sec-TextDecl"><b>4.3.1 The Text=
 Declaration</b></a>) containing
an encoding declaration:</p>
<h5><a id=3D"d0e4623" name=3D"d0e4623">Encoding Declaration</a></h5><table=
 summary=3D"Scrap" class=3D"scrap"><tbody><tr valign=3D"baseline"><td><a id=
=3D"NT-EncodingDecl" name=3D"NT-EncodingDecl">[80]&nbsp;&nbsp;&nbsp;</a></t=
d><td><code>EncodingDecl</code></td><td>&nbsp;&nbsp;&nbsp;::=3D&nbsp;&nbsp;=
&nbsp;</td><td><code>
								<a href=3D"#NT-S">S</a> &#x27;encoding&#x27; <a href=3D"#NT-Eq">Eq<=
/a>
(&#x27;&quot;&#x27; <a href=3D"#NT-EncName">EncName</a> &#x27;&quot;&#x27;=
 | &quot;&#x27;&quot; <a href=3D"#NT-EncName">EncName</a>
&quot;&#x27;&quot; ) </code></td></tr></tbody><tbody><tr valign=3D"baseline=
"><td><a id=3D"NT-EncName" name=3D"NT-EncName">[81]&nbsp;&nbsp;&nbsp;</a></=
td><td><code>EncName</code></td><td>&nbsp;&nbsp;&nbsp;::=3D&nbsp;&nbsp;&nbs=
p;</td><td><code>[A-Za-z] ([A-Za-z0-9._] | &#x27;-&#x27;)*</code></td><td><=
i>/* Encoding
name contains only Latin characters */</i></td></tr></tbody></table><p><a=
 id=3D"d0e4623" name=3D"d0e4623">In the </a><a href=3D"#dt-docent" title=3D=
"Document Entity">document entity</a>, the encoding
declaration is part of the <a href=3D"#dt-xmldecl" title=3D"XML Declaration=
">XML declaration</a>.
The <a href=3D"#NT-EncName">EncName</a> is the name of the encoding used.</=
p><p>In an encoding declaration, the values &quot;
							<code>UTF-8</code>
						&quot;, &quot;
							<code>UTF-16</code>
						&quot;,
&quot;
							<code>ISO-10646-UCS-2</code>
						&quot;, and &quot;
							<code>ISO-10646-UCS-4</code>
						&quot;
						<em title=3D"Keyword in RFC 2119 context" class=3D"rfc2119">SHOULD</e=
m> be used
for the various encodings and transformations of Unicode / ISO/IEC 10646,
the values &quot;
							<code>ISO-8859-1</code>
						&quot;, &quot;
							<code>ISO-8859-2</code>
						&quot;,
... &quot;
							<code>ISO-8859-</code>
							<var>n</var>
						&quot; (where <var>n</var>
is the part number) <em title=3D"Keyword in RFC 2119 context" class=3D"rfc2=
119">SHOULD</em> be used for the parts of ISO 8859, and
the values &quot;
							<code>ISO-2022-JP</code>
						&quot;, &quot;
							<code>Shift_JIS</code>
						&quot;,
and &quot;
							<code>EUC-JP</code>
						&quot;
						<em title=3D"Keyword in RFC 2119 context" class=3D"rfc2119">SHOULD</e=
m> be used for the various encoded
forms of JIS X-0208-1997. It
is <em title=3D"Keyword in RFC 2119 context" class=3D"rfc2119">RECOMMENDED<=
/em> that character encodings registered (as <em>charset</em>s)
with the Internet Assigned Numbers Authority <a href=3D"#IANA">[IANA-CHARSE=
TS]</a>,
other than those just listed, be referred to using their registered names;
other encodings <em title=3D"Keyword in RFC 2119 context" class=3D"rfc2119"=
>SHOULD</em> use names starting with an &quot;x-&quot; prefix.
XML processors <em title=3D"Keyword in RFC 2119 context" class=3D"rfc2119">=
SHOULD</em> match character encoding names in a case-insensitive
way and <em title=3D"Keyword in RFC 2119 context" class=3D"rfc2119">SHOULD<=
/em> either interpret an IANA-registered name as the encoding registered
at IANA for that name or treat it as unknown (processors are, of course, not
required to support all IANA-registered encodings).</p><p>In the absence of=
 information provided by an external transport protocol
(e.g. HTTP or MIME), it is a <a href=3D"#dt-fatal" title=3D"Fatal Error">fa=
tal error</a> for
an entity including an encoding declaration to be presented to the XML proc=
essor
in an encoding other than that named in the declaration, or for an entity=
 which
begins with neither a Byte Order Mark
nor an encoding declaration to use an encoding other than UTF-8. Note that
since ASCII is a subset of UTF-8, ordinary ASCII entities do not strictly
need an encoding declaration.</p><p>It is a <a href=3D"#dt-fatal" title=3D"=
Fatal Error">fatal error</a> for a <a href=3D"#NT-TextDecl">TextDecl</a> to=
 occur other
than at the beginning of an external entity.</p><p>It is a <a href=3D"#dt-f=
atal" title=3D"Fatal Error">fatal error</a> when an XML processor
encounters an entity with an encoding that it is unable to process. It
is a <a href=3D"#dt-fatal" title=3D"Fatal Error">fatal error</a> if an XML=
 entity is determined (via default, encoding declaration,
or higher-level protocol) to be in a certain encoding but contains byte
sequences that are not legal in that encoding. Specifically, it is a
fatal error if an entity encoded in UTF-8 contains any <span>ill-formed</sp=
an> code unit sequences,
as defined in <span>section 3.9 of </span> Unicode <span><a href=3D"#Unicod=
e">[Unicode]</a></span>. Unless an encoding
is determined by a higher-level protocol, it is also a <a href=3D"#dt-fatal=
" title=3D"Fatal Error">fatal error</a> if an XML entity
contains no encoding declaration and its content is not legal UTF-8 or UTF-=
16.</p><p>Examples of text declarations containing encoding declarations:</=
p><div class=3D"exampleInner"><pre>&lt;?xml encoding=3D&#x27;UTF-8&#x27;?&g=
t;
&lt;?xml encoding=3D&#x27;EUC-JP&#x27;?&gt;</pre></div></div></div><div cla=
ss=3D"div2">
<h3><a id=3D"entproc" name=3D"entproc">4.4 XML Processor Treatment of Entit=
ies and References</a></h3><p><a id=3D"entproc" name=3D"entproc">The table=
 below summarizes the contexts in which character references,
entity references, and invocations of unparsed entities might appear and the
<em title=3D"Keyword in RFC 2119 context" class=3D"rfc2119">REQUIRED</em>=
 behavior of an </a><a href=3D"#dt-xml-proc" title=3D"XML Processor">XML pr=
ocessor</a>
in each case. The labels in the leftmost column describe the recognition co=
ntext: </p><dl><dt class=3D"label">Reference in Content</dt><dd><p>as a ref=
erence anywhere after the <a href=3D"#dt-stag" title=3D"Start-Tag">start-ta=
g</a>
and before the <a href=3D"#dt-etag" title=3D"End Tag">end-tag</a> of an ele=
ment; corresponds
to the nonterminal <a href=3D"#NT-content">content</a>.</p></dd><dt class=
=3D"label">Reference in Attribute Value</dt><dd><p>as a reference within ei=
ther the value of an attribute in a <a href=3D"#dt-stag" title=3D"Start-Tag=
">start-tag</a>,
or a default value in an <a href=3D"#dt-attdecl" title=3D"Attribute-List De=
claration">attribute declaration</a>;
corresponds to the nonterminal <a href=3D"#NT-AttValue">AttValue</a>.</p></=
dd><dt class=3D"label">Occurs as Attribute Value</dt><dd><p>as a <a href=3D=
"#NT-Name">Name</a>, not a reference, appearing either as
the value of an attribute which has been declared as type <b>ENTITY</b>,
or as one of the space-separated tokens in the value of an attribute which
has been declared as type <b>ENTITIES</b>.</p></dd><dt class=3D"label">Refe=
rence in Entity Value</dt><dd><p>as a reference within a parameter or inter=
nal entity&#x27;s <a href=3D"#dt-litentval" title=3D"Literal Entity Value">=
literal
entity value</a> in the entity&#x27;s declaration; corresponds to the nonte=
rminal <a href=3D"#NT-EntityValue">EntityValue</a>.</p></dd><dt class=3D"la=
bel">Reference in DTD</dt><dd><p>as a reference within either the internal=
 or external subsets of the <a href=3D"#dt-doctype" title=3D"Document Type=
 Declaration">DTD</a>, but outside of an <a href=3D"#NT-EntityValue">Entity=
Value</a>, <a href=3D"#NT-AttValue">AttValue</a>, <a href=3D"#NT-PI">PI</a>=
, <a href=3D"#NT-Comment">Comment</a>, <a href=3D"#NT-SystemLiteral">System=
Literal</a>, <a href=3D"#NT-PubidLiteral">PubidLiteral</a>,
or the contents of an ignored conditional section (see <a href=3D"#sec-cond=
ition-sect"><b>3.4 Conditional Sections</b></a>).</p><p>.</p></dd></dl><p>
				</p><table cellpadding=3D"7" border=3D"1" frame=3D"border"><tbody align=
=3D"center"><tr><td rowspan=3D"2"></td><td valign=3D"bottom" align=3D"cente=
r" colspan=3D"4">Entity
Type</td><td align=3D"center" rowspan=3D"2">Character</td></tr><tr valign=
=3D"bottom" align=3D"center"><td>Parameter</td><td>Internal General</td><td=
>External Parsed
General</td><td>Unparsed</td></tr><tr valign=3D"middle" align=3D"center"><t=
d align=3D"right">Reference
in Content</td><td>
								<a href=3D"#not-recognized"><cite>Not recognized</cite></a>
							</td><td>
								<a href=3D"#included"><cite>Included</cite></a>
							</td><td>
								<a href=3D"#include-if-valid"><cite>Included
if validating</cite></a>
							</td><td>
								<a href=3D"#forbidden"><cite>Forbidden</cite></a>
							</td><td>
								<a href=3D"#included"><cite>Included</cite></a>
							</td></tr><tr valign=3D"middle" align=3D"center"><td align=3D"right"=
>Reference in Attribute Value</td><td>
								<a href=3D"#not-recognized"><cite>Not recognized</cite></a>
							</td><td>
								<a href=3D"#inliteral"><cite>Included
in literal</cite></a>
							</td><td>
								<a href=3D"#forbidden"><cite>Forbidden</cite></a>
							</td><td>
								<a href=3D"#forbidden"><cite>Forbidden</cite></a>
							</td><td>
								<a href=3D"#included"><cite>Included</cite></a>
							</td></tr><tr valign=3D"middle" align=3D"center"><td align=3D"right"=
>Occurs as Attribute
Value</td><td>
								<a href=3D"#not-recognized"><cite>Not recognized</cite></a>
							</td><td>
								<a href=3D"#forbidden"><cite>Forbidden</cite></a>
							</td><td>
								<a href=3D"#forbidden"><cite>Forbidden</cite></a>
							</td><td>
								<a href=3D"#notify"><cite>Notify</cite></a>
							</td><td>
								<a href=3D"#not-recognized"><cite>Not recognized</cite></a>
							</td></tr><tr valign=3D"middle" align=3D"center"><td align=3D"right"=
>Reference in EntityValue</td><td>
								<a href=3D"#inliteral"><cite>Included in literal</cite></a>
							</td><td>
								<a href=3D"#bypass"><cite>Bypassed</cite></a>
							</td><td>
								<a href=3D"#bypass"><cite>Bypassed</cite></a>
							</td><td>
								<a href=3D"#error"><cite>Error</cite></a>
							</td><td>
								<a href=3D"#included"><cite>Included</cite></a>
							</td></tr><tr valign=3D"middle" align=3D"center"><td align=3D"right"=
>Reference in DTD</td><td>
								<a href=3D"#as-PE"><cite>Included as PE</cite></a>
							</td><td>
								<a href=3D"#forbidden"><cite>Forbidden</cite></a>
							</td><td>
								<a href=3D"#forbidden"><cite>Forbidden</cite></a>
							</td><td>
								<a href=3D"#forbidden"><cite>Forbidden</cite></a>
							</td><td>
								<a href=3D"#forbidden"><cite>Forbidden</cite></a>
							</td></tr></tbody></table><div class=3D"div3">
<h4><a id=3D"not-recognized" name=3D"not-recognized">4.4.1 Not Recognized</=
a></h4><p><a id=3D"not-recognized" name=3D"not-recognized">Outside the DTD,=
 the <code>%</code> character has no special significance;
thus, what would be parameter entity references in the DTD are not recogniz=
ed
as markup in </a><a href=3D"#NT-content">content</a>. Similarly, the names=
 of unparsed
entities are not recognized except when they appear in the value of an appr=
opriately
declared attribute.</p></div><div class=3D"div3">
<h4><a id=3D"included" name=3D"included">4.4.2 Included</a></h4><p>
<a id=3D"included" name=3D"included">						[</a><a title=3D"Include" id=3D"=
dt-include" name=3D"dt-include">Definition</a>: An entity is <b>included</b>
when its <a href=3D"#dt-repltext" title=3D"Replacement Text">replacement te=
xt</a> is retrieved
and processed, in place of the reference itself, as though it were part of
the document at the location the reference was recognized.] The replacement
text may contain both <a href=3D"#dt-chardata" title=3D"Character Data">cha=
racter data</a>
and (except for parameter entities) <a href=3D"#dt-markup" title=3D"Markup"=
>markup</a>,
which <em title=3D"Keyword in RFC 2119 context" class=3D"rfc2119">MUST</em>=
 be recognized in the usual way. (The string &quot;
							<code>AT&amp;amp;T;</code>
						&quot;
expands to &quot;
							<code>AT&amp;T;</code>
						&quot; and the remaining ampersand
is not recognized as an entity-reference delimiter.) A character reference
is <b>included</b> when the indicated character is processed in place
of the reference itself. </p></div><div class=3D"div3">
<h4><a id=3D"include-if-valid" name=3D"include-if-valid">4.4.3 Included If=
 Validating</a></h4><p><a id=3D"include-if-valid" name=3D"include-if-valid"=
>When an XML processor recognizes a reference to a parsed entity, in order
to </a><a href=3D"#dt-valid" title=3D"Validity">validate</a> the document,=
 the processor
<em title=3D"Keyword in RFC 2119 context" class=3D"rfc2119">MUST</em>
						<a href=3D"#dt-include" title=3D"Include">include</a> its replacement=
 text. If
the entity is external, and the processor is not attempting to validate the
XML document, the processor <em title=3D"Keyword in RFC 2119 context" class=
=3D"rfc2119">MAY</em>, but need
not, include the entity&#x27;s replacement text. If a non-validating proces=
sor
does not include the replacement text, it <em title=3D"Keyword in RFC 2119=
 context" class=3D"rfc2119">MUST</em> inform the application that
it recognized, but did not read, the entity.</p><p>This rule is based on th=
e recognition that the automatic inclusion provided
by the SGML and XML entity mechanism, primarily designed to support modular=
ity
in authoring, is not necessarily appropriate for other applications, in par=
ticular
document browsing. Browsers, for example, when encountering an external par=
sed
entity reference, might choose to provide a visual indication of the entity=
&#x27;s
presence and retrieve it for display only on demand.</p></div><div class=3D=
"div3">
<h4><a id=3D"forbidden" name=3D"forbidden">4.4.4 Forbidden</a></h4><p><a id=
=3D"forbidden" name=3D"forbidden">The following are forbidden, and constitu=
te </a><a href=3D"#dt-fatal" title=3D"Fatal Error">fatal
errors</a>:</p><ul><li><p>the appearance of a reference to an <a href=3D"#d=
t-unparsed" title=3D"Unparsed Entity">unparsed
entity</a>, except in the
<a href=3D"#NT-EntityValue">EntityValue</a> in an entity declaration.</p></=
li><li><p>the appearance of any character or general-entity reference in the
DTD except within an <a href=3D"#NT-EntityValue">EntityValue</a> or <a href=
=3D"#NT-AttValue">AttValue</a>.</p></li><li><p>a reference to an external=
 entity in an attribute value.</p></li></ul></div><div class=3D"div3">
<h4><a id=3D"inliteral" name=3D"inliteral">4.4.5 Included in Literal</a></h=
4><p><a id=3D"inliteral" name=3D"inliteral">When an </a><a href=3D"#dt-entr=
ef" title=3D"Entity Reference">entity reference</a> appears in
an attribute value, or a parameter entity reference appears in a literal en=
tity
value, its <a href=3D"#dt-repltext" title=3D"Replacement Text">replacement=
 text</a>
						<em title=3D"Keyword in RFC 2119 context" class=3D"rfc2119">MUST</em>=
 be processed
in place of the reference itself as though it were part of the document at
the location the reference was recognized, except that a single or double
quote character in the replacement text <em title=3D"Keyword in RFC 2119 co=
ntext" class=3D"rfc2119">MUST</em> always be treated as a normal data
character and <em title=3D"Keyword in RFC 2119 context" class=3D"rfc2119">M=
UST NOT</em> terminate the literal. For example, this is well-formed:</p><d=
iv class=3D"exampleInner"><pre>&lt;!ENTITY % YN &#x27;&quot;Yes&quot;&#x27;=
 &gt;
&lt;!ENTITY WhatHeSaid &quot;He said %YN;&quot; &gt;</pre></div><p>while th=
is is not:</p><div class=3D"exampleInner"><pre>&lt;!ENTITY EndAttr &quot;27=
&#x27;&quot; &gt;
&lt;element attribute=3D&#x27;a-&amp;EndAttr;&gt;</pre></div></div><div cla=
ss=3D"div3">
<h4><a id=3D"notify" name=3D"notify">4.4.6 Notify</a></h4><p><a id=3D"notif=
y" name=3D"notify">When the name of an </a><a href=3D"#dt-unparsed" title=
=3D"Unparsed Entity">unparsed entity</a>
appears as a token in the value of an attribute of declared type <b>ENTITY<=
/b>
or <b>ENTITIES</b>, a validating processor <em title=3D"Keyword in RFC 2119=
 context" class=3D"rfc2119">MUST</em> inform the application of
the <a href=3D"#dt-sysid" title=3D"System Identifier">system</a> and <a hre=
f=3D"#dt-pubid" title=3D"Public identifier">public</a>
(if any) identifiers for both the entity and its associated <a href=3D"#dt-=
notation" title=3D"Notation">notation</a>.</p></div><div class=3D"div3">
<h4><a id=3D"bypass" name=3D"bypass">4.4.7 Bypassed</a></h4><p><a id=3D"byp=
ass" name=3D"bypass">When a general entity reference appears in the </a><a=
 href=3D"#NT-EntityValue">EntityValue</a>
in an entity declaration, it <em title=3D"Keyword in RFC 2119 context" clas=
s=3D"rfc2119">MUST</em> be bypassed and left as is.</p></div><div class=3D"=
div3">
<h4><a id=3D"as-PE" name=3D"as-PE">4.4.8 Included as PE</a></h4><p><a id=3D=
"as-PE" name=3D"as-PE">Just as with external parsed entities, parameter ent=
ities need only be </a><a href=3D"#include-if-valid"><cite>included if vali=
dating</cite></a>. When a parameter-entity
reference is recognized in the DTD and included, its <a href=3D"#dt-repltex=
t" title=3D"Replacement Text">replacement
text</a>
						<em title=3D"Keyword in RFC 2119 context" class=3D"rfc2119">MUST</em>=
 be enlarged by the attachment of one leading and one following
space (#x20) character; the intent is to constrain the replacement text of
parameter entities to contain an integral number of grammatical tokens in
the DTD. This
behavior <em title=3D"Keyword in RFC 2119 context" class=3D"rfc2119">MUST=
 NOT</em> apply to parameter entity references within entity values;
these are described in <a href=3D"#inliteral"><b>4.4.5 Included in Literal<=
/b></a>.</p></div><div class=3D"div3">
<h4><a id=3D"error" name=3D"error">4.4.9 Error</a></h4><p><a id=3D"error"=
 name=3D"error">It is an </a><a href=3D"#dt-error" title=3D"Error">error</a=
> for a reference to
		an unparsed entity to appear in the <a href=3D"#NT-EntityValue">EntityVal=
ue</a> in an
		entity declaration.</p></div></div><div class=3D"div2">
<h3><a id=3D"intern-replacement" name=3D"intern-replacement">4.5 Constructi=
on of Entity Replacement Text</a></h3><p><a id=3D"intern-replacement" name=
=3D"intern-replacement">In discussing the treatment of entities, it is usef=
ul to distinguish
two forms of the entity&#x27;s value.
[</a><a title=3D"Literal Entity Value" id=3D"dt-litentval" name=3D"dt-liten=
tval">Definition</a>: For an
internal entity, the <b>literal
entity value</b> is the quoted string actually present in the entity declar=
ation,
corresponding to the non-terminal <a href=3D"#NT-EntityValue">EntityValue</=
a>.]
					[<a title=3D"Literal Entity Value" id=3D"dt-extlitentval" name=3D"dt-e=
xtlitentval">Definition</a>: For an external entity, the <b>literal
entity value</b> is the exact text contained in the entity.]
					[<a title=3D"Replacement Text" id=3D"dt-repltext" name=3D"dt-repltext"=
>Definition</a>: For an
internal entity, the <b>replacement text</b>
is the content of the entity, after replacement of character references and
parameter-entity references.]
					[<a title=3D"Replacement Text" id=3D"dt-extrepltext" name=3D"dt-extrep=
ltext">Definition</a>: For
an external entity, the <b>replacement text</b> is the content of the entit=
y,
after stripping the text declaration (leaving any surrounding whitespace)=
 if there
is one but without any replacement of character references or parameter-ent=
ity
references.]
				</p><p>The literal entity value as given in an internal entity declarat=
ion (<a href=3D"#NT-EntityValue">EntityValue</a>) may contain character, pa=
rameter-entity,
and general-entity references. Such references <em title=3D"Keyword in RFC=
 2119 context" class=3D"rfc2119">MUST</em> be contained entirely
within the literal entity value. The actual replacement text that is <a hre=
f=3D"#dt-include" title=3D"Include">included</a> (or <a href=3D"#inliteral"=
 title=3D"">included in literal</a>) as described above
<em title=3D"Keyword in RFC 2119 context" class=3D"rfc2119">MUST</em> conta=
in the <em>replacement
text</em> of any parameter entities referred to, and <em title=3D"Keyword=
 in RFC 2119 context" class=3D"rfc2119">MUST</em> contain the character
referred to, in place of any character references in the literal entity val=
ue;
however, general-entity references <em title=3D"Keyword in RFC 2119 context=
" class=3D"rfc2119">MUST</em> be left as-is, unexpanded. For example,
given the following declarations:</p><div class=3D"exampleInner"><pre>&lt;!=
ENTITY % pub    &quot;&amp;#xc9;ditions Gallimard&quot; &gt;
&lt;!ENTITY   rights &quot;All rights reserved&quot; &gt;
&lt;!ENTITY   book   &quot;La Peste: Albert Camus,
&amp;#xA9; 1947 %pub;. &amp;rights;&quot; &gt;</pre></div><p>then the repla=
cement text for the entity &quot;
						<code>book</code>
					&quot;
is:</p><div class=3D"exampleInner"><pre>La Peste: Albert Camus,
=C2=A9 1947 =C3=89ditions Gallimard. &amp;rights;</pre></div><p>The general=
-entity reference &quot;
						<code>&amp;rights;</code>
					&quot; would
be expanded should the reference &quot;
						<code>&amp;book;</code>
					&quot; appear
in the document&#x27;s content or an attribute value.</p><p>These simple ru=
les may have complex interactions; for a detailed discussion
of a difficult example, see <a href=3D"#sec-entexpand"><b>D Expansion of En=
tity and Character References</b></a>.</p></div><div class=3D"div2">
<h3><a id=3D"sec-predefined-ent" name=3D"sec-predefined-ent">4.6 Predefined=
 Entities</a></h3><p>
<a id=3D"sec-predefined-ent" name=3D"sec-predefined-ent">					[</a><a title=
=3D"escape" id=3D"dt-escape" name=3D"dt-escape">Definition</a>: Entity and=
 character references may
both be used to <b>escape</b> the left angle bracket, ampersand, and
other delimiters. A set of general entities (<code>amp</code>,
<code>lt</code>,
<code>gt</code>,
<code>apos</code>,
<code>quot</code>) is specified for
this purpose. Numeric character references may also be used; they are expan=
ded
immediately when recognized and <em title=3D"Keyword in RFC 2119 context"=
 class=3D"rfc2119">MUST</em> be treated as character data, so the
numeric character references &quot;
							<code>&amp;#60;</code>
						&quot; and &quot;
							<code>&amp;#38;</code>
						&quot; may be used to escape <code>&lt;</code> and <code>&amp;</code>=
 when they occur
in character data.]
				</p><p>All XML processors <em title=3D"Keyword in RFC 2119 context" cla=
ss=3D"rfc2119">MUST</em> recognize these entities whether they are declared
or not. <a href=3D"#dt-interop" title=3D"For interoperability">For interope=
rability</a>, valid XML
documents <em title=3D"Keyword in RFC 2119 context" class=3D"rfc2119">SHOUL=
D</em> declare these entities, like any others, before using them. If
the entities <code>lt</code> or <code>amp</code> are declared, they <em tit=
le=3D"Keyword in RFC 2119 context" class=3D"rfc2119">MUST</em> be
declared as internal entities whose replacement text is a character referen=
ce
to the respective
character (less-than sign or ampersand) being escaped; the double
escaping is <em title=3D"Keyword in RFC 2119 context" class=3D"rfc2119">REQ=
UIRED</em> for these entities so that references to them produce
a well-formed result. If the entities <code>gt</code>, <code>apos</code>,
or <code>quot</code> are declared, they <em title=3D"Keyword in RFC 2119 co=
ntext" class=3D"rfc2119">MUST</em> be declared as internal entities
whose replacement text is the single character being escaped (or a character
reference to that character; the double escaping here is <em title=3D"Keywo=
rd in RFC 2119 context" class=3D"rfc2119">OPTIONAL</em> but harmless).
For example:</p><div class=3D"exampleInner"><pre>&lt;!ENTITY lt     &quot;&=
amp;#38;#60;&quot;&gt;
&lt;!ENTITY gt     &quot;&amp;#62;&quot;&gt;
&lt;!ENTITY amp    &quot;&amp;#38;#38;&quot;&gt;
&lt;!ENTITY apos   &quot;&amp;#39;&quot;&gt;
&lt;!ENTITY quot   &quot;&amp;#34;&quot;&gt;</pre></div></div><div class=3D=
"div2">
<h3><a id=3D"Notations" name=3D"Notations">4.7 Notation Declarations</a></h=
3><p>
<a id=3D"Notations" name=3D"Notations">					[</a><a title=3D"Notation" id=
=3D"dt-notation" name=3D"dt-notation">Definition</a>:=20
						<b>Notations</b> identify
by name the format of <a href=3D"#dt-unparsed" title=3D"Unparsed Entity">un=
parsed entities</a>,
the format of elements which bear a notation attribute, or the application
to which a <a href=3D"#dt-pi" title=3D"Processing instruction">processing=
 instruction</a> is addressed.]
				</p><p>
					[<a title=3D"Notation Declaration" id=3D"dt-notdecl" name=3D"dt-notdec=
l">Definition</a>:=20
						<b>Notation declarations</b>
provide a name for the notation, for use in entity and attribute-list decla=
rations
and in attribute specifications, and an external identifier for the notation
which may allow an XML processor or its client application to locate a help=
er
application capable of processing data in the given notation.]
				</p>
<h5><a id=3D"d0e5457" name=3D"d0e5457">Notation Declarations</a></h5><table=
 summary=3D"Scrap" class=3D"scrap"><tbody><tr valign=3D"baseline"><td><a id=
=3D"NT-NotationDecl" name=3D"NT-NotationDecl">[82]&nbsp;&nbsp;&nbsp;</a></t=
d><td><code>NotationDecl</code></td><td>&nbsp;&nbsp;&nbsp;::=3D&nbsp;&nbsp;=
&nbsp;</td><td><code>&#x27;&lt;!NOTATION&#x27; <a href=3D"#NT-S">S</a>
							<a href=3D"#NT-Name">Name</a>
							<a href=3D"#NT-S">S</a> (<a href=3D"#NT-ExternalID">ExternalID</a>=
 | <a href=3D"#NT-PublicID">PublicID</a>) <a href=3D"#NT-S">S</a>? &#x27;&g=
t;&#x27;</code></td><td><a href=3D"#UniqueNotationName">[VC: Unique Notatio=
n Name]</a></td></tr></tbody><tbody><tr valign=3D"baseline"><td><a id=3D"NT=
-PublicID" name=3D"NT-PublicID">[83]&nbsp;&nbsp;&nbsp;</a></td><td><code>Pu=
blicID</code></td><td>&nbsp;&nbsp;&nbsp;::=3D&nbsp;&nbsp;&nbsp;</td><td><co=
de>&#x27;PUBLIC&#x27; <a href=3D"#NT-S">S</a>
							<a href=3D"#NT-PubidLiteral">PubidLiteral</a>
						</code></td></tr></tbody></table><div class=3D"constraint"><p class=
=3D"prefix"><a id=3D"UniqueNotationName" name=3D"UniqueNotationName"><b>Val=
idity constraint: Unique Notation Name</b></a></p><p><a id=3D"UniqueNotatio=
nName" name=3D"UniqueNotationName">A given </a><a href=3D"#NT-Name">Name</a>
						<em title=3D"Keyword in RFC 2119 context" class=3D"rfc2119">MUST NOT<=
/em> be declared in more than one notation declaration.</p></div><p>XML pro=
cessors <em title=3D"Keyword in RFC 2119 context" class=3D"rfc2119">MUST</e=
m> provide applications with the name and external identifier(s)
of any notation declared and referred to in an attribute value, attribute
definition, or entity declaration. They <em title=3D"Keyword in RFC 2119 co=
ntext" class=3D"rfc2119">MAY</em> additionally resolve the external
identifier into the <a href=3D"#dt-sysid" title=3D"System Identifier">syste=
m identifier</a>, file
name, or other information needed to allow the application to call a proces=
sor
for data in the notation described. (It is not an error, however, for XML
documents to declare and refer to notations for which notation-specific app=
lications
are not available on the system where the XML processor or application is
running.)</p></div><div class=3D"div2">
<h3><a id=3D"sec-doc-entity" name=3D"sec-doc-entity">4.8 Document Entity</a=
></h3><p>
<a id=3D"sec-doc-entity" name=3D"sec-doc-entity">					[</a><a title=3D"Docu=
ment Entity" id=3D"dt-docent" name=3D"dt-docent">Definition</a>: The <b>doc=
ument entity</b>
serves as the root of the entity tree and a starting-point for an <a href=
=3D"#dt-xml-proc" title=3D"XML Processor">XML processor</a>.] This specific=
ation does
not specify how the document entity is to be located by an XML processor;
unlike other entities, the document entity has no name and might well appear
on a processor input stream without any identification at all.</p></div></d=
iv><div class=3D"div1">
<h2><a id=3D"sec-conformance" name=3D"sec-conformance">5 Conformance</a></h=
2><div class=3D"div2">
<h3><a id=3D"proc-types" name=3D"proc-types">5.1 Validating and Non-Validat=
ing Processors</a></h3><p><a id=3D"proc-types" name=3D"proc-types">Conformi=
ng </a><a href=3D"#dt-xml-proc" title=3D"XML Processor">XML processors</a>=
 fall into
two classes: validating and non-validating.</p><p>Validating and non-valida=
ting processors alike <em title=3D"Keyword in RFC 2119 context" class=3D"rf=
c2119">MUST</em> report violations of
this specification&#x27;s well-formedness constraints in the content of the=
 <a href=3D"#dt-docent" title=3D"Document Entity">document entity</a> and=
 any other <a href=3D"#dt-parsedent" title=3D"Text Entity">parsed
entities</a> that they read.</p><p>
					[<a title=3D"Validating Processor" id=3D"dt-validating" name=3D"dt-val=
idating">Definition</a>:=20
						<b>Validating
processors</b>
						<em title=3D"Keyword in RFC 2119 context" class=3D"rfc2119">MUST</em>,
at user option, report violations of the constraints expressed by
the declarations in the <a href=3D"#dt-doctype" title=3D"Document Type Decl=
aration">DTD</a>, and failures
to fulfill the validity constraints given in this specification.]
To accomplish this, validating XML processors <em title=3D"Keyword in RFC=
 2119 context" class=3D"rfc2119">MUST</em> read and process the entire
DTD and all external parsed entities referenced in the document.</p><p>Non-=
validating processors are <em title=3D"Keyword in RFC 2119 context" class=
=3D"rfc2119">REQUIRED</em> to check only the <a href=3D"#dt-docent" title=
=3D"Document Entity">document
entity</a>, including the entire internal DTD subset, for well-formedness.=
 [<a title=3D"Process Declarations" id=3D"dt-use-mdecl" name=3D"dt-use-mdec=
l">Definition</a>:  While they are not required
to check the document for validity, they are <em title=3D"Keyword in RFC 21=
19 context" class=3D"rfc2119">REQUIRED</em> to <b>process</b>
all the declarations they read in the internal DTD subset and in any parame=
ter
entity that they read, up to the first reference to a parameter entity that
they do <em>not</em> read; that is to say, they <em title=3D"Keyword in RFC=
 2119 context" class=3D"rfc2119">MUST</em> use the information
in those declarations to <a href=3D"#AVNormalize"><cite>normalize</cite></a>
attribute values, <a href=3D"#included"><cite>include</cite></a> the replac=
ement
text of internal entities, and supply <a href=3D"#sec-attr-defaults"><cite>=
default
attribute values</cite></a>.] Except when <code>standalone=3D&quot;yes&quot=
;</code>, they
<em title=3D"Keyword in RFC 2119 context" class=3D"rfc2119">MUST NOT</em>
					<a href=3D"#dt-use-mdecl" title=3D"Process Declarations">process</a>
					<a href=3D"#dt-entdecl" title=3D"entity declaration">entity
declarations</a> or <a href=3D"#dt-attdecl" title=3D"Attribute-List Declara=
tion">attribute-list declarations</a>
encountered after a reference to a parameter entity that is not read, since
the entity may have contained overriding declarations; when <code>standalon=
e=3D&quot;yes&quot;</code>, processors <em title=3D"Keyword in RFC 2119 con=
text" class=3D"rfc2119">MUST</em>
process these declarations.</p><p>Note that when processing invalid documen=
ts with a non-validating
processor the application may not be presented with consistent
information.  For example, several requirements for uniqueness
within the document may not be met, including more than one element
with the same id, duplicate declarations of elements or notations
with the same name, etc.  In these cases the behavior of the parser
with respect to reporting such information to the application is
undefined.</p></div><div class=3D"div2">
<h3><a id=3D"safe-behavior" name=3D"safe-behavior">5.2 Using XML Processors=
</a></h3><p><a id=3D"safe-behavior" name=3D"safe-behavior">The behavior of=
 a validating XML processor is highly predictable; it must
read every piece of a document and report all well-formedness and validity
violations. Less is required of a non-validating processor; it need not read
any part of the document other than the document entity. This has two effec=
ts
that may be important to users of XML processors:</a></p><ul><li><p><a id=
=3D"safe-behavior" name=3D"safe-behavior">Certain well-formedness errors,=
 specifically those that require reading
external entities, may fail to be detected by a non-validating processor.=
 Examples
include the constraints entitled </a><a href=3D"#wf-entdeclared"><cite>Enti=
ty Declared</cite></a>, <a href=3D"#textent"><cite>Parsed Entity</cite></a>=
, and <a href=3D"#norecursion"><cite>No
Recursion</cite></a>, as well as some of the cases described as <a href=3D"=
#forbidden"><cite>forbidden</cite></a> in <a href=3D"#entproc"><b>4.4 XML=
 Processor Treatment of Entities and References</b></a>.</p></li><li><p>The=
 information passed from the processor to the application may
vary, depending on whether the processor reads parameter and external entit=
ies.
For example, a non-validating processor may fail to <a href=3D"#AVNormalize=
"><cite>normalize</cite></a>
attribute values, <a href=3D"#included"><cite>include</cite></a> the replac=
ement
text of internal entities, or supply <a href=3D"#sec-attr-defaults"><cite>d=
efault
attribute values</cite></a>, where doing so depends on having read declarat=
ions
in external or parameter entities<span>, or in the internal subset after an=
 unread=20
parameter entity reference</span>.</p></li></ul><p>For maximum reliability=
 in interoperating between different XML processors,
applications which use non-validating processors <em title=3D"Keyword in RF=
C 2119 context" class=3D"rfc2119">SHOULD NOT</em> rely on any behaviors
not required of such processors. Applications which require DTD facilities=
 not related to validation (such
as the declaration of default attributes and internal entities that are or=
 may be specified in
external entities) <em title=3D"Keyword in RFC 2119 context" class=3D"rfc21=
19">SHOULD</em> use validating XML processors.</p></div></div><div class=3D=
"div1">
<h2><a id=3D"sec-notation" name=3D"sec-notation">6 Notation</a></h2><p><a=
 id=3D"sec-notation" name=3D"sec-notation">The formal grammar of XML is giv=
en in this specification using a simple
Extended Backus-Naur Form (EBNF) notation. Each rule in the grammar defines
one symbol, in the form</a></p><div class=3D"exampleInner"><pre><a id=3D"se=
c-notation" name=3D"sec-notation">symbol ::=3D expression</a></pre></div><p=
><a id=3D"sec-notation" name=3D"sec-notation">Symbols are written with an=
 initial capital letter if they are the
start symbol of a regular language, otherwise with an initial lowercase let=
ter.
Literal strings are quoted.</a></p><p><a id=3D"sec-notation" name=3D"sec-no=
tation">Within the expression on the right-hand side of a rule, the followi=
ng expressions
are used to match strings of one or more characters: </a></p><dl><dt class=
=3D"label">
<a id=3D"sec-notation" name=3D"sec-notation">							<code>#xN</code>
						</a></dt><dd><p><a id=3D"sec-notation" name=3D"sec-notation">where <c=
ode>N</code> is a hexadecimal integer, the expression matches the character
whose number
(code point) in ISO/IEC 10646 is <code>N</code>. The number of leading zero=
s in the <code>#xN</code>
form is insignificant.</a></p></dd><dt class=3D"label">
<a id=3D"sec-notation" name=3D"sec-notation">							<code>[a-zA-Z]</code>,=
 <code>[#xN-#xN]</code>
						</a></dt><dd><p><a id=3D"sec-notation" name=3D"sec-notation">matches=
 any </a><a href=3D"#NT-Char">Char</a> with a value in the range(s) indicat=
ed (inclusive).</p></dd><dt class=3D"label">
							<code>[abc]</code>, <code>[#xN#xN#xN]</code>
						</dt><dd><p>matches any <a href=3D"#NT-Char">Char</a> with a value am=
ong the characters
enumerated. Enumerations and ranges can be mixed in one set of brackets.</p=
></dd><dt class=3D"label">
							<code>[^a-z]</code>, <code>[^#xN-#xN]</code>
						</dt><dd><p>matches any <a href=3D"#NT-Char">Char</a> with a value <e=
m>outside</em> the range
indicated.</p></dd><dt class=3D"label">
							<code>[^abc]</code>, <code>[^#xN#xN#xN]</code>
						</dt><dd><p>matches any <a href=3D"#NT-Char">Char</a> with a value no=
t among the characters given. Enumerations
and ranges of forbidden values can be mixed in one set of brackets.</p></dd=
><dt class=3D"label">
							<code>&quot;string&quot;</code>
						</dt><dd><p>matches a literal string <a href=3D"#dt-match" title=3D"m=
atch">matching</a> that
given inside the double quotes.</p></dd><dt class=3D"label">
							<code>&#x27;string&#x27;</code>
						</dt><dd><p>matches a literal string <a href=3D"#dt-match" title=3D"m=
atch">matching</a> that
given inside the single quotes.</p></dd></dl><p> These symbols may be combi=
ned to match more complex patterns as follows,
where <code>A</code> and <code>B</code> represent simple expressions: </p><=
dl><dt class=3D"label">(<code>expression</code>)</dt><dd><p>
								<code>expression</code> is treated as a unit and may be combined as=
 described
in this list.</p></dd><dt class=3D"label">
							<code>A?</code>
						</dt><dd><p>matches <code>A</code> or nothing; optional <code>A</code=
>.</p></dd><dt class=3D"label">
							<code>A B</code>
						</dt><dd><p>matches <code>A</code> followed by <code>B</code>. This
operator has higher precedence than alternation; thus <code>A B | C D</code>
is identical to <code>(A B) | (C D)</code>.</p></dd><dt class=3D"label">
							<code>A | B</code>
						</dt><dd><p>matches <code>A</code> or <code>B</code>.</p></dd><dt cla=
ss=3D"label">
							<code>A - B</code>
						</dt><dd><p>matches any string that matches <code>A</code> but does=
 not match <code>B</code>.</p></dd><dt class=3D"label">
							<code>A+</code>
						</dt><dd><p>matches one or more occurrences of <code>A</code>. Concat=
enation
has higher precedence than alternation; thus <code>A+ | B+</code> is identi=
cal
to <code>(A+) | (B+)</code>.</p></dd><dt class=3D"label">
							<code>A*</code>
						</dt><dd><p>matches zero or more occurrences of <code>A</code>. Conca=
tenation
has higher precedence than alternation; thus <code>A* | B*</code> is identi=
cal
to <code>(A*) | (B*)</code>.</p></dd></dl><p> Other notations used in the=
 productions are: </p><dl><dt class=3D"label">
							<code>/* ... */</code>
						</dt><dd><p>comment.</p></dd><dt class=3D"label">
							<code>[ wfc: ... ]</code>
						</dt><dd><p>well-formedness constraint; this identifies by name a con=
straint on <a href=3D"#dt-wellformed" title=3D"Well-Formed">well-formed</a>=
 documents associated with a production.</p></dd><dt class=3D"label">
							<code>[ vc: ... ]</code>
						</dt><dd><p>validity constraint; this identifies by name a constraint=
 on <a href=3D"#dt-valid" title=3D"Validity">valid</a>
documents associated with a production.</p></dd></dl><p>
			</p></div></div><div class=3D"back"><div class=3D"div1">
<h2><a id=3D"sec-bibliography" name=3D"sec-bibliography">A References</a></=
h2><div class=3D"div2">
<h3><a id=3D"sec-existing-stds" name=3D"sec-existing-stds">A.1 Normative Re=
ferences</a></h3><dl><dt class=3D"label"><a id=3D"IANA" name=3D"IANA">IANA-=
CHARSETS</a></dt><dd><a id=3D"IANA" name=3D"IANA">(Internet
Assigned Numbers Authority) </a><a href=3D"http://www.iana.org/assignments/=
character-sets"><cite>Official Names for Character Sets</cite></a>,
ed. Keld Simonsen et al.  (See http://www.iana.org/assignments/character-se=
ts.)</dd><dt class=3D"label"><a id=3D"rfc2119" name=3D"rfc2119">IETF RFC 21=
19</a></dt><dd><a id=3D"rfc2119" name=3D"rfc2119">IETF
(Internet Engineering Task Force). </a><a href=3D"http://www.ietf.org/rfc/r=
fc2119.txt"><cite>RFC 2119: Key words for use in RFCs to Indicate Requireme=
nt Levels</cite></a>.
Scott Bradner, 1997.  (See http://www.ietf.org/rfc/rfc2119.txt.)</dd><dt cl=
ass=3D"label"><a name=3D"RFC1766">IETF BCP 47</a></dt><dd><a name=3D"RFC176=
6">IETF
						(Internet Engineering Task Force). </a><a href=3D"ftp://ftp.isi.edu/i=
n-notes/bcp/bcp47.txt"><cite>BCP 47, consisting of RFC 4646: Tags for Ident=
ifying Languages, and RFC 4647: Matching of Language Tags</cite></a>,
						A. Phillips, M. Davis. 2006.  (See ftp://ftp.isi.edu/in-notes/bcp/bcp=
47.txt.)</dd><dt class=3D"label"><a id=3D"rfc3986" name=3D"rfc3986">IETF RF=
C 3986</a></dt><dd><a id=3D"rfc3986" name=3D"rfc3986">IETF (Internet Engine=
ering Task Force). </a><a href=3D"http://www.ietf.org/rfc/rfc3986.txt"><cit=
e>RFC 3986: Uniform Resource Identifier (URI): Generic Syntax</cite></a>.=
 T. Berners-Lee, R. Fielding, L. Masinter. 2005.  (See http://www.ietf.org/=
rfc/rfc3986.txt.)</dd><dt class=3D"label"><a id=3D"ISO10646" name=3D"ISO106=
46">ISO/IEC 10646</a></dt><dd><a id=3D"ISO10646" name=3D"ISO10646">ISO (Int=
ernational
Organization for Standardization). <cite>ISO/IEC 10646-1:2000. Information
technology =E2=80=94 Universal Multiple-Octet Coded Character Set (UCS) =E2=
=80=94
Part 1: Architecture and Basic Multilingual Plane</cite> and <cite>ISO/IEC=
 10646-2:2001.
Information technology =E2=80=94 Universal Multiple-Octet Coded Character=
 Set (UCS) =E2=80=94 Part 2:
Supplementary Planes</cite>, as, from time to time, amended, replaced by a=
 new edition or
expanded by the addition of new parts. [Geneva]: International Organization=
 for Standardization.
(See </a><a href=3D"http://www.iso.org/iso/home.htm">http://www.iso.org/iso=
/home.htm</a> for the latest version.)</dd><dt class=3D"label"><a id=3D"ISO=
10646-2000" name=3D"ISO10646-2000">ISO/IEC 10646:2000</a></dt><dd><a id=3D"=
ISO10646-2000" name=3D"ISO10646-2000">ISO (International
Organization for Standardization). <cite>ISO/IEC 10646-1:2000. Information
technology =E2=80=94 Universal Multiple-Octet Coded Character Set (UCS) =E2=
=80=94
Part 1: Architecture and Basic Multilingual Plane.</cite> [Geneva]: Interna=
tional
Organization for Standardization, 2000.</a></dd><dt class=3D"label"><a id=
=3D"Unicode" name=3D"Unicode">Unicode</a></dt><dd><a id=3D"Unicode" name=3D=
"Unicode">The Unicode Consortium. <em>The Unicode
Standard, Version <span>5.0.0,</span></em> <span>defined by: The Unicode St=
andard, Version 5.0 (Boston, MA,
Addison-Wesley, 2007. ISBN 0-321-48091-0)</span>.</a></dd><dt class=3D"labe=
l"><a id=3D"unipart15" name=3D"unipart15">UnicodeNormal</a></dt><dd><a id=
=3D"unipart15" name=3D"unipart15">The Unicode
Consortium. </a><a href=3D"http://unicode.org/reports/tr15/"><cite>Unicode=
 normalization forms</cite></a>.  Mark Davis and
Martin Durst.  2008.  (See http://unicode.org/reports/tr15/.)</dd></dl></di=
v><div class=3D"div2">
<h3><a id=3D"null" name=3D"null">A.2 Other References</a></h3><dl><dt class=
=3D"label"><a id=3D"Aho" name=3D"Aho">Aho/Ullman</a></dt><dd><a id=3D"Aho"=
 name=3D"Aho">Aho, Alfred V., Ravi Sethi, and Jeffrey D.
Ullman. <cite>Compilers: Principles, Techniques, and Tools</cite>.
Reading: Addison-Wesley, 1986, rpt. corr. 1988.</a></dd><dt class=3D"label"=
><a id=3D"ABK" name=3D"ABK">Br=C3=BCggemann-Klein</a></dt><dd><a id=3D"ABK"=
 name=3D"ABK">Br=C3=BCggemann-Klein,
Anne. </a><a href=3D"ftp://ftp.informatik.uni-freiburg.de/documents/papers/=
brueggem/habil.ps"><cite>Formal Models in Document Processing</cite></a>.=
 Habilitationsschrift. Faculty
of Mathematics at the University of Freiburg, 1993.  (See ftp://ftp.informa=
tik.uni-freiburg.de/documents/papers/brueggem/habil.ps.)</dd><dt class=3D"l=
abel"><a id=3D"ABKDW" name=3D"ABKDW">Br=C3=BCggemann-Klein and Wood</a></dt=
><dd><a id=3D"ABKDW" name=3D"ABKDW">Br=C3=BCggemann-Klein,
Anne, and Derick Wood. <cite>Deterministic Regular Languages</cite>.
Universit=C3=A4t Freiburg, Institut f=C3=BCr Informatik, Bericht 38, Oktobe=
r 1991. Extended
abstract in A. Finkel, M. Jantzen, Hrsg., STACS 1992, S. 173-184. Springer-=
Verlag,
Berlin 1992. Lecture Notes in Computer Science 577. Full version titled <ci=
te>One-Unambiguous
Regular Languages</cite> in Information and Computation 140 (2): 229-253,
February 1998.</a></dd><dt class=3D"label"><a id=3D"Clark" name=3D"Clark">C=
lark</a></dt><dd><a id=3D"Clark" name=3D"Clark">James Clark.
</a><a href=3D"http://www.w3.org/TR/NOTE-sgml-xml-971215"><cite>Comparison=
 of SGML and XML</cite></a>.  (See http://www.w3.org/TR/NOTE-sgml-xml-97121=
5.)</dd><dt class=3D"label"><a name=3D"IANA-LANGCODES">IANA-LANGCODES</a></=
dt><dd><a name=3D"IANA-LANGCODES">(Internet
Assigned Numbers Authority) </a><a href=3D"http://www.iana.org/assignments/=
language-subtag-registry"><cite>Registry of Language Tags</cite></a>  (See=
 http://www.iana.org/assignments/language-subtag-registry.)</dd><dt class=
=3D"label"><a id=3D"RFC2141" name=3D"RFC2141">IETF RFC 2141</a></dt><dd><a=
 id=3D"RFC2141" name=3D"RFC2141">IETF
(Internet Engineering Task Force). </a><a href=3D"http://www.ietf.org/rfc/r=
fc2141.txt"><cite>RFC 2141: URN Syntax</cite></a>, ed.
R. Moats. 1997.   (See http://www.ietf.org/rfc/rfc2141.txt.)</dd><dt class=
=3D"label"><a id=3D"rfc2376" name=3D"rfc2376">IETF RFC 3023</a></dt><dd><a=
 id=3D"rfc2376" name=3D"rfc2376">IETF
(Internet Engineering Task Force). </a><a href=3D"http://www.ietf.org/rfc/r=
fc3023.txt"><cite>RFC 3023: XML Media Types</cite></a>.
eds. M. Murata, S. St.Laurent, D. Kohn. 2001.  (See http://www.ietf.org/rfc=
/rfc3023.txt.)</dd><dt class=3D"label"><a id=3D"rfc2781" name=3D"rfc2781">I=
ETF RFC 2781</a></dt><dd><a id=3D"rfc2781" name=3D"rfc2781">IETF
(Internet Engineering Task Force). </a><a href=3D"http://www.ietf.org/rfc/r=
fc2781.txt"><cite>RFC 2781: UTF-16, an encoding
of ISO 10646</cite></a>, ed. P. Hoffman, F. Yergeau. 2000.  (See http://www=
.ietf.org/rfc/rfc2781.txt.)</dd><dt class=3D"label"><a id=3D"ISO639" name=
=3D"ISO639">ISO 639</a></dt><dd><a id=3D"ISO639" name=3D"ISO639">(Internati=
onal Organization for Standardization).
<cite>ISO 639:1988 (E).
Code for the representation of names of languages.</cite> [Geneva]: Interna=
tional
Organization for Standardization, 1988.</a></dd><dt class=3D"label"><a id=
=3D"ISO3166" name=3D"ISO3166">ISO 3166</a></dt><dd><a id=3D"ISO3166" name=
=3D"ISO3166">(International Organization for Standardization).
<cite>ISO 3166-1:1997
(E). Codes for the representation of names of countries and their subdivisi=
ons =E2=80=94
Part 1: Country codes</cite> [Geneva]: International Organization for
Standardization, 1997.</a></dd><dt class=3D"label"><a id=3D"ISO8879" name=
=3D"ISO8879">ISO 8879</a></dt><dd><a id=3D"ISO8879" name=3D"ISO8879">ISO (I=
nternational Organization for Standardization). <cite>ISO
8879:1986(E). Information processing =E2=80=94 Text and Office Systems =E2=
=80=94
Standard Generalized Markup Language (SGML).</cite> First edition =E2=80=94
1986-10-15. [Geneva]: International Organization for Standardization, 1986.=
 </a></dd><dt class=3D"label"><a id=3D"ISO10744" name=3D"ISO10744">ISO/IEC=
 10744</a></dt><dd><a id=3D"ISO10744" name=3D"ISO10744">ISO (International=
 Organization for
Standardization). <cite>ISO/IEC 10744-1992 (E). Information technology =E2=
=80=94
Hypermedia/Time-based Structuring Language (HyTime). </cite> [Geneva]:
International Organization for Standardization, 1992. <em>Extended Faciliti=
es
Annexe.</em> [Geneva]: International Organization for Standardization, 1996=
. </a></dd><dt class=3D"label"><a id=3D"websgml" name=3D"websgml">WEBSGML</=
a></dt><dd><a id=3D"websgml" name=3D"websgml">ISO
(International Organization for Standardization). </a><a href=3D"http://www=
.sgmlsource.com/8879/n0029.htm"><cite>ISO 8879:1986
TC2. Information technology =E2=80=94 Document Description and Processing=
 Languages</cite></a>.
[Geneva]: International Organization for Standardization, 1998.  (See http:=
//www.sgmlsource.com/8879/n0029.htm.)</dd><dt class=3D"label"><a id=3D"xml-=
names" name=3D"xml-names">XML Names</a></dt><dd><a id=3D"xml-names" name=3D=
"xml-names">Tim Bray,
Dave Hollander, and Andrew Layman, editors. </a><a href=3D"http://www.w3.or=
g/TR/xml-names/"><cite>Namespaces in XML</cite></a>.
Textuality, Hewlett-Packard, and Microsoft. World Wide Web Consortium, 1999=
.  (See http://www.w3.org/TR/xml-names/.)</dd></dl></div></div><div class=
=3D"div1">
<h2><a id=3D"CharClasses" name=3D"CharClasses">B Character Classes</a></h2>=
<p><a id=3D"CharClasses" name=3D"CharClasses">Because of changes to product=
ions=20
				</a><a href=3D"#NT-NameStartChar">[4]</a> and <a href=3D"#NT-Name">[5]<=
/a>, the productions in
				this Appendix are now orphaned and not used anymore in determining
				name characters.  This Appendix may be removed in a future edition of=20
				this specification; other specifications that wish to refer to the prod=
uctions herein should
				do so by means of a reference to the relevant production(s) in the
				<a href=3D"http://www.w3.org/TR/2006/REC-xml-20060816/">Fourth Edition<=
/a> of this specification. </p><p>Following the characteristics defined in=
 the Unicode standard, characters
are classed as base characters (among others, these contain the alphabetic
characters of the Latin alphabet), ideographic characters, and combining ch=
aracters (among
others, this class contains most diacritics). Digits and extenders are also
distinguished.</p>
<h5><a id=3D"CHARACTERS" name=3D"CHARACTERS">Characters</a></h5><table summ=
ary=3D"Scrap" class=3D"scrap"><tbody><tr valign=3D"baseline"><td><a id=3D"N=
T-Letter" name=3D"NT-Letter">[84]&nbsp;&nbsp;&nbsp;</a></td><td><code>Lette=
r</code></td><td>&nbsp;&nbsp;&nbsp;::=3D&nbsp;&nbsp;&nbsp;</td><td><code>
							<a href=3D"#NT-BaseChar">BaseChar</a> | <a href=3D"#NT-Ideographic">=
Ideographic</a>
						</code></td></tr><tr valign=3D"baseline"><td><a id=3D"NT-BaseChar" na=
me=3D"NT-BaseChar">[85]&nbsp;&nbsp;&nbsp;</a></td><td><code>BaseChar</code>=
</td><td>&nbsp;&nbsp;&nbsp;::=3D&nbsp;&nbsp;&nbsp;</td><td><code>[#x0041-#x=
005A] |&nbsp;[#x0061-#x007A] |&nbsp;[#x00C0-#x00D6]
|&nbsp;[#x00D8-#x00F6] |&nbsp;[#x00F8-#x00FF] |&nbsp;[#x0100-#x0131] |&nbsp=
;[#x0134-#x013E]
|&nbsp;[#x0141-#x0148] |&nbsp;[#x014A-#x017E] |&nbsp;[#x0180-#x01C3] |&nbsp=
;[#x01CD-#x01F0]
|&nbsp;[#x01F4-#x01F5] |&nbsp;[#x01FA-#x0217] |&nbsp;[#x0250-#x02A8] |&nbsp=
;[#x02BB-#x02C1]
|&nbsp;#x0386 |&nbsp;[#x0388-#x038A] |&nbsp;#x038C |&nbsp;[#x038E-#x03A1]
|&nbsp;[#x03A3-#x03CE] |&nbsp;[#x03D0-#x03D6] |&nbsp;#x03DA |&nbsp;#x03DC
|&nbsp;#x03DE |&nbsp;#x03E0 |&nbsp;[#x03E2-#x03F3] |&nbsp;[#x0401-#x040C]
|&nbsp;[#x040E-#x044F] |&nbsp;[#x0451-#x045C] |&nbsp;[#x045E-#x0481] |&nbsp=
;[#x0490-#x04C4]
|&nbsp;[#x04C7-#x04C8] |&nbsp;[#x04CB-#x04CC] |&nbsp;[#x04D0-#x04EB] |&nbsp=
;[#x04EE-#x04F5]
|&nbsp;[#x04F8-#x04F9] |&nbsp;[#x0531-#x0556] |&nbsp;#x0559 |&nbsp;[#x0561-=
#x0586]
|&nbsp;[#x05D0-#x05EA] |&nbsp;[#x05F0-#x05F2] |&nbsp;[#x0621-#x063A] |&nbsp=
;[#x0641-#x064A]
|&nbsp;[#x0671-#x06B7] |&nbsp;[#x06BA-#x06BE] |&nbsp;[#x06C0-#x06CE] |&nbsp=
;[#x06D0-#x06D3]
|&nbsp;#x06D5 |&nbsp;[#x06E5-#x06E6] |&nbsp;[#x0905-#x0939] |&nbsp;#x093D
|&nbsp;[#x0958-#x0961] |&nbsp;[#x0985-#x098C] |&nbsp;[#x098F-#x0990] |&nbsp=
;[#x0993-#x09A8]
|&nbsp;[#x09AA-#x09B0] |&nbsp;#x09B2 |&nbsp;[#x09B6-#x09B9] |&nbsp;[#x09DC-=
#x09DD]
|&nbsp;[#x09DF-#x09E1] |&nbsp;[#x09F0-#x09F1] |&nbsp;[#x0A05-#x0A0A] |&nbsp=
;[#x0A0F-#x0A10]
|&nbsp;[#x0A13-#x0A28] |&nbsp;[#x0A2A-#x0A30] |&nbsp;[#x0A32-#x0A33] |&nbsp=
;[#x0A35-#x0A36]
|&nbsp;[#x0A38-#x0A39] |&nbsp;[#x0A59-#x0A5C] |&nbsp;#x0A5E |&nbsp;[#x0A72-=
#x0A74]
|&nbsp;[#x0A85-#x0A8B] |&nbsp;#x0A8D |&nbsp;[#x0A8F-#x0A91] |&nbsp;[#x0A93-=
#x0AA8]
|&nbsp;[#x0AAA-#x0AB0] |&nbsp;[#x0AB2-#x0AB3] |&nbsp;[#x0AB5-#x0AB9] |&nbsp=
;#x0ABD
|&nbsp;#x0AE0 |&nbsp;[#x0B05-#x0B0C] |&nbsp;[#x0B0F-#x0B10] |&nbsp;[#x0B13-=
#x0B28]
|&nbsp;[#x0B2A-#x0B30] |&nbsp;[#x0B32-#x0B33] |&nbsp;[#x0B36-#x0B39] |&nbsp=
;#x0B3D
|&nbsp;[#x0B5C-#x0B5D] |&nbsp;[#x0B5F-#x0B61] |&nbsp;[#x0B85-#x0B8A] |&nbsp=
;[#x0B8E-#x0B90]
|&nbsp;[#x0B92-#x0B95] |&nbsp;[#x0B99-#x0B9A] |&nbsp;#x0B9C |&nbsp;[#x0B9E-=
#x0B9F]
|&nbsp;[#x0BA3-#x0BA4] |&nbsp;[#x0BA8-#x0BAA] |&nbsp;[#x0BAE-#x0BB5] |&nbsp=
;[#x0BB7-#x0BB9]
|&nbsp;[#x0C05-#x0C0C] |&nbsp;[#x0C0E-#x0C10] |&nbsp;[#x0C12-#x0C28] |&nbsp=
;[#x0C2A-#x0C33]
|&nbsp;[#x0C35-#x0C39] |&nbsp;[#x0C60-#x0C61] |&nbsp;[#x0C85-#x0C8C] |&nbsp=
;[#x0C8E-#x0C90]
|&nbsp;[#x0C92-#x0CA8] |&nbsp;[#x0CAA-#x0CB3] |&nbsp;[#x0CB5-#x0CB9] |&nbsp=
;#x0CDE
|&nbsp;[#x0CE0-#x0CE1] |&nbsp;[#x0D05-#x0D0C] |&nbsp;[#x0D0E-#x0D10] |&nbsp=
;[#x0D12-#x0D28]
|&nbsp;[#x0D2A-#x0D39] |&nbsp;[#x0D60-#x0D61] |&nbsp;[#x0E01-#x0E2E] |&nbsp=
;#x0E30
|&nbsp;[#x0E32-#x0E33] |&nbsp;[#x0E40-#x0E45] |&nbsp;[#x0E81-#x0E82] |&nbsp=
;#x0E84
|&nbsp;[#x0E87-#x0E88] |&nbsp;#x0E8A |&nbsp;#x0E8D |&nbsp;[#x0E94-#x0E97]
|&nbsp;[#x0E99-#x0E9F] |&nbsp;[#x0EA1-#x0EA3] |&nbsp;#x0EA5 |&nbsp;#x0EA7
|&nbsp;[#x0EAA-#x0EAB] |&nbsp;[#x0EAD-#x0EAE] |&nbsp;#x0EB0 |&nbsp;[#x0EB2-=
#x0EB3]
|&nbsp;#x0EBD |&nbsp;[#x0EC0-#x0EC4] |&nbsp;[#x0F40-#x0F47] |&nbsp;[#x0F49-=
#x0F69]
|&nbsp;[#x10A0-#x10C5] |&nbsp;[#x10D0-#x10F6] |&nbsp;#x1100 |&nbsp;[#x1102-=
#x1103]
|&nbsp;[#x1105-#x1107] |&nbsp;#x1109 |&nbsp;[#x110B-#x110C] |&nbsp;[#x110E-=
#x1112]
|&nbsp;#x113C |&nbsp;#x113E |&nbsp;#x1140 |&nbsp;#x114C |&nbsp;#x114E |&nbs=
p;#x1150
|&nbsp;[#x1154-#x1155] |&nbsp;#x1159 |&nbsp;[#x115F-#x1161] |&nbsp;#x1163
|&nbsp;#x1165 |&nbsp;#x1167 |&nbsp;#x1169 |&nbsp;[#x116D-#x116E] |&nbsp;[#x=
1172-#x1173]
|&nbsp;#x1175 |&nbsp;#x119E |&nbsp;#x11A8 |&nbsp;#x11AB |&nbsp;[#x11AE-#x11=
AF]
|&nbsp;[#x11B7-#x11B8] |&nbsp;#x11BA |&nbsp;[#x11BC-#x11C2] |&nbsp;#x11EB
|&nbsp;#x11F0 |&nbsp;#x11F9 |&nbsp;[#x1E00-#x1E9B] |&nbsp;[#x1EA0-#x1EF9]
|&nbsp;[#x1F00-#x1F15] |&nbsp;[#x1F18-#x1F1D] |&nbsp;[#x1F20-#x1F45] |&nbsp=
;[#x1F48-#x1F4D]
|&nbsp;[#x1F50-#x1F57] |&nbsp;#x1F59 |&nbsp;#x1F5B |&nbsp;#x1F5D |&nbsp;[#x=
1F5F-#x1F7D]
|&nbsp;[#x1F80-#x1FB4] |&nbsp;[#x1FB6-#x1FBC] |&nbsp;#x1FBE |&nbsp;[#x1FC2-=
#x1FC4]
|&nbsp;[#x1FC6-#x1FCC] |&nbsp;[#x1FD0-#x1FD3] |&nbsp;[#x1FD6-#x1FDB] |&nbsp=
;[#x1FE0-#x1FEC]
|&nbsp;[#x1FF2-#x1FF4] |&nbsp;[#x1FF6-#x1FFC] |&nbsp;#x2126 |&nbsp;[#x212A-=
#x212B]
|&nbsp;#x212E |&nbsp;[#x2180-#x2182] |&nbsp;[#x3041-#x3094] |&nbsp;[#x30A1-=
#x30FA]
|&nbsp;[#x3105-#x312C] |&nbsp;[#xAC00-#xD7A3] </code></td></tr><tr valign=
=3D"baseline"><td><a id=3D"NT-Ideographic" name=3D"NT-Ideographic">[86]&nbs=
p;&nbsp;&nbsp;</a></td><td><code>Ideographic</code></td><td>&nbsp;&nbsp;&nb=
sp;::=3D&nbsp;&nbsp;&nbsp;</td><td><code>[#x4E00-#x9FA5] |&nbsp;#x3007 |&nb=
sp;[#x3021-#x3029] </code></td></tr><tr valign=3D"baseline"><td><a id=3D"NT=
-CombiningChar" name=3D"NT-CombiningChar">[87]&nbsp;&nbsp;&nbsp;</a></td><t=
d><code>CombiningChar</code></td><td>&nbsp;&nbsp;&nbsp;::=3D&nbsp;&nbsp;&nb=
sp;</td><td><code>[#x0300-#x0345] |&nbsp;[#x0360-#x0361] |&nbsp;[#x0483-#x0=
486]
|&nbsp;[#x0591-#x05A1] |&nbsp;[#x05A3-#x05B9] |&nbsp;[#x05BB-#x05BD] |&nbsp=
;#x05BF
|&nbsp;[#x05C1-#x05C2] |&nbsp;#x05C4 |&nbsp;[#x064B-#x0652] |&nbsp;#x0670
|&nbsp;[#x06D6-#x06DC] |&nbsp;[#x06DD-#x06DF] |&nbsp;[#x06E0-#x06E4] |&nbsp=
;[#x06E7-#x06E8]
|&nbsp;[#x06EA-#x06ED] |&nbsp;[#x0901-#x0903] |&nbsp;#x093C |&nbsp;[#x093E-=
#x094C]
|&nbsp;#x094D |&nbsp;[#x0951-#x0954] |&nbsp;[#x0962-#x0963] |&nbsp;[#x0981-=
#x0983]
|&nbsp;#x09BC |&nbsp;#x09BE |&nbsp;#x09BF |&nbsp;[#x09C0-#x09C4] |&nbsp;[#x=
09C7-#x09C8]
|&nbsp;[#x09CB-#x09CD] |&nbsp;#x09D7 |&nbsp;[#x09E2-#x09E3] |&nbsp;#x0A02
|&nbsp;#x0A3C |&nbsp;#x0A3E |&nbsp;#x0A3F |&nbsp;[#x0A40-#x0A42] |&nbsp;[#x=
0A47-#x0A48]
|&nbsp;[#x0A4B-#x0A4D] |&nbsp;[#x0A70-#x0A71] |&nbsp;[#x0A81-#x0A83] |&nbsp=
;#x0ABC
|&nbsp;[#x0ABE-#x0AC5] |&nbsp;[#x0AC7-#x0AC9] |&nbsp;[#x0ACB-#x0ACD] |&nbsp=
;[#x0B01-#x0B03]
|&nbsp;#x0B3C |&nbsp;[#x0B3E-#x0B43] |&nbsp;[#x0B47-#x0B48] |&nbsp;[#x0B4B-=
#x0B4D]
|&nbsp;[#x0B56-#x0B57] |&nbsp;[#x0B82-#x0B83] |&nbsp;[#x0BBE-#x0BC2] |&nbsp=
;[#x0BC6-#x0BC8]
|&nbsp;[#x0BCA-#x0BCD] |&nbsp;#x0BD7 |&nbsp;[#x0C01-#x0C03] |&nbsp;[#x0C3E-=
#x0C44]
|&nbsp;[#x0C46-#x0C48] |&nbsp;[#x0C4A-#x0C4D] |&nbsp;[#x0C55-#x0C56] |&nbsp=
;[#x0C82-#x0C83]
|&nbsp;[#x0CBE-#x0CC4] |&nbsp;[#x0CC6-#x0CC8] |&nbsp;[#x0CCA-#x0CCD] |&nbsp=
;[#x0CD5-#x0CD6]
|&nbsp;[#x0D02-#x0D03] |&nbsp;[#x0D3E-#x0D43] |&nbsp;[#x0D46-#x0D48] |&nbsp=
;[#x0D4A-#x0D4D]
|&nbsp;#x0D57 |&nbsp;#x0E31 |&nbsp;[#x0E34-#x0E3A] |&nbsp;[#x0E47-#x0E4E]
|&nbsp;#x0EB1 |&nbsp;[#x0EB4-#x0EB9] |&nbsp;[#x0EBB-#x0EBC] |&nbsp;[#x0EC8-=
#x0ECD]
|&nbsp;[#x0F18-#x0F19] |&nbsp;#x0F35 |&nbsp;#x0F37 |&nbsp;#x0F39 |&nbsp;#x0=
F3E
|&nbsp;#x0F3F |&nbsp;[#x0F71-#x0F84] |&nbsp;[#x0F86-#x0F8B] |&nbsp;[#x0F90-=
#x0F95]
|&nbsp;#x0F97 |&nbsp;[#x0F99-#x0FAD] |&nbsp;[#x0FB1-#x0FB7] |&nbsp;#x0FB9
|&nbsp;[#x20D0-#x20DC] |&nbsp;#x20E1 |&nbsp;[#x302A-#x302F] |&nbsp;#x3099
|&nbsp;#x309A </code></td></tr><tr valign=3D"baseline"><td><a id=3D"NT-Digi=
t" name=3D"NT-Digit">[88]&nbsp;&nbsp;&nbsp;</a></td><td><code>Digit</code><=
/td><td>&nbsp;&nbsp;&nbsp;::=3D&nbsp;&nbsp;&nbsp;</td><td><code>[#x0030-#x0=
039] |&nbsp;[#x0660-#x0669] |&nbsp;[#x06F0-#x06F9]
|&nbsp;[#x0966-#x096F] |&nbsp;[#x09E6-#x09EF] |&nbsp;[#x0A66-#x0A6F] |&nbsp=
;[#x0AE6-#x0AEF]
|&nbsp;[#x0B66-#x0B6F] |&nbsp;[#x0BE7-#x0BEF] |&nbsp;[#x0C66-#x0C6F] |&nbsp=
;[#x0CE6-#x0CEF]
|&nbsp;[#x0D66-#x0D6F] |&nbsp;[#x0E50-#x0E59] |&nbsp;[#x0ED0-#x0ED9] |&nbsp=
;[#x0F20-#x0F29] </code></td></tr><tr valign=3D"baseline"><td><a id=3D"NT-E=
xtender" name=3D"NT-Extender">[89]&nbsp;&nbsp;&nbsp;</a></td><td><code>Exte=
nder</code></td><td>&nbsp;&nbsp;&nbsp;::=3D&nbsp;&nbsp;&nbsp;</td><td><code=
>#x00B7 |&nbsp;#x02D0 |&nbsp;#x02D1 |&nbsp;#x0387 |&nbsp;#x0640
|&nbsp;#x0E46 |&nbsp;#x0EC6 |&nbsp;#x3005 |&nbsp;[#x3031-#x3035] |&nbsp;[#x=
309D-#x309E]
|&nbsp;[#x30FC-#x30FE] </code></td></tr></tbody></table><p><a id=3D"CHARACT=
ERS" name=3D"CHARACTERS">The character classes defined here can be derived=
 from the Unicode 2.0
character database as follows:</a></p><ul><li><p><a id=3D"CHARACTERS" name=
=3D"CHARACTERS">Name start characters must have one of the categories Ll,=
 Lu, Lo,
Lt, Nl.</a></p></li><li><p><a id=3D"CHARACTERS" name=3D"CHARACTERS">Name ch=
aracters other than Name-start characters must have one of
the categories Mc, Me, Mn, Lm, or Nd.</a></p></li><li><p><a id=3D"CHARACTER=
S" name=3D"CHARACTERS">Characters in the compatibility area (i.e. with char=
acter code greater
than #xF900 and less than #xFFFE) are not allowed in XML names.</a></p></li=
><li><p><a id=3D"CHARACTERS" name=3D"CHARACTERS">Characters which have a fo=
nt or compatibility decomposition (i.e.
those with a &quot;compatibility formatting tag&quot; in field 5 of the
database -- marked by field 5 beginning with a &quot;&lt;&quot;) are not
allowed.</a></p></li><li><p><a id=3D"CHARACTERS" name=3D"CHARACTERS">The fo=
llowing characters are treated as name-start characters rather
than name characters, because the property file classifies them as Alphabet=
ic:
[#x02BB-#x02C1], #x0559, #x06E5, #x06E6.</a></p></li><li><p><a id=3D"CHARAC=
TERS" name=3D"CHARACTERS">Characters #x20DD-#x20E0 are excluded (in accorda=
nce with Unicode 2.0,
section 5.14).</a></p></li><li><p><a id=3D"CHARACTERS" name=3D"CHARACTERS">=
Character #x00B7 is classified as an extender, because the property
list so identifies it.</a></p></li><li><p><a id=3D"CHARACTERS" name=3D"CHAR=
ACTERS">Character #x0387 is added as a name character, because #x00B7 is
its canonical equivalent.</a></p></li><li><p><a id=3D"CHARACTERS" name=3D"C=
HARACTERS">Characters &#x27;:&#x27; and &#x27;_&#x27; are allowed as name-s=
tart characters.</a></p></li><li><p><a id=3D"CHARACTERS" name=3D"CHARACTERS=
">Characters &#x27;-&#x27; and &#x27;.&#x27; are allowed as name characters=
.</a></p></li></ul></div><div class=3D"div1">
<h2><a id=3D"sec-xml-and-sgml" name=3D"sec-xml-and-sgml">C XML and SGML (No=
n-Normative)</a></h2><p><a id=3D"sec-xml-and-sgml" name=3D"sec-xml-and-sgml=
">XML
is designed to be a subset of SGML, in that every XML document should also
be a conforming SGML document. For a detailed comparison of the additional
restrictions that XML places on documents beyond those of SGML, see </a><a=
 href=3D"#Clark">[Clark]</a>.</p></div><div class=3D"div1">
<h2><a id=3D"sec-entexpand" name=3D"sec-entexpand">D Expansion of Entity an=
d Character References (Non-Normative)</a></h2><p><a id=3D"sec-entexpand"=
 name=3D"sec-entexpand">This appendix contains some examples illustrating=
 the sequence of entity-
and character-reference recognition and expansion, as specified in </a><a=
 href=3D"#entproc"><b>4.4 XML Processor Treatment of Entities and Reference=
s</b></a>.</p><p>If the DTD contains the declaration</p><div class=3D"examp=
leInner"><pre>&lt;!ENTITY example &quot;&lt;p&gt;An ampersand (&amp;#38;#38=
;) may be escaped
numerically (&amp;#38;#38;#38;) or with a general entity
(&amp;amp;amp;).&lt;/p&gt;&quot; &gt;</pre></div><p>then the XML processor=
 will recognize the character references when it
parses the entity declaration, and resolve them before storing the following
string as the value of the entity &quot;
					<code>example</code>
				&quot;:</p><div class=3D"exampleInner"><pre>&lt;p&gt;An ampersand (&amp=
;#38;) may be escaped
numerically (&amp;#38;#38;) or with a general entity
(&amp;amp;amp;).&lt;/p&gt;</pre></div><p>A reference in the document to &qu=
ot;
					<code>&amp;example;</code>
				&quot;
will cause the text to be reparsed, at which time the start- and end-tags
of the <code>p</code> element will be recognized and the three references=
 will
be recognized and expanded, resulting in a <code>p</code> element with the=
 following
content (all data, no delimiters or markup):</p><div class=3D"exampleInner"=
><pre>An ampersand (&amp;) may be escaped
numerically (&amp;#38;) or with a general entity
(&amp;amp;).</pre></div><p>A more complex example will illustrate the rules=
 and their effects fully.
In the following example, the line numbers are solely for reference.</p><di=
v class=3D"exampleInner"><pre>1 &lt;?xml version=3D&#x27;1.0&#x27;?&gt;
2 &lt;!DOCTYPE test [
3 &lt;!ELEMENT test (#PCDATA) &gt;
4 &lt;!ENTITY % xx &#x27;&amp;#37;zz;&#x27;&gt;
5 &lt;!ENTITY % zz &#x27;&amp;#60;!ENTITY tricky &quot;error-prone&quot; &g=
t;&#x27; &gt;
6 %xx;
7 ]&gt;
8 &lt;test&gt;This sample shows a &amp;tricky; method.&lt;/test&gt;</pre></=
div><p>This produces the following:</p><ul><li><p>in line 4, the reference=
 to character 37 is expanded immediately,
and the parameter entity &quot;
							<code>xx</code>
						&quot; is stored in the symbol
table with the value &quot;
							<code>%zz;</code>
						&quot;. Since the replacement
text is not rescanned, the reference to parameter entity &quot;
							<code>zz</code>
						&quot;
is not recognized. (And it would be an error if it were, since &quot;
							<code>zz</code>
						&quot;
is not yet declared.)</p></li><li><p>in line 5, the character reference &qu=
ot;
							<code>&amp;#60;</code>
						&quot;
is expanded immediately and the parameter entity &quot;
							<code>zz</code>
						&quot;
is stored with the replacement text &quot;
							<code>&lt;!ENTITY tricky &quot;error-prone&quot;
&gt;</code>
						&quot;, which is a well-formed entity declaration.</p></li><li><p>in=
 line 6, the reference to &quot;
							<code>xx</code>
						&quot; is recognized,
and the replacement text of &quot;
							<code>xx</code>
						&quot; (namely &quot;
							<code>%zz;</code>
						&quot;)
is parsed. The reference to &quot;
							<code>zz</code>
						&quot; is recognized in
its turn, and its replacement text (&quot;
							<code>&lt;!ENTITY tricky &quot;error-prone&quot;
&gt;</code>
						&quot;) is parsed. The general entity &quot;
							<code>tricky</code>
						&quot;
has now been declared, with the replacement text &quot;
							<code>error-prone</code>
						&quot;.</p></li><li><p>in line 8, the reference to the general entity=
 &quot;
							<code>tricky</code>
						&quot;
is recognized, and it is expanded, so the full content of the <code>test</c=
ode>
element is the self-describing (and ungrammatical) string <em>This sample
shows a error-prone method.</em>
					</p></li></ul><p>In the following example</p><div class=3D"exampleInne=
r"><pre>&lt;!DOCTYPE foo [=20
&lt;!ENTITY x &quot;&amp;lt;&quot;&gt;=20
]&gt;=20
&lt;foo attr=3D&quot;&amp;x;&quot;/&gt;</pre></div><p>the replacement text=
 of x is the four characters &quot;&amp;lt;&quot; because
				references to general entities in entity values are <a href=3D"#bypass"=
><cite>bypassed</cite></a>.
				The replacement text of lt is a character reference to
				the less-than character, for example the five characters &quot;&amp;#60=
;&quot;
				(see <a href=3D"#sec-predefined-ent"><b>4.6 Predefined Entities</b></a>=
).  Since neither of these contains a less-than character
				the result is well-formed.</p><p>If the definition of x had been</p><di=
v class=3D"exampleInner"><pre>&lt;!ENTITY x &quot;&amp;#60;&quot;&gt;</pre>=
</div><p>then the document would not have been well-formed, because the
				replacement text of x would be the single character &quot;&lt;&quot; wh=
ich
				is not permitted in attribute values (see <a href=3D"#CleanAttrVals"><c=
ite>WFC: No &lt; in Attribute Values</cite></a>).</p></div><div class=3D"di=
v1">
<h2><a id=3D"determinism" name=3D"determinism">E Deterministic Content Mode=
ls (Non-Normative)</a></h2><p><a id=3D"determinism" name=3D"determinism">As
noted in </a><a href=3D"#sec-element-content"><b>3.2.1 Element Content</b><=
/a>, it is required that content
models in element type declarations be deterministic. This requirement is=
 <a href=3D"#dt-compat" title=3D"For Compatibility">for compatibility</a>=
 with SGML (which calls deterministic
content models &quot;unambiguous&quot;); XML processors built
using SGML systems may flag non-deterministic content models as errors.</p>=
<p>For example, the content model <code>((b, c) | (b, d))</code> is non-det=
erministic,
because given an initial <code>b</code> the XML processor
cannot know which <code>b</code> in the model is being matched without look=
ing
ahead to see which element follows the <code>b</code>. In this case, the tw=
o references
to <code>b</code> can be collapsed into a single reference, making the mode=
l read <code>(b,
(c | d))</code>. An initial <code>b</code> now clearly matches only a singl=
e name
in the content model. The processor doesn&#x27;t need to look ahead to see=
 what follows; either <code>c</code> or <code>d</code>
would be accepted.</p><p>More formally: a finite state automaton may be con=
structed from the content
model using the standard algorithms, e.g. algorithm 3.5 in section 3.9 of
Aho, Sethi, and Ullman <a href=3D"#Aho">[Aho/Ullman]</a>. In many such algo=
rithms, a follow
set is constructed for each position in the regular expression (i.e., each
leaf node in the syntax tree for the regular expression); if any position
has a follow set in which more than one following position is labeled with
the same element type name, then the content model is in error and may be
reported as an error.</p><p>Algorithms exist which allow many but not all=
 non-deterministic content
models to be reduced automatically to equivalent deterministic models; see
Br=C3=BCggemann-Klein 1991 <a href=3D"#ABK">[Br=C3=BCggemann-Klein]</a>.</p=
></div><div class=3D"div1">
<h2><a id=3D"sec-guessing" name=3D"sec-guessing">F Autodetection of Charact=
er Encodings (Non-Normative)</a></h2><p><a id=3D"sec-guessing" name=3D"sec-=
guessing">The XML encoding declaration functions as an internal label on ea=
ch entity,
indicating which character encoding is in use. Before an XML processor can
read the internal label, however, it apparently has to know what character
encoding is in use=E2=80=94which is what the internal label is trying to in=
dicate.
In the general case, this is a hopeless situation. It is not entirely hopel=
ess
in XML, however, because XML limits the general case in two ways: each impl=
ementation
is assumed to support only a finite set of character encodings, and the XML
encoding declaration is restricted in position and content in order to make
it feasible to autodetect the character encoding in use in each entity in
normal cases. Also, in many cases other sources of information are available
in addition to the XML data stream itself. Two cases may be distinguished,
depending on whether the XML entity is presented to the processor without,
or with, any accompanying (external) information. We <span>will</span> cons=
ider

<span>these cases in turn.</span></a></p><div class=3D"div2">
<h3><a id=3D"sec-guessing-no-ext-info" name=3D"sec-guessing-no-ext-info">F.=
1 Detection Without External Encoding Information</a></h3><p><a id=3D"sec-g=
uessing-no-ext-info" name=3D"sec-guessing-no-ext-info">Because each XML ent=
ity not accompanied by external
encoding information and not in UTF-8 or UTF-16 encoding must
begin with an XML encoding declaration, in which the first characters must
be &#x27;<code>&lt;?xml</code>&#x27;, any conforming processor can detect,=
 after two
to four octets of input, which of the following cases apply. In reading this
list, it may help to know that in UCS-4, &#x27;&lt;&#x27; is &quot;
						<code>#x0000003C</code>
					&quot;
and &#x27;?&#x27; is &quot;
						<code>#x0000003F</code>
					&quot;, and the Byte Order Mark
required of UTF-16 data streams is &quot;
						<code>#xFEFF</code>
					&quot;. The notation
<var>##</var> is used to denote any byte value except that two consecutive
<var>##</var>s cannot be both 00.</a></p><p><a id=3D"sec-guessing-no-ext-in=
fo" name=3D"sec-guessing-no-ext-info">With a Byte Order Mark:</a></p><table=
 border=3D"1" frame=3D"border"><tbody><tr><td>
								<code>00 00 FE
FF</code>
							</td><td>UCS-4, big-endian machine (1234 order)</td></tr><tr><td>
								<code>FF
FE 00 00</code>
							</td><td>UCS-4, little-endian machine (4321 order)</td></tr><tr><td>
								<code>00 00 FF FE</code>
							</td><td>UCS-4, unusual octet order (2143)</td></tr><tr><td>
								<code>FE FF 00 00</code>
							</td><td>UCS-4, unusual octet order (3412)</td></tr><tr><td>
								<code>FE FF ## ##</code>
							</td><td>UTF-16, big-endian</td></tr><tr><td>
								<code>FF FE ## ##</code>
							</td><td>UTF-16, little-endian</td></tr><tr><td>
								<code>EF BB BF</code>
							</td><td>UTF-8</td></tr></tbody></table><p><a id=3D"sec-guessing-no-=
ext-info" name=3D"sec-guessing-no-ext-info">Without a Byte Order Mark:</a><=
/p><table border=3D"1" frame=3D"border"><tbody><tr><td>
								<code>00&nbsp;00&nbsp;00&nbsp;3C</code>
							</td><td rowspan=3D"4">UCS-4 or other encoding with a 32-bit code un=
it and ASCII
characters encoded as ASCII values, in respectively big-endian (1234), litt=
le-endian
(4321) and two unusual byte orders (2143 and 3412). The encoding declaration
must be read to determine which of UCS-4 or other supported 32-bit encodings
applies.</td></tr><tr><td>
								<code>3C 00 00 00</code>
							</td></tr><tr><td>
								<code>00 00 3C 00</code>
							</td></tr><tr><td>
								<code>00 3C 00 00</code>
							</td></tr><tr><td>
								<code>00 3C 00 3F</code>
							</td><td>UTF-16BE or big-endian ISO-10646-UCS-2
or other encoding with a 16-bit code unit in big-endian order and ASCII cha=
racters
encoded as ASCII values (the encoding declaration must be read to determine
which)</td></tr><tr><td>
								<code>3C 00 3F 00</code>
							</td><td>UTF-16LE or little-endian
ISO-10646-UCS-2 or other encoding with a 16-bit code unit in little-endian
order and ASCII characters encoded as ASCII values (the encoding declaration
must be read to determine which)</td></tr><tr><td>
								<code>3C 3F 78 6D</code>
							</td><td>UTF-8, ISO 646, ASCII, some part of ISO 8859, Shift-JIS, EU=
C, or any other
7-bit, 8-bit, or mixed-width encoding which ensures that the characters of
ASCII have their normal positions, width, and values; the actual encoding
declaration must be read to detect which of these applies, but since all of
these encodings use the same bit patterns for the relevant ASCII characters,
the encoding declaration itself may be read reliably</td></tr><tr><td>
								<code>4C
6F A7 94</code>
							</td><td>EBCDIC (in some flavor; the full encoding declaration
must be read to tell which code page is in use)</td></tr><tr><td>Other</td>=
<td>UTF-8 without an encoding declaration, or else the data stream is misla=
beled
(lacking a required encoding declaration), corrupt, fragmentary, or enclosed
in a wrapper of some kind</td></tr></tbody></table><div class=3D"note"><p=
 class=3D"prefix"><a id=3D"sec-guessing-no-ext-info" name=3D"sec-guessing-n=
o-ext-info"><b>Note:</b></a></p><p><a id=3D"sec-guessing-no-ext-info" name=
=3D"sec-guessing-no-ext-info">In cases above which do not require reading=
 the encoding declaration to
determine the encoding, section 4.3.3 still requires that the encoding decl=
aration,
if present, be read and that the encoding name be checked to match the actu=
al
encoding of the entity. Also, it is possible that new character encodings
will be invented that will make it necessary to use the encoding declaration
to determine the encoding, in cases where this is not required at present.<=
/a></p></div><p><a id=3D"sec-guessing-no-ext-info" name=3D"sec-guessing-no-=
ext-info">This level of autodetection is enough to read the XML encoding de=
claration
and parse the character-encoding identifier, which is still necessary to di=
stinguish
the individual members of each family of encodings (e.g. to tell UTF-8 from
8859, and the parts of 8859 from each other, or to distinguish the specific
EBCDIC code page in use, and so on).</a></p><p><a id=3D"sec-guessing-no-ext=
-info" name=3D"sec-guessing-no-ext-info">Because the contents of the encodi=
ng declaration are restricted to characters
from the ASCII repertoire (however encoded),
a processor can reliably read the entire encoding declaration as soon as it
has detected which family of encodings is in use. Since in practice, all wi=
dely
used character encodings fall into one of the categories above, the XML enc=
oding
declaration allows reasonably reliable in-band labeling of character encodi=
ngs,
even when external sources of information at the operating-system or transp=
ort-protocol
level are unreliable. Character encodings such as UTF-7
that make overloaded usage of ASCII-valued bytes may fail to be reliably de=
tected.</a></p><p><a id=3D"sec-guessing-no-ext-info" name=3D"sec-guessing-n=
o-ext-info">Once the processor has detected the character encoding in use,=
 it can act
appropriately, whether by invoking a separate input routine for each case,
or by calling the proper conversion function on each character of input.</a=
></p><p><a id=3D"sec-guessing-no-ext-info" name=3D"sec-guessing-no-ext-info=
">Like any self-labeling system, the XML encoding declaration will not work
if any software changes the entity&#x27;s character set or encoding without=
 updating
the encoding declaration. Implementors of character-encoding routines should
be careful to ensure the accuracy of the internal and external information
used to label the entity.</a></p></div><div class=3D"div2">
<h3><a id=3D"sec-guessing-with-ext-info" name=3D"sec-guessing-with-ext-info=
">F.2 Priorities in the Presence of External Encoding Information</a></h3><=
p><a id=3D"sec-guessing-with-ext-info" name=3D"sec-guessing-with-ext-info">=
The second possible case occurs when the XML entity is accompanied by encod=
ing
information, as in some file systems and some network protocols. When multi=
ple
sources of information are available, their relative priority and the prefe=
rred
method of handling conflict should be specified as part of the higher-level
protocol used to deliver XML. In particular, please refer
to </a><a href=3D"#rfc2376">[IETF RFC 3023]</a> or its successor, which def=
ines the <code>text/xml</code>
and <code>application/xml</code> MIME types and provides some useful guidan=
ce.
In the interests of interoperability, however, the following rule is recomm=
ended.</p><ul><li><p>If an XML entity is in a file, the Byte-Order Mark and=
 encoding declaration are used
(if present) to determine the character encoding.</p></li></ul></div></div>=
<div class=3D"div1">
<h2><a id=3D"sec-xml-wg" name=3D"sec-xml-wg">G W3C XML Working Group (Non-N=
ormative)</a></h2><p><a id=3D"sec-xml-wg" name=3D"sec-xml-wg">This specific=
ation was prepared and approved for publication by the W3C
XML Working Group (WG). WG approval of this specification does not necessar=
ily
imply that all WG members voted for its approval. The current and former
participants of the XML WG are:</a></p><ul><li><a id=3D"sec-xml-wg" name=3D=
"sec-xml-wg">Jon Bosak, Sun (<i>Chair</i>) </a></li><li><a id=3D"sec-xml-wg=
" name=3D"sec-xml-wg">James Clark (<i>Technical Lead</i>) </a></li><li><a=
 id=3D"sec-xml-wg" name=3D"sec-xml-wg">Tim Bray, Textuality and Netscape (<=
i>XML Co-editor</i>) </a></li><li><a id=3D"sec-xml-wg" name=3D"sec-xml-wg">=
Jean Paoli, Microsoft (<i>XML Co-editor</i>) </a></li><li><a id=3D"sec-xml-=
wg" name=3D"sec-xml-wg">C. M. Sperberg-McQueen, U. of Ill. (<i>XML Co-edito=
r</i>) </a></li><li><a id=3D"sec-xml-wg" name=3D"sec-xml-wg">Dan Connolly,=
 W3C (<i>W3C Liaison</i>) </a></li><li><a id=3D"sec-xml-wg" name=3D"sec-xml=
-wg">Paula Angerstein, Texcel</a></li><li><a id=3D"sec-xml-wg" name=3D"sec-=
xml-wg">Steve DeRose, INSO</a></li><li><a id=3D"sec-xml-wg" name=3D"sec-xml=
-wg">Dave Hollander, HP</a></li><li><a id=3D"sec-xml-wg" name=3D"sec-xml-wg=
">Eliot Kimber, ISOGEN</a></li><li><a id=3D"sec-xml-wg" name=3D"sec-xml-wg"=
>Eve Maler, ArborText</a></li><li><a id=3D"sec-xml-wg" name=3D"sec-xml-wg">=
Tom Magliery, NCSA</a></li><li><a id=3D"sec-xml-wg" name=3D"sec-xml-wg">Mur=
ray Maloney, SoftQuad, Grif SA, Muzmo and Veo Systems</a></li><li><a id=3D"=
sec-xml-wg" name=3D"sec-xml-wg">MURATA Makoto (FAMILY Given), Fuji Xerox In=
formation Systems</a></li><li><a id=3D"sec-xml-wg" name=3D"sec-xml-wg">Joel=
 Nava, Adobe</a></li><li><a id=3D"sec-xml-wg" name=3D"sec-xml-wg">Conleth=
 O&#x27;Connell, Vignette</a></li><li><a id=3D"sec-xml-wg" name=3D"sec-xml-=
wg">Peter Sharpe, SoftQuad</a></li><li><a id=3D"sec-xml-wg" name=3D"sec-xml=
-wg">John Tigue, DataChannel</a></li></ul></div><div class=3D"div1">
<h2><a id=3D"sec-core-wg" name=3D"sec-core-wg">H W3C XML Core Working Group=
 (Non-Normative)</a></h2><p><a id=3D"sec-core-wg" name=3D"sec-core-wg">The=
 <span>fifth</span> edition of this specification was prepared by the W3C=
 XML Core
Working Group (WG). The participants in the WG at the time of publication=
 of this
edition were:</a></p><ul><li><a id=3D"sec-core-wg" name=3D"sec-core-wg">Joh=
n Cowan, Google</a></li><li><a id=3D"sec-core-wg" name=3D"sec-core-wg">Andr=
ew Fang, PTC-Arbortext</a></li><li><a id=3D"sec-core-wg" name=3D"sec-core-w=
g">Paul Grosso, PTC-Arbortext (<i>Co-Chair</i>) </a></li><li><a id=3D"sec-c=
ore-wg" name=3D"sec-core-wg">Konrad Lanz, A-SIT</a></li><li><a id=3D"sec-co=
re-wg" name=3D"sec-core-wg">Glenn Marcy, IBM</a></li><li><a id=3D"sec-core-=
wg" name=3D"sec-core-wg">Henry Thompson, W3C (<i>Staff Contact</i>) </a></l=
i><li><a id=3D"sec-core-wg" name=3D"sec-core-wg">Richard Tobin, University=
 of Edinburgh</a></li><li><a id=3D"sec-core-wg" name=3D"sec-core-wg">Daniel=
 Veillard</a></li><li><a id=3D"sec-core-wg" name=3D"sec-core-wg">Norman Wal=
sh, Mark Logic (<i>Co-Chair</i>) </a></li><li><a id=3D"sec-core-wg" name=3D=
"sec-core-wg">Fran=C3=A7ois Yergeau</a></li></ul></div><div class=3D"div1">
<h2><a id=3D"prod-notes" name=3D"prod-notes">I Production Notes (Non-Normat=
ive)</a></h2><p><a id=3D"prod-notes" name=3D"prod-notes">This edition was=
 encoded in a
slightly modified version of the
</a><a href=3D"http://www.w3.org/2002/xmlspec/dtd/2.10/xmlspec.dtd">XMLspec=
 DTD, v2.10</a>.
The XHTML versions were produced with a combination of the
<a href=3D"http://www.w3.org/2002/xmlspec/xhtml/1.13/xmlspec.xsl">xmlspec.x=
sl</a>,
<a href=3D"http://www.w3.org/2002/xmlspec/xhtml/1.13/diffspec.xsl">diffspec=
.xsl</a>,
and <a href=3D"REC-xml.xsl">REC-xml.xsl</a>
XSLT stylesheets.</p></div><div class=3D"div1">
<h2><a id=3D"sec-suggested-names" name=3D"sec-suggested-names">J Suggestion=
s for XML Names (Non-Normative)</a></h2><p><a id=3D"sec-suggested-names" na=
me=3D"sec-suggested-names">The following suggestions define what is believe=
d to be best
				practice in the construction of XML names used as element names,
				attribute names, processing instruction targets, entity names,
				notation names, and the values of attributes of type ID, and are
				intended as guidance for document authors and schema designers.
				All references to Unicode are understood with respect to
				a particular version of the Unicode Standard greater than or equal
				to 5.0; which version should be used is left to the discretion of
				the document author or schema designer.</a></p><p><a id=3D"sec-suggeste=
d-names" name=3D"sec-suggested-names">The first two suggestions are directl=
y derived from the rules
				given for identifiers in Standard Annex #31 (UAX #31) of the Unicode St=
andard, version 5.0 </a><a href=3D"#Unicode">[Unicode]</a>, and
				exclude all control characters, enclosing nonspacing marks,
				non-decimal numbers, private-use characters, punctuation characters
				(with the noted exceptions), symbol characters, unassigned
				codepoints, and white space characters. The other suggestions
				are mostly derived from Appendix B in previous editions of this specifi=
cation.</p><ol class=3D"enumar"><li><p>The first character of any name shou=
ld have a Unicode property
						of ID_Start, or else be &#x27;_&#x27; #x5F.</p></li><li><p>Characters=
 other than the first should have a Unicode property
						of ID_Continue, or be one of the characters listed in the table
						entitled &quot;Characters for Natural Language Identifiers&quot; in=
 UAX
						#31, with the exception of &quot;&#x27;&quot; #x27 and &quot;=E2=80=
=99&quot; #x2019.</p></li><li><p>Characters in names should be expressed us=
ing
Normalization Form C as defined in <a href=3D"#unipart15">[UnicodeNormal]</=
a>.</p></li><li><p>Ideographic characters which have a canonical decomposit=
ion
						(including those in the ranges [#xF900-#xFAFF] and
						[#x2F800-#x2FFFD], with 12 exceptions) should not be used in names.
					</p></li><li><p>Characters which have a compatibility decomposition (t=
hose with
						a &quot;compatibility formatting tag&quot; in field 5 of the Unicode
						Character Database -- marked by field 5 beginning with a &quot;&lt;&q=
uot;)
						should not be used in names.  This suggestion does not apply
						to characters which
						despite their compatibility decompositions are in regular use in
						their scripts, for
example #x0E33 THAI CHARACTER SARA AM or #x0EB3 LAO CHARACTER AM.</p></li><=
li><p>Combining characters meant for use with symbols only (including
						those in the ranges [#x20D0-#x20EF] and [#x1D165-#x1D1AD]) should
						not be used in names.</p></li><li><p>The interlinear annotation chara=
cters ([#xFFF9-#xFFFB]) should
						not be used in names.</p></li><li><p>Variation selector characters sh=
ould not be used in names.</p></li><li><p>Names which are nonsensical, unpr=
onounceable, hard to read, or
						easily confusable with other names should not be employed.</p></li></=
ol></div></div></body></html>
------=_NextPart_000_0000_9D684512.DD4AC728
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: http://www.w3.org/StyleSheets/TR/W3C-REC.css


/* Style for a "Recommendation" */

/*
   Copyright 1997-2003 W3C (MIT, ERCIM, Keio). All Rights Reserved.
   The following software licensing rules apply:
   http://www.w3.org/Consortium/Legal/copyright-software */

/* $Id: base.css,v 1.25 2006/04/18 08:42:53 bbos Exp $ */

body {
  padding: 2em 1em 2em 70px;
  margin: 0;
  font-family: sans-serif;
  color: black;
  background: white;
  background-position: top left;
  background-attachment: fixed;
  background-repeat: no-repeat;
}
:link { color: #00C; background: transparent }
:visited { color: #609; background: transparent }
a:active { color: #C00; background: transparent }

a:link img, a:visited img { border-style: none } /* no border on img links=
 */

a img { color: white; }        /* trick to hide the border in Netscape 4 */
@media all {                   /* hide the next rule from Netscape 4 */
  a img { color: inherit; }    /* undo the color change above */
}

th, td { /* ns 4 */
  font-family: sans-serif;
}

h1, h2, h3, h4, h5, h6 { text-align: left }
/* background should be transparent, but WebTV has a bug */
h1, h2, h3 { color: #005A9C; background: white }
h1 { font: 170% sans-serif }
h2 { font: 140% sans-serif }
h3 { font: 120% sans-serif }
h4 { font: bold 100% sans-serif }
h5 { font: italic 100% sans-serif }
h6 { font: small-caps 100% sans-serif }

.hide { display: none }

div.head { margin-bottom: 1em }
div.head h1 { margin-top: 2em; clear: both }
div.head table { margin-left: 2em; margin-top: 2em }

p.copyright { font-size: small }
p.copyright small { font-size: small }

@media screen {  /* hide from IE3 */
a[href]:hover { background: #ffa }
}

pre { margin-left: 2em }
/*
p {
  margin-top: 0.6em;
  margin-bottom: 0.6em;
}
*/
dt, dd { margin-top: 0; margin-bottom: 0 } /* opera 3.50 */
dt { font-weight: bold }

pre, code { font-family: monospace } /* navigator 4 requires this */

ul.toc, ol.toc {
  list-style: disc;		/* Mac NS has problem with 'none' */
  list-style: none;
}

@media aural { =20
  h1, h2, h3 { stress: 20; richness: 90 }
  .hide { speak: none }
  p.copyright { volume: x-soft; speech-rate: x-fast }
  dt { pause-before: 20% }
  pre { speak-punctuation: code }=20
}



body {
  background-image: url(http://www.w3.org/StyleSheets/TR/logo-REC);
}


------=_NextPart_000_0000_9D684512.DD4AC728
Content-Type: application/octet-stream
Content-Transfer-Encoding: base64
Content-Location: http://www.w3.org/StyleSheets/TR/logo-REC

iVBORw0KGgoAAAANSUhEUgAAABoAAAF9CAMAAAAtEoiqAAAABGdBTUEAAK/INwWK6QAAABl0RVh0
U29mdHdhcmUAQWRvYmUgSW1hZ2VSZWFkeXHJZTwAAAA5UExURQBanA9koh9uqC94rj+DtE+Nul+X
wW+ix3+szY+205/B2a/L4L/V5sDW58/g7N/q8u/0+PD1+f///ycSllAAAAOoSURBVGje7ZjJrvM2
DIWpwTItMxJ73v9hu3CcRBYZ3PujXbSwVgE+KOZwONhE3nnQjW50o/8fijnnnPOMlo7jTCgCEBER
mdCKPTjPWpE9MyLYRQ0bMzPzhDLgWZjkPL+LRqxNZbVQUgBACzPqaEsuis2wsAciStAJ8dPlhuAh
QbyiBXLESy0z9hxKR/2V8ZR2Refwc9lwDZHPMyIge0nZdvfWR/i5GDFkIqKg6iESpBGFvKLmnHPB
FN76MnDWRkUXERE2AlX5i2wOFw2/QmFmZpmzTO20w8iybq0zazVks1HRQJuaKGilff7DhB4Ox2cz
KoRCA8pPBSDDGRCGMyBm5orGzMwdRnM4U/mlUmgO1LO+mlUOfc2sYLccxEzlJlLLb7vo4gp7d3vU
AvU6G6N4zypYXDN683pv6k9ly2+6aMjnsQdHopOM4RVAqBqRDx1dhSI6WZ1NhKhbAlhIhKg9B8gg
m41EKNlDam2yqFHmxIfDGq1UCtC38EsBJFcA1Q1vBsQVAP+BAIIvAMquAEJ3LSxoiyMA9s1IWF0L
m3p/+C9Mc3LVW9R9FqDOsxg7ubuNG42o7i0q2D3ZtH+4byw+IumebL4k5Qv6npTEXIKFwg4AWsgs
on1rOKM8lnkiIjZGQHmuQt2fKTK3lC+3IlCIQrVaygY0UcBqlQwAfTGjEV76vPYojkSUZTMk2omI
Avwx+mWr7Na+0cOR0blgFa1kVmurXL5slXETkdXpojHZ2gibQkisVaQBEMrm4GhRhEhhlsMxONIc
qJVEKBgbUYJmkdispeLZzDVZWVYAkmyXUw5Ei1cpYfOKKPdrUmIVqYHCDug6oKAA0GIDJI5mbFDe
FPqurhdqWIiWt0/DOvdc6slFZCF3CfyC8nD+a6/SOYfX2/SIlnO/f3aPD1TPoiKq52h5nMvr8u6z
akR+/G2i7KNB8/r5LFwslPceO1qYcVpfpra8AbKEsAheE/MxrUP73BwWAYBW7ObwivFPkxJW5khx
mxvR8QLACgB9XAIFkAZAt00vLgMr0Q7kOVDA0YmO32lE4XyxjZdbH1nmS2dLOb4iL6NsSnBdhtbo
oA5Aih2oZQegWzTDG/lyddyWh6uX0bYCsL5UpKqff/l+bS/tYsjjnCY6mf9uKaPlA2rXYD0+za7J
LPPD48+rj8njGu2PaWx/WLi68LlvyOjCg1yf3xKdfH65fM3x+wU83h8/b3SjG93oRje60Y1udKMb
3ehGN7qRgx7e+etvdyJSfbV7i+MAAAAASUVORK5CYII=
------=_NextPart_000_0000_9D684512.DD4AC728
Content-Type: application/octet-stream
Content-Transfer-Encoding: base64
Content-Location: http://www.w3.org/Icons/w3c_home

iVBORw0KGgoAAAANSUhEUgAAAEgAAAAwCAMAAACFQszZAAADAFBMVEUAAAABAQECAgIFBQUGBgYI
CAgMDAwODg4SEhIUFBQVFRUYGBgaGhodHR0fHx8gICAmJiYoKCgsLCwxMTE1NTU2NjY3Nzc4ODg7
Ozs/Pz9ERERFRUVGRkZJSUlOTk5PT09WVlZdXV1eXl5gYGBhYWFkZGRnZ2dsbGxtbW1vb29wcHBx
cXF0dHR8fHwAWpwBW5wCW50DXJ0EXZ4FXZ4GXp4IX58JYJ8LYaAMYqEOY6EPZKISZqMTZqMUZ6QW
aKUYaqUaa6Yba6Yebagfbqggb6ghb6kjcaokcaoodKwtd60yeq80fLA1fLE3frE4frI5f7I6gLM8
gbNBhLVChbZEhrZHiLhJibhKirlLi7lOjLpRjrtVkb1ZlL9alL9blb9dlsBfl8FimcJnncRpnsVq
n8Vrn8ZsoMZtocZuocdvosdxo8hzpMl1psl3p8p4qMt6qct8qsx9q81+rM2BgYGEhISJiYmKioqM
jIyNjY2Pj4+RkZGSkpKWlpaXl5eYmJiampqdnZ2fn5+goKChoaGioqKlpaWmpqaoqKiqqqqrq6us
rKytra2vr6+xsbGysrKzs7O0tLS3t7e5ubm8vLy/v7+Crs6Dr8+FsNCGsdCHsdCIstGLtNKMtdKW
u9aXvNeYvNeZvdebvtigwtqkxNylxdyox92qyN6vy+CwzOCxzeGyzeG0zuK30OO70+W81OW+1ebB
wcHCwsLDw8PFxcXGxsbHx8fNzc3Ozs7Pz8/T09PY2NjZ2dnb29vc3Nzd3d3f39/A1ufB1+fD2OjF
2ejH2+nI2+rK3erL3evM3uvN3uvO3+vN3+zR4e3S4u7T4+7U4+7V5O/X5e/Y5e/Z5vDa5vDb6PHc
6PHg4ODh4eHk5OTn5+fp6enr6+vt7e3u7u7h7PPi7PTk7vXn7/bp8fbq8ffr8vft8/ju9Pjw8PDy
8vL09PT19fX39/fw9fnz9/r0+Pv2+fz3+vz5+fn7+/v4+vz5+/36/P37/P38/Pz9/f38/f79/v7+
/v7+/v/////MzMyRmidfAAAAAWJLR0QAiAUdSAAAAAlwSFlzAAAASAAAAEgARslrPgAABClJREFU
SMftlwlUlFUUxx9UQ2JpViRkiJW08zEwhAZBhQZMKAa2TBFFIbRQZBISGNECibZHVChTZkQREUbR
BrTQoqMg0b4QhBiyCBEUEgzveO973+P7ZhgGzsFz6py858D3f/e773e++9679wE5hhwScyFmldFp
GJnO5MOgfxP07U6TqV121JlMpl7lfTsMTTsU67Wa3wk/5pomGRQnSVKy/CYatFEJTJYsrZZ5B9Ld
XM75EdUZlFal5T2a1s1AxRChl2cWgjYoIL0V6HN0dpyIh1nzCKXvOjTTtA3nLqxYx0A9Oghp4TMb
Qfr3CU6LFSdiBJxDrrwsjnyLepCKnx/POdOzOp2MyycUdKkAGWEQcAWzpSC92QdliAKbtc2BPNSV
nfOEx4AMUudzG+h4ATLAYBNTf4WBvB5VvzMhDvOysk9zJBri9CvNeKbm7dyNZFw+5aBDZE6fPwy+
Z7IA1OJWVNmEHLUexTtATIGVfyAz82lxjlT5fIVrUc91KchwpvZcAPI5Jj0IyeWvP9DM6LQ6kLcq
+WCaUgHX8SCTqDghl/7Jtl5DThezs+6hViBVPrjwUhTXISDLUWz3BvUq81UTx2oxe2i/NWgwQOTD
joLkww56Pe7ZIIjRSFAreehTxH3CEgGLEfkU8wNTJBY4BsXLIHx388gccq890FaRTxwHxaKOArEV
nr2XgLhRjryPVNkDtWl5PsMXwj6FS1LgMBSsjyRp2+DlakRrr+Zbud7pH3sgupznU4v7lMSrswge
kfjufP6Vui04yDuO2gXl83yw2j8p590gVqybqDRvzPPDk+yDdkksHz3+xj3U0+FAsZNlZSX54Uha
BJVtnm8fNHox5tPCv+s67Aa1qlqh9MDtSLoJVIp9EDvFyUa+Urg6xmR19YJdg9UGBfn+JCCsKz1U
u66d75dBr+4nYF/iJ70Bx3kSEKt0P0mKlk+Qn0WHQwsCz/N0AlPdIga+NYWoN3NtsIhdAZ6EKYCM
fHIj6kaujRaxV4HnhimAeH8O44NQdm5+s4i9HFyJv1jONw+MB/Ebg7cfegvqyywnXQSuNU92Wfge
fM8GiN1h5Vy/ifou/M479X9wVwO6XmvyUnN+Ovp+G6Ba0X6o3KC+oPQVOAjPclcC9pLfqedjyoxu
N3KWDdBIsNx+0KBBBcMl1uoLXeF1dHyGHe9aSj92zhMxXacQ8rANEPaiIqGhQcXhcxX2y5s//e4l
/EQt3mupR9zdz0IqjydkvtkWqFhusWh7faRifO5borpoE9EzdDI59ryc3LVzHQiZ3UxtgXp0Ucog
StfDnnVBY5wr/2aeDldx1c75iNoE0egCRRdEy+KbZRyjTRAF0322I+O4N9MJQC98reiGF8c2oSQu
InzlHQ2qwB9ST13gVame+h/90+//AjLbsimAZh6af7NOOAhIdkqdYiybxQAAAABJRU5ErkJggg==

------=_NextPart_000_0000_9D684512.DD4AC728--
